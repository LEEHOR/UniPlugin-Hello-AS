//{"version":"3.8.4","encode":"base64"}
var __UniServiceStartTime__ = Date.now();var global=this; var process={env:{}}; var setTimeout=global.setTimeout;
(()=>{var sP=Object.defineProperty;var lP=(v,l)=>{for(var b in l)sP(v,b,{get:l[b],enumerable:!0})};var ps=Object.freeze;function Eu({getCurrentPages:v,uni:l,UniShared:b,Vue:T,VueShared:k}){var C=function(d,m,R,We){"use strict";function Pt(){let Ke=v(),dt=Ke.length;if(dt)return Ke[dt-1]}function en(){let Ke=Pt();if(Ke)return Ke.$vm}function pe(Ke,dt,St){if(R.isString(Ke))St=dt,dt=Ke,Ke=en();else if(typeof Ke=="number"){let kn=v().find(Zt=>Zt.$page.id===Ke);kn?Ke=kn.$vm:Ke=en()}if(!Ke)return;if(Ke.__call_hook)return Ke.__call_hook(dt,St);let tn=Ke.$[dt];return tn&&m.invokeArrayFns(tn,St)}function O(Ke,dt,St,tn){R.isFunction(dt)&&We.injectHook(Ke,dt.bind(St),tn)}function Nt(Ke,dt,St){var tn;let kn=Ke.mpType||St.$mpType;if(!(!kn||kn==="component")&&(Object.keys(Ke).forEach(Zt=>{if(m.isUniLifecycleHook(Zt,Ke[Zt],!1)){let Ln=Ke[Zt];R.isArray(Ln)?Ln.forEach(Nr=>O(Zt,Nr,St,dt)):O(Zt,Ln,St,dt)}}),kn==="page")){dt.__isVisible=!0;try{pe(St,m.ON_LOAD,dt.attrs.__pageQuery),delete dt.attrs.__pageQuery,((tn=St.$page)===null||tn===void 0?void 0:tn.openType)!=="preloadPage"&&pe(St,m.ON_SHOW)}catch(Zt){console.error(Zt.message+m.LINEFEED+Zt.stack)}}}function jn(Ke,dt){_t(dt,Ke.$renderjs,Ke["$"+m.RENDERJS_MODULES])}function _t(Ke,dt,St={}){if(!R.isArray(dt))return;let tn=Ke.uid,kn=Ke.$wxsModules||(Ke.$wxsModules=[]),Zt=Ke.ctx;dt.forEach(Ln=>{St[Ln]&&(Zt[Ln]=K(tn,St[Ln],Ln),kn.push(Ln))})}function K(Ke,dt,St){let tn={};return new Proxy(tn,{get(kn,Zt){return tn[Zt]||(tn[Zt]=re(Ke,dt,St,Zt))}})}function re(Ke,dt,St,tn){let kn=()=>{},Zt=()=>m.WXS_PROTOCOL+JSON.stringify([Ke,dt,St+"."+tn]);return new Proxy(kn,{get(Ln,Nr){return Nr==="toJSON"?Zt:kn[Nr]||(kn[Nr]=re(Ke,dt,St+"."+tn,Nr))},apply(Ln,Nr,Ur){return m.WXS_PROTOCOL+JSON.stringify([Ke,dt,St+"."+tn,[...Ur]])}})}function Dn(Ke,dt){_t(dt,Ke.$wxs,Ke["$"+m.WXS_MODULES])}function fn(Ke,dt,St){Dn(Ke,dt),jn(Ke,dt),Nt(Ke,dt,St)}function Jt(Ke,dt,St){return Ke[dt]=St}function cn(Ke){return function(St,tn,kn){if(!tn)throw St;let Zt=Ke._instance;if(!Zt||!Zt.proxy)throw St;pe(Zt.proxy,m.ON_ERROR,St)}}function Ir(Ke,dt){return Ke?[...new Set([].concat(Ke,dt))]:dt}function wi(Ke){m.UniLifecycleHooks.forEach(dt=>{Ke[dt]=Ir})}let qn,hn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",Vt=/^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;typeof atob!="function"?qn=function(Ke){if(Ke=String(Ke).replace(/[\t\n\f\r ]+/g,""),!Vt.test(Ke))throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");Ke+="==".slice(2-(Ke.length&3));for(var dt,St="",tn,kn,Zt=0;Zt<Ke.length;)dt=hn.indexOf(Ke.charAt(Zt++))<<18|hn.indexOf(Ke.charAt(Zt++))<<12|(tn=hn.indexOf(Ke.charAt(Zt++)))<<6|(kn=hn.indexOf(Ke.charAt(Zt++))),St+=tn===64?String.fromCharCode(dt>>16&255):kn===64?String.fromCharCode(dt>>16&255,dt>>8&255):String.fromCharCode(dt>>16&255,dt>>8&255,dt&255);return St}:qn=atob;function Nn(Ke){return decodeURIComponent(qn(Ke).split("").map(function(dt){return"%"+("00"+dt.charCodeAt(0).toString(16)).slice(-2)}).join(""))}function yn(){let Ke=l.getStorageSync("uni_id_token")||"",dt=Ke.split(".");if(!Ke||dt.length!==3)return{uid:null,role:[],permission:[],tokenExpired:0};let St;try{St=JSON.parse(Nn(dt[1]))}catch(tn){throw new Error("\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u51FA\u9519\uFF0C\u8BE6\u7EC6\u9519\u8BEF\u4FE1\u606F\u4E3A\uFF1A"+tn.message)}return St.tokenExpired=St.exp*1e3,delete St.exp,delete St.iat,St}function xn(Ke){Ke.uniIDHasRole=function(dt){let{role:St}=yn();return St.indexOf(dt)>-1},Ke.uniIDHasPermission=function(dt){let{permission:St}=yn();return this.uniIDHasRole("admin")||St.indexOf(dt)>-1},Ke.uniIDTokenValid=function(){let{tokenExpired:dt}=yn();return dt>Date.now()}}function Pr(Ke){let dt=Ke._context.config;dt.errorHandler=m.invokeCreateErrorHandler(Ke,cn),wi(dt.optionMergeStrategies);let St=dt.globalProperties;xn(St),St.$set=Jt,St.$applyOptions=fn,m.invokeCreateVueAppHook(Ke)}return d.initApp=Pr,Object.defineProperty(d,"__esModule",{value:!0}),d}({},b,k,T);return C}function of(v,{nvue:l,UniShared:b,VueShared:T,VueReactivity:k}){let C={platform:l.config.env.platform,UniShared:b,VueShared:T,VueReactivity:k};return v(C,l.document)}function cP({setTimeout:v,clearTimeout:l,uni:b,getCurrentPages:T,Vue:k,weex:C,plus:d,BroadcastChannel:m,UniViewJSBridge:R,VueShared:We,UniShared:Pt,__uniConfig:en}){var pe=function(O,Nt,jn){"use strict";let _t=["navigate","redirect","switchTab","reLaunch","navigateBack"],K=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],re=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],Dn={hoverClass:{type:String,default:"navigator-hover"},url:{type:String,default:""},openType:{type:String,default:"navigate",validator(y){return Boolean(~_t.indexOf(y))}},delta:{type:Number,default:1},hoverStartTime:{type:[Number,String],default:50},hoverStayTime:{type:[Number,String],default:600},exists:{type:String,default:""},hoverStopPropagation:{type:Boolean,default:!1},animationType:{type:String,default:"",validator(y){return!y||K.concat(re).includes(y)}},animationDuration:{type:[String,Number],default:300}};function fn(y){return()=>{if(y.openType!=="navigateBack"&&!y.url){console.error("<navigator/> should have url attribute when using navigateTo, redirectTo, reLaunch or switchTab");return}let M=parseInt(y.animationDuration);switch(y.openType){case"navigate":b.navigateTo({url:y.url,animationType:y.animationType||"pop-in",animationDuration:M});break;case"redirect":b.redirectTo({url:y.url,exists:y.exists});break;case"switchTab":b.switchTab({url:y.url});break;case"reLaunch":b.reLaunch({url:y.url});break;case"navigateBack":b.navigateBack({delta:y.delta,animationType:y.animationType||"pop-out",animationDuration:M});break}}}function Jt(y){if(y.hoverClass&&y.hoverClass!=="none"){let M={hoverClass:y.hoverClass};return Nt.hasOwn(y,"hoverStartTime")&&(M.hoverStartTime=y.hoverStartTime),Nt.hasOwn(y,"hoverStayTime")&&(M.hoverStayTime=y.hoverStayTime),Nt.hasOwn(y,"hoverStopPropagation")&&(M.hoverStopPropagation=y.hoverStopPropagation),M}return{}}function cn(y,M){return O.createElementVNode("u-text",Nt.extend({appendAsTree:!0},M),y)}let Ir=[{"navigator-hover":{"":{backgroundColor:"rgba(0,0,0,0.1)",opacity:.7}}}],wi=O.defineComponent({name:"Navigator",props:Dn,styles:Ir,setup(y,{slots:M}){let W=fn(y);return()=>O.createVNode("view",O.mergeProps(Jt(y),{onClick:W}),[M.default&&M.default()])}});function qn(y){return Symbol(y)}function hn(){let y;try{y=O.getCurrentInstance().root.proxy.$page.id}catch(M){let W=d.webview.currentWebview().id;y=isNaN(Number(W))?W:Number(W)}return y}let Vt,Nn,yn;function xn(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function Pr(){return Vt.webview.currentWebview().id}let Ke,dt,St={};function tn(y){let M=y.data&&y.data.__message;if(!M||!M.__page)return;let W=M.__page,H=St[W];H&&H(M),M.keep||delete St[W]}function kn(y,M){xn()==="v8"?yn?(Ke&&Ke.close(),Ke=new yn(Pr()),Ke.onmessage=tn):dt||(dt=Nn.requireModule("globalEvent"),dt.addEventListener("plusMessage",tn)):window.__plusMessage=tn,St[y]=M}class Zt{constructor(M){this.webview=M}sendMessage(M){let W=JSON.parse(JSON.stringify({__message:{data:M}})),H=this.webview.id;yn?new yn(H).postMessage(W):Vt.webview.postMessageToUniNView&&Vt.webview.postMessageToUniNView(W,H)}close(){this.webview.close()}}function Ln({context:y={},url:M,data:W={},style:H={},onMessage:Q,onClose:ee}){let he=en.darkmode;Vt=y.plus||d,Nn=y.weex||(typeof C=="object"?C:null),yn=y.BroadcastChannel||(typeof m=="object"?m:null);let me={autoBackButton:!0,titleSize:"17px"},we=`page${Date.now()}`;H=Nt.extend({},H),H.titleNView!==!1&&H.titleNView!=="none"&&(H.titleNView=Nt.extend(me,H.titleNView));let Be={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${M}.js`,defaultFontSize:16,viewport:Vt.screen.resolutionWidth}};H=Nt.extend(Be,H);let Se=Vt.webview.create("",we,H,{extras:{from:Pr(),runtime:xn(),data:Nt.extend({},W,{darkmode:he}),useGlobalEvent:!yn}});return Se.addEventListener("close",ee),kn(we,je=>{Nt.isFunction(Q)&&Q(je.data),je.keep||Se.close("auto")}),Se.show(H.animationType,H.animationDuration),new Zt(Se)}let Nr={for:{type:String,default:""}},Ur=qn("ul");function Fi(){let y=[];return O.provide(Ur,{addHandler(M){y.push(M)},removeHandler(M){y.splice(y.indexOf(M),1)}}),y}let lr=O.defineComponent({name:"Label",props:Nr,styles:[],setup(y,{slots:M}){let W=hn(),H=Fi(),Q=ee=>{y.for?R.emit(`uni-label-click-${W}-${y.for}`,ee,!0):H.length&&H[0](ee,!0)};return()=>O.createVNode("view",{onClick:Q},[M.default&&M.default()])}});function Er(y,M){Vi(y.id,M),O.watch(()=>y.id,(W,H)=>{Go(H,M,!0),Vi(W,M,!0)}),O.onUnmounted(()=>{Go(y.id,M)})}function Vi(y,M,W){let H=hn();W&&!y||!Nt.isPlainObject(M)||Object.keys(M).forEach(Q=>{W?Q.indexOf("@")!==0&&Q.indexOf("uni-")!==0&&R.on(`uni-${Q}-${H}-${y}`,M[Q]):Q.indexOf("uni-")===0?R.on(Q,M[Q]):y&&R.on(`uni-${Q}-${H}-${y}`,M[Q])})}function Go(y,M,W){let H=hn();W&&!y||!Nt.isPlainObject(M)||Object.keys(M).forEach(Q=>{W?Q.indexOf("@")!==0&&Q.indexOf("uni-")!==0&&R.off(`uni-${Q}-${H}-${y}`,M[Q]):Q.indexOf("uni-")===0?R.off(Q,M[Q]):y&&R.off(`uni-${Q}-${H}-${y}`,M[Q])})}function Yo(y){return Object.keys(y).map(M=>[M,y[M]])}let kr=["class","style"],Rr=/^on[A-Z]+/,xr=(y={})=>{let{excludeListeners:M=!1,excludeKeys:W=[]}=y,H=O.getCurrentInstance(),Q=O.shallowRef({}),ee=O.shallowRef({}),he=O.shallowRef({}),me=W.concat(kr);return H.attrs=O.reactive(H.attrs),O.watchEffect(()=>{let we=Yo(H.attrs).reduce((Be,[Se,je])=>(me.includes(Se)?Be.exclude[Se]=je:Rr.test(Se)?(M||(Be.attrs[Se]=je),Be.listeners[Se]=je):Be.attrs[Se]=je,Be),{exclude:{},attrs:{},listeners:{}});Q.value=we.attrs,ee.value=we.listeners,he.value=we.exclude}),{$attrs:Q,$listeners:ee,$excludeAttrs:he}},Ui={id:{type:String,default:""},hoverClass:{type:String,default:"button-hover"},hoverStartTime:{type:[Number,String],default:20},hoverStayTime:{type:[Number,String],default:70},hoverStopPropagation:{type:Boolean,default:!1},disabled:{type:[Boolean,String],default:!1},formType:{type:String,default:""},openType:{type:String,default:""},loading:{type:[Boolean,String],default:!1},plain:{type:[Boolean,String],default:!1}},Yr=qn("uf"),Ta=[{ub:{"":{flexDirection:"row",alignItems:"center",justifyContent:"center",position:"relative",paddingLeft:"5",paddingRight:"5",overflow:"hidden",color:"#000000",backgroundColor:"#f8f8f8",borderRadius:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#dbdbdb"}},"ub-t":{"":{color:"#000000",fontSize:"18",textDecoration:"none",lineHeight:"46"}},"ub-d":{"":{backgroundColor:"#f8f8f8"}},"ub-p":{"":{backgroundColor:"#007aff",borderColor:"#0062cc"}},"ub-w":{"":{backgroundColor:"#e64340",borderColor:"#b83633"}},"ub-d-t":{"":{color:"#000000"}},"ub-p-t":{"":{color:"#ffffff"}},"ub-w-t":{"":{color:"#ffffff"}},"ub-d-d":{"":{backgroundColor:"#f7f7f7"}},"ub-p-d":{"":{backgroundColor:"#63acfc",borderColor:"#4f8aca"}},"ub-w-d":{"":{backgroundColor:"#ec8b89",borderColor:"#bd6f6e"}},"ub-d-t-d":{"":{color:"#cccccc"}},"ub-p-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-plain":{"":{borderColor:"#353535",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-plain":{"":{borderColor:"#007aff",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-plain":{"":{borderColor:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-plain":{"":{color:"#353535"}},"ub-p-t-plain":{"":{color:"#007aff"}},"ub-w-t-plain":{"":{color:"#e64340"}},"ub-d-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-p-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-w-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-mini":{"":{lineHeight:"30",fontSize:"13",paddingTop:0,paddingRight:"17.5",paddingBottom:0,paddingLeft:"17.5"}},"ub-loading":{"":{width:"18",height:"18",marginRight:"10"}},"ub-d-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-loading-plain":{"":{color:"#353535"}},"ub-p-loading-plain":{"":{color:"#007aff",backgroundColor:"#0062cc"}},"ub-w-loading-plain":{"":{color:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-hover":{"":{opacity:.8,backgroundColor:"#dedede"}},"ub-p-hover":{"":{opacity:.8,backgroundColor:"#0062cc"}},"ub-w-hover":{"":{opacity:.8,backgroundColor:"#ce3c39"}},"ub-d-t-hover":{"":{color:"rgba(0,0,0,0.6)"}},"ub-p-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-hover-plain":{"":{color:"rgba(53,53,53,0.6)",borderColor:"rgba(53,53,53,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-hover-plain":{"":{color:"rgba(26,173,25,0.6)",borderColor:"rgba(0,122,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-hover-plain":{"":{color:"rgba(230,67,64,0.6)",borderColor:"rgba(230,67,64,0.6)",backgroundColor:"rgba(0,0,0,0)"}}}],$i={default:"d",primary:"p",warn:"w"},mo=O.defineComponent({inheritAttrs:!1,name:"Button",props:Nt.extend(Ui,{type:{type:String,default:"default"},size:{type:String,default:"default"}}),styles:Ta,setup(y,{slots:M,attrs:W}){let{$attrs:H,$excludeAttrs:Q,$listeners:ee}=xr({excludeListeners:!0}),he=y.type,me=O.ref(null),we=O.inject(Yr,!1),Be=(Et,Je)=>{let Mt=ee.value.onClick||(()=>{});if(y.disabled)return;Mt(Et);let _n=y.formType;if(_n){if(!we)return;_n==="submit"?we.submit(Et):_n==="reset"&&we.reset(Et)}},Se=Et=>{let Je="ub-"+$i[he]+Et;return y.disabled&&(Je+="-d"),y.plain&&(Je+="-plain"),y.size==="mini"&&Et==="-t"&&(Je+=" ub-mini"),Je},je=Et=>{if(y.disabled)return"";let Je="ub-"+$i[he]+Et+"-hover";return y.plain&&(Je+="-plain"),Je},bt=O.inject(Ur,!1);bt&&(bt.addHandler(Be),O.onBeforeUnmount(()=>{bt.removeHandler(Be)})),Er(y,{"label-click":Be});let Ct=O.computed(()=>{let Et={};for(let Je in ee.value){let Mt=ee.value[Je];Je!=="onClick"&&(Et[Je]=Mt)}return Et}),Wt=()=>{if(!M.default)return[];let Et=M.default();return Et.length===1&&Et[0].type===O.Text?[cn(Et[0].children,{class:"ub-t "+Se("-t")})]:Et};return()=>{let Et=Nt.extend({},Jt(y),{hoverClass:je("")},H.value,Q.value,Ct.value);return O.createVNode("view",O.mergeProps({ref:me,class:["ub",Se("")],onClick:Be},Et),[y.loading?O.createVNode("loading-indicator",O.mergeProps({class:["ub-loading",`ub-${$i[he]}-loading`]},{arrow:"false",animating:"true"}),null):null,...Wt()])}}}),Ia={scaleArea:{type:Boolean,default:!1}};function no(y){let M=[];return Nt.isArray(y)&&y.forEach(W=>{O.isVNode(W)?W.type===O.Fragment?M.push(...no(W.children)):M.push(W):Nt.isArray(W)&&M.push(...no(W))}),M}function qo(y){let M=Object.create(null);return function(H){return M[H]||(M[H]=y(H))}}let si=qo(function(y){let M={},W=/;(?![^(]*\))/g,H=/:(.+)/;return y.split(W).forEach(function(Q){if(Q){let ee=Q.split(H);ee.length>1&&(M[ee[0].trim()]=ee[1].trim())}}),M}),Pn=y=>new Promise((M,W)=>{if(!y)return M({width:0,height:0,top:0,left:0});C.requireModule("dom").getComponentRect(y,({size:Q})=>{M(Q)})}),cr=O.defineComponent({name:"MovableArea",props:Ia,styles:[{"uni-movable-area":{"":{overflow:"hidden",width:"10px",height:"10px"}}}],setup(y,{slots:M}){let W=O.ref(0),H=O.ref(0),Q=O.ref(0),ee=O.ref(0),he=O.ref(!1),me=O.ref(null),we=[],Be=null,Se=Je=>{Be=Je},je=()=>Pn(me.value).then(({width:Je,height:Mt,top:_n,left:wn})=>{W.value=Je,H.value=Mt,Q.value=_n,ee.value=wn}),bt=()=>{je().then(()=>{we.forEach(function(Je){Je.setParent()})})};O.onMounted(()=>{v(()=>{he.value=!0,bt()},200)});let Ct={onPanstart(Je){Be&&Be.touchstart(Je)},onPanmove(Je){Je.stopPropagation(),Be&&Be.touchmove(Je)},onPanend(Je){Be&&Be.touchend(Je),Be=null}},Wt=Je=>{we.push(Je)},Et=Je=>{let Mt=we.indexOf(Je);Mt>=0&&we.splice(Mt,1)};return O.provide("_isMounted",he),O.provide("parentSize",{width:W,height:H,top:Q,left:ee}),O.provide("addMovableViewContext",Wt),O.provide("removeMovableViewContext",Et),O.provide("setTouchMovableViewContext",Se),()=>{let Je=M.default&&M.default(),Mt=no(Je);return O.createVNode("view",O.mergeProps({ref:me,class:"uni-movable-area"},Ct),[Mt])}}});function li(y){let M={};function W(Se,je){M[Se]&&M[Se](je)}function H(Se,je){M[Se]=function(bt){Nt.isFunction(je)&&(bt.touches=bt.changedTouches,je(bt)===!1&&bt.stopPropagation())}}let Q=0,ee=0,he=0,me=0,we=function(Se,je,bt,Ct){if(y({target:Se.target,currentTarget:Se.currentTarget,stopPropagation:Se.stopPropagation.bind(Se),touches:Se.touches,changedTouches:Se.changedTouches,detail:{state:je,x:bt,y:Ct,dx:bt-Q,dy:Ct-ee,ddx:bt-he,ddy:Ct-me,timeStamp:Se.timeStamp||Date.now()}})===!1)return!1},Be=null;return H("touchstart",function(Se){if(!Be)return Be=Se,Q=he=Se.touches[0].pageX,ee=me=Se.touches[0].pageY,we(Se,"start",Q,ee)}),H("touchmove",function(Se){if(Be){let je=we(Se,"move",Se.touches[0].pageX,Se.touches[0].pageY);return he=Se.touches[0].pageX,me=Se.touches[0].pageY,je}}),H("touchend",function(Se){if(Be)return Be=null,we(Se,"end",Se.changedTouches[0].pageX,Se.changedTouches[0].pageY)}),{touchstart:function(Se){W("touchstart",Se)},touchmove:function(Se){W("touchmove",Se)},touchend:function(Se){W("touchend",Se)}}}function Kn(y,M){return(W,H)=>{y.value&&M(W,Ko(W,y.value,H||{}))}}function Ko(y,M,W={}){return M=ro(M),{type:y,timeStamp:Date.now(),target:M,currentTarget:M,detail:W}}let xo=jn.cacheStringFunction(y=>y.charAt(0).toLowerCase()+y.slice(1));function ro(y){let{offsetLeft:M,offsetTop:W}=y,H=y.attr,Q={};return Object.keys(H||{}).forEach(ee=>{ee.indexOf("data")===0&&(Q[xo(ee.replace("data",""))]=H[ee])}),{id:H&&H.id||"",dataset:Q,offsetLeft:M||0,offsetTop:W||0}}function io(y,M,W){return y>M-W&&y<M+W}function qr(y,M){return io(y,0,M)}function oo(){}oo.prototype.x=function(y){return Math.sqrt(y)};function Fn(y,M){this._m=y,this._f=1e3*M,this._startTime=0,this._v=0}Fn.prototype.setV=function(y,M){let W=Math.pow(Math.pow(y,2)+Math.pow(M,2),.5);this._x_v=y,this._y_v=M,this._x_a=-this._f*this._x_v/W,this._y_a=-this._f*this._y_v/W,this._t=Math.abs(y/this._x_a)||Math.abs(M/this._y_a),this._lastDt=null,this._startTime=new Date().getTime()},Fn.prototype.setS=function(y,M){this._x_s=y,this._y_s=M},Fn.prototype.s=function(y){y===void 0&&(y=(new Date().getTime()-this._startTime)/1e3),y>this._t&&(y=this._t,this._lastDt=y);let M=this._x_v*y+.5*this._x_a*Math.pow(y,2)+this._x_s,W=this._y_v*y+.5*this._y_a*Math.pow(y,2)+this._y_s;return(this._x_a>0&&M<this._endPositionX||this._x_a<0&&M>this._endPositionX)&&(M=this._endPositionX),(this._y_a>0&&W<this._endPositionY||this._y_a<0&&W>this._endPositionY)&&(W=this._endPositionY),{x:M,y:W}},Fn.prototype.ds=function(y){return y===void 0&&(y=(new Date().getTime()-this._startTime)/1e3),y>this._t&&(y=this._t),{dx:this._x_v+this._x_a*y,dy:this._y_v+this._y_a*y}},Fn.prototype.delta=function(){return{x:-1.5*Math.pow(this._x_v,2)/this._x_a||0,y:-1.5*Math.pow(this._y_v,2)/this._y_a||0}},Fn.prototype.dt=function(){return-this._x_v/this._x_a},Fn.prototype.done=function(){let y=io(this.s().x,this._endPositionX)||io(this.s().y,this._endPositionY)||this._lastDt===this._t;return this._lastDt=null,y},Fn.prototype.setEnd=function(y,M){this._endPositionX=y,this._endPositionY=M},Fn.prototype.reconfigure=function(y,M){this._m=y,this._f=1e3*M};function wr(y,M,W){this._m=y,this._k=M,this._c=W,this._solution=null,this._endPosition=0,this._startTime=0}wr.prototype._solve=function(y,M){let W=this._c,H=this._m,Q=this._k,ee=W*W-4*H*Q;if(ee===0){let Se=-W/(2*H),je=y,bt=M/(Se*y);return{x:function(Ct){return(je+bt*Ct)*Math.pow(Math.E,Se*Ct)},dx:function(Ct){let Wt=Math.pow(Math.E,Se*Ct);return Se*(je+bt*Ct)*Wt+bt*Wt}}}if(ee>0){let Se=(-W-Math.sqrt(ee))/(2*H),je=(-W+Math.sqrt(ee))/(2*H),bt=(M-Se*y)/(je-Se),Ct=y-bt;return{x:function(Wt){let Et,Je;return Wt===this._t&&(Et=this._powER1T,Je=this._powER2T),this._t=Wt,Et||(Et=this._powER1T=Math.pow(Math.E,Se*Wt)),Je||(Je=this._powER2T=Math.pow(Math.E,je*Wt)),Ct*Et+bt*Je},dx:function(Wt){let Et,Je;return Wt===this._t&&(Et=this._powER1T,Je=this._powER2T),this._t=Wt,Et||(Et=this._powER1T=Math.pow(Math.E,Se*Wt)),Je||(Je=this._powER2T=Math.pow(Math.E,je*Wt)),Ct*Se*Et+bt*je*Je}}}let he=Math.sqrt(4*H*Q-W*W)/(2*H),me=-W/2*H,we=y,Be=(M-me*y)/he;return{x:function(Se){return Math.pow(Math.E,me*Se)*(we*Math.cos(he*Se)+Be*Math.sin(he*Se))},dx:function(Se){let je=Math.pow(Math.E,me*Se),bt=Math.cos(he*Se),Ct=Math.sin(he*Se);return je*(Be*he*bt-we*he*Ct)+me*je*(Be*Ct+we*bt)}}},wr.prototype.x=function(y){return y===void 0&&(y=(new Date().getTime()-this._startTime)/1e3),this._solution?this._endPosition+this._solution.x(y):0},wr.prototype.dx=function(y){return y===void 0&&(y=(new Date().getTime()-this._startTime)/1e3),this._solution?this._solution.dx(y):0},wr.prototype.setEnd=function(y,M,W){if(W||(W=new Date().getTime()),y!==this._endPosition||!qr(M,.1)){M=M||0;let H=this._endPosition;this._solution&&(qr(M,.1)&&(M=this._solution.dx((W-this._startTime)/1e3)),H=this._solution.x((W-this._startTime)/1e3),qr(M,.1)&&(M=0),qr(H,.1)&&(H=0),H+=this._endPosition),this._solution&&qr(H-y,.1)&&qr(M,.1)||(this._endPosition=y,this._solution=this._solve(H-this._endPosition,M),this._startTime=W)}},wr.prototype.snap=function(y){this._startTime=new Date().getTime(),this._endPosition=y,this._solution={x:function(){return 0},dx:function(){return 0}}},wr.prototype.done=function(y){return y||(y=new Date().getTime()),io(this.x(),this._endPosition,.1)&&qr(this.dx(),.1)},wr.prototype.reconfigure=function(y,M,W){this._m=y,this._k=M,this._c=W,this.done()||(this._solution=this._solve(this.x()-this._endPosition,this.dx()),this._startTime=new Date().getTime())},wr.prototype.springConstant=function(){return this._k},wr.prototype.damping=function(){return this._c},wr.prototype.configuration=function(){function y(W,H){W.reconfigure(1,H,W.damping())}function M(W,H){W.reconfigure(1,W.springConstant(),H)}return[{label:"Spring Constant",read:this.springConstant.bind(this),write:y.bind(this,this),min:100,max:1e3},{label:"Damping",read:this.damping.bind(this),write:M.bind(this,this),min:1,max:500}]};function ci(y,M,W){this._springX=new wr(y,M,W),this._springY=new wr(y,M,W),this._springScale=new wr(y,M,W),this._startTime=0}ci.prototype.setEnd=function(y,M,W,H){let Q=new Date().getTime();this._springX.setEnd(y,H,Q),this._springY.setEnd(M,H,Q),this._springScale.setEnd(W,H,Q),this._startTime=Q},ci.prototype.x=function(){let y=(new Date().getTime()-this._startTime)/1e3;return{x:this._springX.x(y),y:this._springY.x(y),scale:this._springScale.x(y)}},ci.prototype.done=function(){let y=new Date().getTime();return this._springX.done(y)&&this._springY.done(y)&&this._springScale.done(y)},ci.prototype.reconfigure=function(y,M,W){this._springX.reconfigure(y,M,W),this._springY.reconfigure(y,M,W),this._springScale.reconfigure(y,M,W)};let Jo={direction:{type:String,default:"none"},inertia:{type:[Boolean,String],default:!1},outOfBounds:{type:[Boolean,String],default:!1},x:{type:[Number,String],default:0},y:{type:[Number,String],default:0},damping:{type:[Number,String],default:20},friction:{type:[Number,String],default:2},disabled:{type:[Boolean,String],default:!1},scale:{type:[Boolean,String],default:!1},scaleMin:{type:[Number,String],default:.5},scaleMax:{type:[Number,String],default:10},scaleValue:{type:[Number,String],default:1},animation:{type:[Boolean,String],default:!0}};function _o(y,M){return+((1e3*y-1e3*M)/1e3).toFixed(1)}function Zo(y,M,W){let H={id:0,cancelled:!1},Q=function(he){he&&he.id&&ui(he.id),he&&(he.cancelled=!0)};function ee(he,me,we,Be){if(!he||!he.cancelled){we(me);let Se=me.done();Se||he.cancelled||(he.id=En(ee.bind(null,he,me,we,Be))),Se&&Be&&Be(me)}}return ee(H,y,M,W),{cancel:Q.bind(null,H),model:y}}let Kr=!1;function On(y){Kr||(Kr=!0,En(function(){y(),Kr=!1}))}function En(y){return v(y,16)}function ui(y){l(y)}let Bo=C.requireModule("animation"),Ya=O.defineComponent({name:"MovableView",props:Jo,emits:["change","scale"],styles:[{"uni-movable-view":{"":{position:"absolute",top:"0px",left:"0px",width:"10px",height:"10px"}}}],setup(y,{emit:M,slots:W}){let H=O.ref(null),Q=Kn(H,M),ee=O.inject("setTouchMovableViewContext",()=>{}),he=Jn(y,Q,H,ee);return()=>{let me={preventGesture:!0};return O.createVNode("view",O.mergeProps({ref:H,onTouchstart:he,class:"uni-movable-view",style:"transform-origin: center;"},me),[W.default&&W.default()])}}});function Jn(y,M,W,H){let Q=O.inject("_isMounted",O.ref(!1)),ee=O.inject("parentSize",{width:O.ref(0),height:O.ref(0),top:O.ref(0),left:O.ref(0)}),he=O.inject("addMovableViewContext",()=>{}),me=O.inject("removeMovableViewContext",()=>{}),we={touchstart:()=>{},touchmove:()=>{},touchend:()=>{}};function Be(Ue){return Number(Ue)||0}function Se(Ue){return Ue=Number(Ue),isNaN(Ue)?1:Ue}let je=O.ref(Be(y.x)),bt=O.ref(Be(y.y)),Ct=O.ref(Se(Number(y.scaleValue))),Wt=O.ref(0),Et=O.ref(0),Je=O.ref(0),Mt=O.ref(0),_n=O.ref(0),wn=O.ref(0),At=null,nn=null,ar={x:0,y:0},Kt={x:0,y:0},Gt=1,Rn=0,er=0,Ba=!1,bs,Ma,Ao=null,ys=null,ei={top:0,left:0,width:0,height:0},Da=new oo,ia=new oo,tr={historyX:[0,0],historyY:[0,0],historyT:[0,0]},Ja=O.computed(()=>{let Ue=Number(y.damping);return isNaN(Ue)?20:Ue}),cl=O.computed(()=>{let Ue=Number(y.friction);return isNaN(Ue)||Ue<=0?2:Ue}),Fo=O.computed(()=>{let Ue=Number(y.scaleMin);return isNaN(Ue)?.5:Ue}),Wi=O.computed(()=>{let Ue=Number(y.scaleMax);return isNaN(Ue)?10:Ue}),Un=O.computed(()=>y.direction==="all"||y.direction==="horizontal"),Gi=O.computed(()=>y.direction==="all"||y.direction==="vertical"),vi=new ci(1,9*Math.pow(Ja.value,2)/40,Ja.value),Ii=new Fn(1,cl.value);O.watch(()=>y.x,Ue=>{je.value=Be(Ue)}),O.watch(()=>y.y,Ue=>{bt.value=Be(Ue)}),O.watch(()=>y.scaleValue,Ue=>{Ct.value=Se(Number(Ue))}),O.watch(je,$r),O.watch(bt,Or),O.watch(Ct,Es),O.watch(Fo,Pi),O.watch(Wi,Pi);function ti(){nn&&nn.cancel(),At&&At.cancel()}function $r(Ue){if(Un.value){if(Ue+Kt.x===Rn)return Rn;At&&At.cancel(),Ni(Ue+Kt.x,bt.value+Kt.y,Gt)}return Ue}function Or(Ue){if(Gi.value){if(Ue+Kt.y===er)return er;At&&At.cancel(),Ni(je.value+Kt.x,Ue+Kt.y,Gt)}return Ue}function Pi(){if(!y.scale)return!1;La(Gt,!0)}function Es(Ue){return y.scale?(Ue=po(Ue),La(Ue,!0),Ue):!1}function hr(){y.disabled||(ti(),tr.historyX=[0,0],tr.historyY=[0,0],tr.historyT=[0,0],Un.value&&(bs=Rn),Gi.value&&(Ma=er),Ao=null,ys=null,Ba=!0)}function Ar(Ue){if(!y.disabled&&Ba){let gt=Rn,ut=er;if(ys===null&&(ys=Math.abs(Ue.detail.dx/Ue.detail.dy)>1?"htouchmove":"vtouchmove"),Un.value&&(gt=Ue.detail.dx+bs,tr.historyX.shift(),tr.historyX.push(gt),!Gi.value&&Ao===null&&(Ao=Math.abs(Ue.detail.dx/Ue.detail.dy)<1)),Gi.value&&(ut=Ue.detail.dy+Ma,tr.historyY.shift(),tr.historyY.push(ut),!Un.value&&Ao===null&&(Ao=Math.abs(Ue.detail.dy/Ue.detail.dx)<1)),tr.historyT.shift(),tr.historyT.push(Ue.detail.timeStamp),!Ao){let xt="touch";gt<Je.value?y.outOfBounds?(xt="touch-out-of-bounds",gt=Je.value-Da.x(Je.value-gt)):gt=Je.value:gt>_n.value&&(y.outOfBounds?(xt="touch-out-of-bounds",gt=_n.value+Da.x(gt-_n.value)):gt=_n.value),ut<Mt.value?y.outOfBounds?(xt="touch-out-of-bounds",ut=Mt.value-ia.x(Mt.value-ut)):ut=Mt.value:ut>wn.value&&(y.outOfBounds?(xt="touch-out-of-bounds",ut=wn.value+ia.x(ut-wn.value)):ut=wn.value),On(function(){Uo(gt,ut,Gt,xt)})}}}function zs(){if(!y.disabled&&Ba&&(Ba=!1,!Ao&&!ws("out-of-bounds")&&y.inertia)){let Ue=1e3*(tr.historyX[1]-tr.historyX[0])/(tr.historyT[1]-tr.historyT[0]),gt=1e3*(tr.historyY[1]-tr.historyY[0])/(tr.historyT[1]-tr.historyT[0]);Ii.setV(Ue,gt),Ii.setS(Rn,er);let ut=Ii.delta().x,xt=Ii.delta().y,Yt=ut+Rn,Wn=xt+er;Yt<Je.value?(Yt=Je.value,Wn=er+(Je.value-Rn)*xt/ut):Yt>_n.value&&(Yt=_n.value,Wn=er+(_n.value-Rn)*xt/ut),Wn<Mt.value?(Wn=Mt.value,Yt=Rn+(Mt.value-er)*ut/xt):Wn>wn.value&&(Wn=wn.value,Yt=Rn+(wn.value-er)*ut/xt),Ii.setEnd(Yt,Wn),nn=Zo(Ii,function(){let Mn=Ii.s(),nr=Mn.x,wa=Mn.y;Uo(nr,wa,Gt,"friction")},function(){nn.cancel()})}}function ni(Ue,gt){let ut=!1;return Ue>_n.value?(Ue=_n.value,ut=!0):Ue<Je.value&&(Ue=Je.value,ut=!0),gt>wn.value?(gt=wn.value,ut=!0):gt<Mt.value&&(gt=Mt.value,ut=!0),{x:Ue,y:gt,outOfBounds:ut}}function Vo(){ar.x=ei.left-ee.left.value,ar.y=ei.top-ee.top.value}function Yi(Ue){Ue=Ue||Gt,Ue=po(Ue),Et.value=ei.height/Gt,Wt.value=ei.width/Gt;let gt=Et.value*Ue,ut=Wt.value*Ue;Kt.x=(ut-Wt.value)/2,Kt.y=(gt-Et.value)/2}function Ea(){let Ue=0-ar.x+Kt.x,gt=ee.width.value-Wt.value-ar.x-Kt.x;Je.value=Math.min(Ue,gt),_n.value=Math.max(Ue,gt);let ut=0-ar.y+Kt.y,xt=ee.height.value-Et.value-ar.y-Kt.y;Mt.value=Math.min(ut,xt),wn.value=Math.max(ut,xt)}function La(Ue,gt){if(y.scale){Ue=po(Ue),Yi(Ue),Ea();let ut=ni(Rn,er),xt=ut.x,Yt=ut.y;gt?Ni(xt,Yt,Ue,"",!0,!0):On(function(){Uo(xt,Yt,Ue,"",!0,!0)})}}function po(Ue){return Ue=Math.max(.5,Fo.value,Ue),Ue=Math.min(10,Wi.value,Ue),Ue}function Ni(Ue,gt,ut,xt,Yt,Wn){ti(),Un.value||(Ue=Rn),Gi.value||(gt=er),y.scale||(ut=Gt);let Mn=ni(Ue,gt);if(Ue=Mn.x,gt=Mn.y,!y.animation){Uo(Ue,gt,ut,xt,Yt,Wn);return}vi._springX._solution=null,vi._springY._solution=null,vi._springScale._solution=null,vi._springX._endPosition=Rn,vi._springY._endPosition=er,vi._springScale._endPosition=Gt,vi.setEnd(Ue,gt,ut,1),At=Zo(vi,function(){let nr=vi.x(),wa=nr.x,ki=nr.y,$o=nr.scale;Uo(wa,ki,$o,xt,Yt,Wn)},function(){At.cancel()})}function ws(Ue){let gt=ni(Rn,er),ut=gt.x,xt=gt.y,Yt=gt.outOfBounds;return Yt&&Ni(ut,xt,Gt,Ue),Yt}function Uo(Ue,gt,ut,xt="",Yt,Wn){Ue!==null&&Ue.toString()!=="NaN"&&typeof Ue=="number"||(Ue=Rn||0),gt!==null&&gt.toString()!=="NaN"&&typeof gt=="number"||(gt=er||0),Ue=Number(Ue.toFixed(1)),gt=Number(gt.toFixed(1)),ut=Number(ut.toFixed(1)),Rn===Ue&&er===gt||Yt||M("change",{x:_o(Ue,Kt.x),y:_o(gt,Kt.y),source:xt}),y.scale||(ut=Gt),ut=po(ut),ut=+ut.toFixed(3),Wn&&ut!==Gt&&M("scale",{x:Ue,y:gt,scale:ut});let Mn=`translate(${Ue}px, ${gt}px) scale(${ut})`;Bo.transition(W.value,{styles:{transform:Mn},duration:0,delay:0}),Rn=Ue,er=gt,Gt=ut}function Ss(){return Pn(W.value).then(Ue=>{ei=Ue})}function Za(){if(!Q.value)return;ti();let Ue=y.scale?Ct.value:1;Vo(),Yi(Ue),Ea(),Rn=je.value+Kt.x,er=bt.value+Kt.y;let gt=ni(Rn,er),ut=gt.x,xt=gt.y;Uo(ut,xt,Ue,"",!0)}return O.onMounted(()=>{we=li(gt=>{switch(gt.detail.state){case"start":hr();break;case"move":Ar(gt);break;case"end":zs()}}),v(()=>{Ss().then(()=>{Za()})},100),Ii.reconfigure(1,cl.value),vi.reconfigure(1,9*Math.pow(Ja.value,2)/40,Ja.value);let Ue={setParent:Za};he(Ue),O.onUnmounted(()=>{me(Ue)})}),O.onUnmounted(()=>{ti()}),()=>{H(we)}}let Jr=16,ur={activeColor:jn.PRIMARY_COLOR,backgroundColor:"#EBEBEB",activeMode:"backwards"},Dt={percent:{type:[Number,String],default:0,validator(y){return!isNaN(parseFloat(y))}},fontSize:{type:[String,Number],default:Jr},showInfo:{type:[Boolean,String],default:!1},strokeWidth:{type:[Number,String],default:6,validator(y){return!isNaN(parseFloat(y))}},color:{type:String,default:ur.activeColor},activeColor:{type:String,default:ur.activeColor},backgroundColor:{type:String,default:ur.backgroundColor},active:{type:[Boolean,String],default:!1},activeMode:{type:String,default:ur.activeMode},duration:{type:[Number,String],default:30,validator(y){return!isNaN(parseFloat(y))}},borderRadius:{type:[Number,String],default:0}},ke=[{"uni-progress":{"":{flex:1,flexDirection:"row",alignItems:"center"}},"uni-progress-bar":{"":{flex:1}},"uni-progress-inner-bar":{"":{position:"absolute"}},"uni-progress-info":{"":{marginLeft:"15px"}}}],bo=O.defineComponent({name:"Progress",props:Dt,styles:ke,emits:["activeend"],setup(y,{emit:M}){let W=O.ref(null),H=O.ref(null),Q=Kn(W,M),ee=yo(y);return O.watch(()=>ee.realPercent,(he,me)=>{ee.lastPercent=me||0,Eo(ee,y,Q)}),O.onMounted(()=>{v(()=>{Pn(H.value).then(({width:he})=>{ee.progressWidth=he||0,Eo(ee,y,Q)})},50)}),()=>{let{showInfo:he,fontSize:me}=y,{outerBarStyle:we,innerBarStyle:Be,currentPercent:Se}=ee;return O.createVNode("div",{ref:W,class:"uni-progress"},[O.createVNode("div",{ref:H,style:we,class:"uni-progress-bar"},[O.createVNode("div",{style:Be,class:"uni-progress-inner-bar"},null)]),he?cn(Se+"%",{class:"uni-progress-info",style:{fontSize:me}}):null])}}});function yo(y){let M=O.ref(0),W=O.ref(0),H=O.computed(()=>({backgroundColor:y.backgroundColor,borderRadius:y.borderRadius,height:y.strokeWidth})),Q=O.computed(()=>{let me=y.color!==ur.activeColor&&y.activeColor===ur.activeColor?y.color:y.activeColor;return{width:M.value*W.value/100,height:y.strokeWidth,backgroundColor:me,borderRadius:y.borderRadius}}),ee=O.computed(()=>{let me=parseFloat(y.percent);return me<0&&(me=0),me>100&&(me=100),me});return O.reactive({outerBarStyle:H,innerBarStyle:Q,realPercent:ee,currentPercent:M,strokeTimer:0,lastPercent:0,progressWidth:W})}function Eo(y,M,W){y.strokeTimer&&clearInterval(y.strokeTimer),M.active?(y.currentPercent=M.activeMode===ur.activeMode?0:y.lastPercent,y.strokeTimer=setInterval(()=>{y.currentPercent+1>y.realPercent?(y.currentPercent=y.realPercent,y.strokeTimer&&clearInterval(y.strokeTimer),W("activeend",{})):y.currentPercent+=1},parseFloat(M.duration))):y.currentPercent=y.realPercent}let pa={value:{type:Array,default(){return[]},validator:function(y){return Nt.isArray(y)&&y.filter(M=>typeof M=="number").length===y.length}},indicatorStyle:{type:String,default:""},indicatorClass:{type:String,default:""},maskStyle:{type:String,default:""},maskClass:{type:String,default:""}},Xo=Nt.extend({},pa,{height:{type:[Number,String],default:0},maskTopStyle:{type:String,default:""},maskBottomStyle:{type:String,default:""}}),Hi=O.defineComponent({name:"PickerView",props:Xo,emits:["change","update:value"],setup(y,{slots:M,emit:W}){let H=O.ref(null),Q=wo(y),ee=Kn(H,W),he=[],me=Be=>Array.prototype.indexOf.call(he.filter(Se=>Se.type!==O.Comment),Be),we=Be=>O.computed({get(){let Se=me(Be.vnode);return Q.value[Se]||0},set(Se){if(!Be.data._isMounted)return;let je=me(Be.vnode);if(je<0)return;if(Q.value[je]!==Se){Q.value[je]=Se;let Ct=Q.value.map(Wt=>Wt);W("update:value",Ct),ee("change",{value:Ct})}}});return O.provide("getPickerViewColumn",we),O.provide("pickerViewProps",y),()=>{let Be=M.default&&M.default();he=no(Be);let Se=y.height?{height:`${parseFloat(y.height)}px`}:{};return O.createVNode("view",O.mergeProps({ref:H,class:"uni-picker-view",style:Se},{preventGesture:!0}),[O.createVNode("view",{class:"uni-picker-view-wrapper"},[he])])}},styles:[{"uni-picker-view":{"":{position:"relative"}},"uni-picker-view-wrapper":{"":{display:"flex",flexDirection:"row",position:"absolute",top:0,left:0,right:0,bottom:0,overflow:"hidden"}}}]});function wo(y){let M=O.reactive([...y.value]),W=O.reactive({value:M});return O.watch(()=>y.value,H=>{W.value.length=H.length,O.nextTick(()=>{H.forEach((Q,ee)=>{Q!==W.value[ee]&&W.value.splice(ee,1,Q)})})}),W}let Zr=C.requireModule("dom"),fi=C.config.env.platform.toLowerCase()==="android";function Qo(y){return Nt.extend({},Nt.isString(y)?si(y):y)}let an={length:{type:[Number,String],default:0}},So=O.defineComponent({name:"PickerViewColumn",props:an,data:()=>({_isMounted:!1}),setup(y,{slots:M}){let W=O.getCurrentInstance(),H=O.ref(null),Q=O.ref(null),ee=O.ref(null),he=O.ref(null),me=O.inject("pickerViewProps"),Be=O.inject("getPickerViewColumn")(W),Se=O.computed(()=>Qo(me.indicatorStyle)),je=O.computed(()=>Qo(me.maskTopStyle)),bt=O.computed(()=>Qo(me.maskBottomStyle)),Ct=O.ref(0);Ct.value=di(Se.value);let Wt=O.ref(0);Wt.value=parseFloat(me.height);let{setCurrent:Et,onScrollend:Je}=ga(y,Be,Q,Ct),Mt=()=>{let wn,At;v(()=>{Promise.all([Pn(H.value).then(({height:nn})=>{wn=Wt.value=nn}),fi&&y.length?Pn(ee.value).then(({height:nn})=>{At=Ct.value=nn/parseFloat(y.length)}):Pn(he.value).then(({height:nn})=>{At=Ct.value=nn})]).then(()=>{wn&&At?v(()=>{W.data._isMounted=!0,Et(Be.value,!1,!0)},50):Mt()})},50)};O.onMounted(Mt);let _n=wn=>wn?fi?O.createVNode("div",{ref:ee,style:"flex-direction:column;"},[wn]):wn:null;return()=>{let wn=M.default&&M.default(),At=(Wt.value-Ct.value)/2,nn=`${Wt.value-At}px`,ar={showScrollbar:!1,scrollToBegin:!1,decelerationRate:.3,scrollY:!0};return fi||(ar.scrollTop=Be.value*Ct.value),O.createVNode("view",{ref:H,class:"uni-picker-view-column"},[O.createVNode("scroll-view",O.mergeProps({class:"uni-picker-view-group",style:"flex-direction:column;",onScrollend:Je},ar),[O.createVNode("view",{ref:Q,class:"uni-picker-view-content",style:{paddingTop:`${At}px`,paddingBottom:`${At}px`}},[_n(wn)])]),O.createVNode("u-scalable",{class:"uni-picker-view-mask"},[O.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-top",style:Nt.extend({},je.value,{bottom:nn})},null),O.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-bottom",style:Nt.extend({},bt.value,{top:nn})},null)]),O.createVNode("u-scalable",{ref:he,class:"uni-picker-view-indicator",style:Nt.extend({},Se.value,{top:`${At}px`})},null)])}},styles:[{"uni-picker-view-column":{"":{flex:1,position:"relative",alignItems:"stretch",overflow:"hidden"}},"uni-picker-view-mask":{"":{position:"absolute",top:0,left:0,right:0,bottom:0,pointerEvents:"none"}},"uni-picker-view-mask-top":{"":{bottom:0,backgroundImage:"linear-gradient(to bottom,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-mask-bottom":{"":{top:0,backgroundImage:"linear-gradient(to top,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-group":{"":{position:"absolute",top:0,left:0,right:0,bottom:0}},"uni-picker-view-content":{"":{flexDirection:"column",paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-picker-view-indicator":{"":{position:"absolute",left:0,right:0,top:0,height:"34px",pointerEvents:"none",borderColor:"#e5e5e5",borderTopWidth:"1px",borderBottomWidth:"1px"}}}]});function di(y){let W=(y.height||y.lineHeight||"").match(/(-?[\d\.]+)px/),H=0;return W&&(H=parseFloat(W[1])),H}function ga(y,M,W,H){let Q;function ee(we,Be=!0){Zr.scrollToElement(W.value,{offset:we*H.value,animated:Be}),Be&&(Q=Date.now())}O.watch(()=>y.length,()=>{v(()=>{he(M.value,!0,!0)},150)}),O.watch(M,we=>ee(we));let he=(we,Be=!0,Se)=>{M.value===we&&!Se||(M.value=we,fi&&ee(we,Be))};return{setCurrent:he,onScrollend:we=>{if(Date.now()-Q<340)return;let Be=we.detail.contentOffset.y,Se=Math.round(Be/H.value);Be%H.value?he(Se,!0,!0):M.value=Se}}}let mn={SELECTOR:"selector",MULTISELECTOR:"multiSelector",TIME:"time",DATE:"date"},Br={YEAR:"year",MONTH:"month",DAY:"day"};function fr(y){return y>9?y:`0${y}`}function ea(y,M){y=String(y||"");let W=new Date;if(M===mn.TIME){let H=y.split(":");H.length===2&&W.setHours(parseInt(H[0]),parseInt(H[1]))}else{let H=y.split("-");H.length===3&&W.setFullYear(parseInt(H[0]),parseInt(String(parseFloat(H[1])-1)),parseInt(H[2]))}return W}function Pa(y){if(y.mode===mn.TIME)return"00:00";if(y.mode===mn.DATE){let M=new Date().getFullYear()-100;switch(y.fields){case Br.YEAR:return M;case Br.MONTH:return M+"-01";default:return M+"-01-01"}}return""}function ta(y){if(y.mode===mn.TIME)return"23:59";if(y.mode===mn.DATE){let M=new Date().getFullYear()+100;switch(y.fields){case Br.YEAR:return M;case Br.MONTH:return M+"-12";default:return M+"-12-31"}}return""}let ao={name:{type:String,default:""},range:{type:Array,default(){return[]}},rangeKey:{type:String,default:""},value:{type:[Number,String,Array],default:0},mode:{type:String,default:mn.SELECTOR,validator(y){return Object.values(mn).indexOf(y)>=0}},fields:{type:String,default:""},start:{type:String,default:Pa},end:{type:String,default:ta},disabled:{type:[Boolean,String],default:!1}},Zn=O.defineComponent({name:"Picker",props:ao,emits:["change","cancel","columnchange"],setup(y,{slots:M,emit:W}){let H=O.ref(null),Q=Kn(H,W),ee=O.ref(null),he=O.ref(null),me=()=>{let Et=y.value;switch(y.mode){case mn.MULTISELECTOR:{Nt.isArray(Et)||(Et=[]),Nt.isArray(ee.value)||(ee.value=[]);let Je=ee.value.length=Math.max(Et.length,y.range.length);for(let Mt=0;Mt<Je;Mt++){let _n=Number(Et[Mt]),wn=Number(ee.value[Mt]),At=isNaN(_n)?isNaN(wn)?0:wn:_n;ee.value.splice(Mt,1,At<0?0:At)}}break;case mn.TIME:case mn.DATE:ee.value=String(Et);break;default:{let Je=Number(Et);ee.value=Je<0?0:Je;break}}},we=Et=>{he.value&&he.value.sendMessage(Et)},Be=Et=>{let Je={event:"cancel"};he.value=Ln({url:"__uniapppicker",data:Et,style:{titleNView:!1,animationType:"none",animationDuration:0,background:"rgba(0,0,0,0)",popGesture:"none"},onMessage:Mt=>{let _n=Mt.event;if(_n==="created"){we(Et);return}if(_n==="columnchange"){delete Mt.event,Q(_n,Mt);return}Je=Mt},onClose:()=>{he.value=null;let Mt=Je.event;delete Je.event,Mt&&Q(Mt,Je)}})},Se=Et=>{d.nativeUI[y.mode===mn.TIME?"pickTime":"pickDate"](Je=>{let Mt=Je.date;Q("change",{value:y.mode===mn.TIME?`${fr(Mt.getHours())}:${fr(Mt.getMinutes())}`:`${Mt.getFullYear()}-${fr(Mt.getMonth()+1)}-${fr(Mt.getDate())}`})},()=>{Q("cancel",{})},y.mode===mn.TIME?{time:ea(y.value,mn.TIME)}:{date:ea(y.value,mn.DATE),minDate:ea(y.start,mn.DATE),maxDate:ea(y.end,mn.DATE)})},je=Et=>{(Et.mode===mn.TIME||Et.mode===mn.DATE)&&!Et.fields?Se():(Et.fields=Object.values(Br).includes(Et.fields)?Et.fields:Br.DAY,Be(Et))},bt=Et=>{y.disabled||je(Nt.extend({},y,{value:ee.value,locale:b.getLocale()}))},Ct=O.inject(Yr,!1),Wt={submit:()=>[y.name,ee.value],reset:()=>{switch(y.mode){case mn.SELECTOR:ee.value=0;break;case mn.MULTISELECTOR:Nt.isArray(y.value)&&(ee.value=y.value.map(Et=>0));break;case mn.DATE:case mn.TIME:ee.value="";break}}};return Ct&&(Ct.addField(Wt),O.onBeforeUnmount(()=>Ct.removeField(Wt))),Object.keys(y).forEach(Et=>{O.watch(()=>y[Et],Je=>{let Mt={};Mt[Et]=Je,we(Mt)},{deep:!0})}),O.watch(()=>y.value,me,{deep:!0}),me(),()=>O.createVNode("view",{ref:H,onClick:bt},[M.default&&M.default()])}}),or={name:{type:String,default:""},min:{type:[Number,String],default:0},max:{type:[Number,String],default:100},value:{type:[Number,String],default:0},step:{type:[Number,String],default:1},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#e9e9e9"},backgroundColor:{type:String,default:"#e9e9e9"},activeColor:{type:String,default:"#007aff"},selectedColor:{type:String,default:"#007aff"},blockColor:{type:String,default:"#ffffff"},blockSize:{type:[Number,String],default:28},showValue:{type:[Boolean,String],default:!1}},Vn=[{"uni-slider":{"":{flex:1,flexDirection:"column"}},"uni-slider-wrapper":{"":{flexDirection:"row",justifyContent:"center",alignItems:"center"}},"uni-slider-tap-area":{"":{position:"relative",flex:1,flexDirection:"row",alignItems:"center",paddingTop:"14",paddingBottom:"14"}},"uni-slider-handle-wrapper":{"":{position:"relative",flex:1,backgroundColor:"#e9e9e9",height:"2",borderRadius:"5",marginRight:"14",marginLeft:"14"}},"uni-slider-track":{"":{height:"2",borderRadius:"6",backgroundColor:"#007aff"}},"uni-slider-thumb":{"":{position:"absolute",top:"1",width:"28",height:"28",borderRadius:50,boxShadow:"0 0 4px #ebebeb"}},"uni-slider-value":{"":{color:"#888888",fontSize:"16",width:"30"}}}],Xr=O.defineComponent({name:"USlider",props:or,styles:Vn,setup(y,{emit:M}){let W=O.ref(null),H=O.ref(null),Q=Kn(W,M),ee=hi(y),he=na(y,ee,Q);return Si(y,ee),O.watch(()=>y.value,me=>{ee.sliderValue=Number(me)}),O.onMounted(()=>{v(()=>{Pn(H.value).then(({width:me,left:we})=>{ee.sliderLeft=we,ee.sliderWidth=me||0,ee.sliderValue=Number(y.value)})},100)}),()=>{let{showValue:me}=y,{trackTapStyle:we,trackStyle:Be,trackActiveStyle:Se,thumbStyle:je,sliderValue:bt}=ee;return O.createVNode("div",{class:"uni-slider",ref:W},[O.createVNode("div",{class:"uni-slider-wrapper"},[O.createVNode("div",O.mergeProps({class:"uni-slider-tap-area",style:we},he),[O.createVNode("div",{class:"uni-slider-handle-wrapper",style:Be,ref:H},[O.createVNode("div",{class:"uni-slider-track",style:Se},null)]),O.createVNode("div",{class:"uni-slider-thumb",style:je},null)]),me?cn(bt+"",{class:"uni-slider-value"}):null])])}}});function hi(y){let M=O.ref(0),W=O.ref(0),H=O.ref(0),Q=()=>y.backgroundColor!=="#e9e9e9"?y.backgroundColor:y.color!=="#007aff"?y.color:"#007aff",ee=()=>y.activeColor!=="#007aff"?y.activeColor:y.selectedColor!=="#e9e9e9"?y.selectedColor:"#e9e9e9",he=()=>{let Be=Number(y.max),Se=Number(y.min);return(H.value-Se)/(Be-Se)*W.value},me=Number(y.blockSize)/2;return O.reactive({sliderLeft:M,sliderWidth:W,sliderValue:H,sliderThumbOffset:me,trackTapStyle:O.computed(()=>({paddingTop:me,paddingBottom:me})),trackStyle:O.computed(()=>({backgroundColor:Q(),marginLeft:me,marginRight:me})),trackActiveStyle:O.computed(()=>({backgroundColor:ee(),width:he()})),thumbStyle:O.computed(()=>({width:y.blockSize,height:y.blockSize,backgroundColor:y.blockColor,left:he()}))})}function na(y,M,W){let H=null;function Q(me,we){y.disabled||(me==="move"?(ee(we),W("changing",{value:M.sliderValue})):me==="end"&&(ee(we),W("change",{value:M.sliderValue})))}function ee(me){me-=M.sliderThumbOffset,me<0&&(me=0),me>M.sliderWidth&&(me=M.sliderWidth);let we=Number(y.max),Be=Number(y.min),Se=Number(y.step),je=me/M.sliderWidth*(we-Be);Se>0&&je>Se&&je%Se/Se!==0?je-=je%Se:je=parseInt(je+""),M.sliderValue=je+Be}return{onTouchstart(me){me.changedTouches.length===1&&!H&&(H=me,Q("start",me.changedTouches[0].pageX))},onTouchmove(me){me.changedTouches.length===1&&H&&Q("move",me.changedTouches[0].pageX)},onTouchend(me){me.changedTouches.length===1&&H&&(H=null,Q("end",me.changedTouches[0].pageX))}}}function Si(y,M){let W=O.inject(Yr,!1),H={submit:()=>{let Q=["",null];return y.name&&(Q[0]=y.name,Q[1]=M.sliderValue),Q},reset:()=>{M.sliderValue=Number(y.value)}};W&&(W.addField(H),O.onUnmounted(()=>{W.removeField(H)}))}let Ci={name:{type:String,default:""},checked:{type:[Boolean,String],default:!1},type:{type:String,default:"switch"},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"}},so={switch:"switch",checkbox:"checkbox"},va={width:52,height:32},Oi=O.defineComponent({name:"Switch",props:Ci,emits:["change"],setup(y,{emit:M}){let W=O.ref(null),H=O.ref(y.checked),Q=ji(y,H),ee=Kn(W,M);O.watch(()=>y.checked,we=>{H.value=we});let he={onChange(we){H.value=we.detail.value,ee("change",{value:H.value})}},me=(we,Be)=>{y.disabled||(H.value=!H.value,ee("change",{value:H.value}))};return Q&&(Q.addHandler(me),O.onBeforeUnmount(()=>{Q.removeHandler(me)})),Er(y,{"label-click":me}),()=>{let{color:we,type:Be,disabled:Se}=y;return O.createVNode("div",{ref:W},[Be===so.switch?O.createVNode("dc-switch",O.mergeProps({dataUncType:"uni-switch"},he,{checked:H.value,color:we,disabled:Se},{style:va}),null):null,Be===so.checkbox?O.createVNode(O.resolveComponent("checkbox"),O.mergeProps({style:{color:we}},{checked:H.value},he),null):null])}}});function ji(y,M){let W=O.inject(Yr,!1),H=O.inject(Ur,!1),Q={submit:()=>{let ee=["",null];return y.name&&(ee[0]=y.name,ee[1]=M.value),ee},reset:()=>{M.value=!1}};return W&&(W.addField(Q),O.onUnmounted(()=>{W.removeField(Q)})),H}let dr={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},Sr=qn("ucg"),lo={name:{type:String,default:""}},Mo=[{"uni-checkbox":{"":{flexDirection:"row",alignItems:"center"}},"uni-checkbox-input":{"":{justifyContent:"center",alignItems:"center",position:"relative",borderWidth:"1",borderColor:"#d1d1d1",borderStyle:"solid",backgroundColor:"#ffffff",borderRadius:"3",width:"22",height:"22"}},"uni-icon":{"":{fontFamily:"unincomponents",fontSize:"16",marginLeft:"2",marginTop:"2",color:"#007aff"}},"uni-checkbox-input-disabled":{"":{backgroundColor:"#e1e1e1"}},"uni-checkbox-input-disabled-before":{"":{color:"#adadad"}},"uni-checkbox-slot":{"":{fontSize:"16",marginLeft:"5"}}}],Co=O.defineComponent({name:"Checkbox",props:dr,styles:Mo,setup(y,{slots:M}){let W=O.ref(null),H=O.ref(y.checked),Q=O.ref(y.value),ee=O.computed(()=>y.disabled?"#adadad":y.color),he=()=>{H.value=!1},me=(je,bt)=>{y.disabled||(H.value=!H.value,we&&we.checkboxChange(je))},{uniCheckGroup:we,uniLabel:Be}=Ai(H,Q,he);Be&&(Be.addHandler(me),O.onBeforeUnmount(()=>{Be.removeHandler(me)})),Er(y,{"label-click":me}),O.watch([()=>y.checked,()=>y.value],([je,bt])=>{H.value=je,Q.value=bt});let Se=()=>{if(!M.default)return[];let je=M.default();return je.length===1&&je[0].type===Text?[cn(je[0].children,{class:"uni-checkbox-slot"})]:je};return()=>O.createVNode("div",O.mergeProps({ref:W},{dataUncType:"uni-checkbox"},{onClick:me,class:"uni-checkbox"}),[O.createVNode("div",{class:["uni-checkbox-input",{"uni-checkbox-input-disabled":y.disabled}]},[H.value?cn("\uEA08",{class:"uni-icon",style:{color:ee.value}}):null]),...Se()])}});function Ai(y,M,W){let H=O.computed(()=>({checkboxChecked:Boolean(y.value),value:M.value})),Q={reset:W},ee=O.inject(Sr,!1);ee&&ee.addField(H);let he=O.inject(Yr,!1);he&&he.addField(Q);let me=O.inject(Ur,!1);return O.onBeforeUnmount(()=>{ee&&ee.removeField(H),he&&he.removeField(Q)}),{uniCheckGroup:ee,uniForm:he,uniLabel:me}}let pi=O.defineComponent({name:"CheckboxGroup",props:lo,emits:["change"],setup(y,{slots:M,emit:W}){let H=O.ref(null),Q=Kn(H,W);return Do(y,Q),()=>O.createVNode("div",{ref:H,class:"uni-checkbox-group"},[M.default&&M.default()])}});function Do(y,M){let W=[],H=()=>W.reduce((ee,he)=>(he.value.checkboxChecked&&ee.push(he.value.value),ee),new Array);O.provide(Sr,{addField(ee){W.push(ee)},removeField(ee){W.splice(W.indexOf(ee),1)},checkboxChange(ee){M("change",{value:H()})}});let Q=O.inject(Yr,!1);return Q&&Q.addField({submit:()=>{let ee=["",null];return y.name!==""&&(ee[0]=y.name,ee[1]=H()),ee}}),H}let D={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},Z=qn("ucg"),ve={name:{type:String,default:""}},le=[{"uni-radio":{"":{alignItems:"center",flexDirection:"row"}},"uni-radio-input":{"":{position:"relative",alignItems:"center",justifyContent:"center",marginRight:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#d1d1d1",borderRadius:50,width:"22",height:"22",outline:0}},"uni-radio-input-icon":{"":{fontFamily:"unincomponents",fontSize:"14",color:"#ffffff"}},"uni-radio-input-disabled":{"":{backgroundColor:"#e1e1e1",borderColor:"#d1d1d1",color:"#adadad"}},"uni-radio-slot":{"":{fontSize:"16",marginLeft:"5"}}}],de=O.defineComponent({name:"Radio",props:D,styles:le,emits:["change"],setup(y,{slots:M}){let W=O.ref(null),H=O.ref(y.checked),Q=O.ref(y.value),ee=O.computed(()=>{let bt=y.disabled?"#adadad":y.color;return H.value?{backgroundColor:bt,borderColor:bt}:{borderColor:"#d1d1d1"}}),he=()=>{H.value=!1},{uniCheckGroup:me,uniLabel:we,field:Be}=Ot(H,Q,he),Se=(bt,Ct)=>{y.disabled||(H.value=!H.value,me&&me.radioChange(bt,Be))};we&&(we.addHandler(Se),O.onBeforeUnmount(()=>{we.removeHandler(Se)})),Er(y,{"label-click":Se}),O.watch([()=>y.checked,()=>y.value],([bt,Ct])=>{H.value=bt,Q.value=Ct});let je=()=>{if(!M.default)return[];let bt=M.default();return bt.length===1&&bt[0].type===Text?[cn(bt[0].children,{class:"uni-radio-slot"})]:bt};return()=>{let{disabled:bt}=y;return O.createVNode("div",O.mergeProps({ref:W},{dataUncType:"uni-radio"},{onClick:Se,class:"uni-radio"}),[O.createVNode("div",{style:ee.value,class:["uni-radio-input",{"uni-radio-input-disabled":bt}]},[H.value?cn("\uEA08",{class:"uni-radio-input-icon"}):null]),...je()])}}});function Ot(y,M,W){let H=O.computed({get:()=>({radioChecked:Boolean(y.value),value:M.value}),set:({radioChecked:we})=>{y.value=we}}),Q={reset:W},ee=O.inject(Z,!1);ee&&ee.addField(H);let he=O.inject(Yr,!1);he&&he.addField(Q);let me=O.inject(Ur,!1);return O.onBeforeUnmount(()=>{ee&&ee.removeField(H),he&&he.removeField(Q)}),{uniCheckGroup:ee,uniForm:he,uniLabel:me,field:H}}let J=O.defineComponent({name:"RadioGroup",props:ve,emits:["change"],setup(y,{slots:M,emit:W}){let H=O.ref(null),Q=Kn(H,W);return Y(y,Q),()=>O.createVNode("div",{ref:H},[M.default&&M.default()])}});function Y(y,M){let W=[];O.onMounted(()=>{me(W.length-1)});let H=()=>{var we;return(we=W.find(Be=>Be.value.radioChecked))==null?void 0:we.value.value};O.provide(Z,{addField(we){W.push(we)},removeField(we){W.splice(W.indexOf(we),1)},radioChange(we,Be){let Se=W.indexOf(Be);me(Se,!0),M("change",{value:H()})}});let Q=O.inject(Yr,!1),ee={submit:()=>{let we=["",null];return y.name!==""&&(we[0]=y.name,we[1]=H()),we}};Q&&(Q.addField(ee),O.onBeforeUnmount(()=>{Q.removeField(ee)}));function he(we,Be){we.value={radioChecked:Be,value:we.value.value}}function me(we,Be){W.forEach((Se,je)=>{je!==we&&Be&&he(W[je],!1)})}return W}let ce=["u-input","u-textarea"],xe=O.defineComponent({name:"Form",emits:["submit","reset"],setup({},{slots:y,emit:M}){let W=O.ref(null),H=Kn(W,M),Q=[],ee;return O.provide(Yr,{addField(he){Q.push(he)},removeField(he){Q.splice(Q.indexOf(he),1)},submit(he){let me={};ee&&ee(me);let we=Q.reduce((Be,Se)=>{if(Se.submit){let[je,bt]=Se.submit();je&&(Be[je]=bt)}return Be},Object.create(null));Object.assign(me,we),H("submit",{value:me})},reset(he){ee&&ee(),Q.forEach(me=>me.reset&&me.reset()),H("reset",he)}}),()=>{let he=y.default&&y.default();return ee=lt(he),O.createVNode("view",{ref:W},[he])}}});function lt(y){let M=C.requireModule("plus"),W=(H,Q)=>{(Q||y||[]).forEach(function(ee){ce.indexOf(String(ee.type))>=0&&ee.el&&ee.el.attr&&ee.el.attr.name&&(H?H[ee.el.attr.name]=M.getValue(ee.el.nodeId):ee.el.setValue("")),Nt.isArray(ee.children)&&ee.children&&ee.children.length&&W(H,ee.children)})};return W}let zt={type:{type:String,default:""},size:{type:[String,Number],default:23},color:{type:String,default:""}},An={success:"#09bb07",info:"#10aeff",warn:"#f76260",waiting:"#10aeff",safe_success:"#09bb07",safe_warn:"#ffbe00",success_circle:"#09bb07",success_no_circle:"#09bb07",waiting_circle:"#10aeff",circle:"#c9c9c9",download:"#09bb07",info_circle:"#09bb07",cancel:"#f43530",search:"#b2b2b2",clear:"#b2b2b2"},Xn={success:"\uEA06",info:"\uEA03",warn:"\uEA0B",waiting:"\uEA09",safe_success:"\uEA04",safe_warn:"\uEA05",success_circle:"\uEA07",success_no_circle:"\uEA08",waiting_circle:"\uEA0A",circle:"\uEA01",download:"\uEA02",info_circle:"\uEA0C",cancel:"\uEA0D",search:"\uEA0E",clear:"\uEA0F"},Qr=[{"uni-icon":{"":{fontFamily:"unincomponents"}}}],Mr=O.defineComponent({name:"Icon",props:zt,styles:Qr,setup(y,{}){return()=>cn(Xn[y.type],{class:"uni-icon",style:{color:y.color||An[y.type],fontSize:y.size}})}}),co={indicatorDots:{type:[Boolean,String],default:!1},vertical:{type:[Boolean,String],default:!1},autoplay:{type:[Boolean,String],default:!1},circular:{type:[Boolean,String],default:!1},interval:{type:[Number,String],default:5e3},duration:{type:[Number,String],default:500},current:{type:[Number,String],default:0},indicatorColor:{type:String,default:"rgba(0,0,0,.3)"},indicatorActiveColor:{type:String,default:"#000000"},previousMargin:{type:String,default:""},nextMargin:{type:String,default:""},currentItemId:{type:String,default:""},skipHiddenItemLayout:{type:[Boolean,String],default:!1},displayMultipleItems:{type:[Number,String],default:1},disableTouch:{type:[Boolean,String],default:!1}},gr=C.config.env.platform.toLowerCase()==="android",gi=[{"uni-swiper":{"":{position:"relative",height:"150px"}},"uni-swiper-slider":{"":{position:"absolute",left:0,top:0,right:0,bottom:0}},"uni-swiper-dots":{"":{position:"absolute",left:0,right:0,bottom:"10",height:"10"}}}],uo=O.defineComponent({name:"Swiper",props:co,styles:gi,emits:["change","transition","animationfinish"],setup(y,{slots:M,emit:W}){let H=O.ref(null),Q=[],ee=Kn(H,W),he=fo(y),me=ra(he,y,Q,ee);return O.watch([()=>y.current,()=>y.currentItemId],([we,Be])=>{Qn(he,y,Q)}),O.onMounted(()=>{v(()=>{Pn(H.value).then(({width:we,height:Be})=>{he.swiperWidth=we,he.swiperHeight=Be})},50)}),()=>{let we=M.default&&M.default(),{indicatorStyle:Be,currentSync:Se}=he;return Q=no(we),O.createVNode("div",{ref:H,class:"uni-swiper"},[O.createVNode("slider",O.mergeProps({class:"uni-swiper-slider"},{autoPlay:y.autoplay,interval:y.interval,index:Se,keepIndex:!0,showIndicators:y.indicatorDots,infinite:y.circular,vertical:y.vertical,scrollable:!y.disableTouch},me),[Q,O.createVNode("indicator",{class:"uni-swiper-dots",style:Be},null)])])}}});function fo(y){let M=O.ref(0),W=O.ref(0),H=O.ref(y.current),Q=O.ref("autoplay"),ee=O.computed(()=>({itemColor:y.indicatorColor,itemSelectedColor:y.indicatorActiveColor,itemSize:8,opacity:y.indicatorDots?1:0}));return O.reactive({swiperWidth:M,swiperHeight:W,indicatorStyle:ee,currentSync:H,currentChangeSource:Q})}function ra(y,M,W,H){let Q=0,ee=Se=>{let je=Se.detail,bt=M.vertical,Ct=(bt?je.offsetYRatio:je.offsetXRatio)||0;if((Se.drag||Se.drag)&&(y.currentChangeSource="touch"),Ct===0){let Wt=Math.abs(Q);if(Wt===1)return;Wt>.5&&(Ct=1)}Q=Ct,H("transition",{dx:bt?0:-y.swiperWidth*Ct,dy:bt?-y.swiperHeight*Ct:0})},he=Se=>{let je=()=>{H("animationfinish",we()),y.currentChangeSource="autoplay"};gr?je():v(je,50)},me=Se=>{Nt.isString(Se.detail.source)&&(y.currentChangeSource=Se.detail.source),y.currentSync=Se.detail.index,Q=0};function we(){let Se=Number(y.currentSync),je=W[Se]||{},bt=je.componentInstance&&je.componentInstance.itemId||"";return{current:Se,currentItemId:bt,source:y.currentChangeSource}}return O.watch(()=>y.currentSync,Se=>{H("change",we())}),{onScroll:ee,onScrollend:he,onChange:me}}function Qn(y,M,W){let H=-1;if(M.currentItemId)for(let Q=0,ee=W;Q<ee.length;Q++){let he=ee[Q].componentInstance;if(he&&he.itemId===M.currentItemId){H=Q;break}}H<0&&(H=Math.round(Number(M.current))||0),H=H<0?0:H,y.currentSync!==H&&(y.currentChangeSource="",y.currentSync=H)}let Dr={itemId:{type:String,default:""}},qa=O.defineComponent({name:"SwiperItem",props:Dr,setup(y,{slots:M}){return()=>O.createVNode("div",{class:"uni-swiper-item",style:{position:"absolute",left:0,top:0,right:0,bottom:0,overflow:"hidden"}},[M.default&&M.default()])}});var Na=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,Lr=/^<\/([-A-Za-z0-9_]+)[^>]*>/,Vs=/([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,Us=ma("area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr"),il=ma("a,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video"),Oo=ma("abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var"),Ti=ma("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr"),ka=ma("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected"),Nl=ma("script,style");function zn(y,M){var W,H,Q,ee=[],he=y;for(ee.last=function(){return this[this.length-1]};y;){if(H=!0,!ee.last()||!Nl[ee.last()]){if(y.indexOf("<!--")==0?(W=y.indexOf("-->"),W>=0&&(M.comment&&M.comment(y.substring(4,W)),y=y.substring(W+3),H=!1)):y.indexOf("</")==0?(Q=y.match(Lr),Q&&(y=y.substring(Q[0].length),Q[0].replace(Lr,Be),H=!1)):y.indexOf("<")==0&&(Q=y.match(Na),Q&&(y=y.substring(Q[0].length),Q[0].replace(Na,we),H=!1)),H){W=y.indexOf("<");var me=W<0?y:y.substring(0,W);y=W<0?"":y.substring(W),M.chars&&M.chars(me)}}else y=y.replace(new RegExp("([\\s\\S]*?)</"+ee.last()+"[^>]*>"),function(Se,je){return je=je.replace(/<!--([\s\S]*?)-->|<!\[CDATA\[([\s\S]*?)]]>/g,"$1$2"),M.chars&&M.chars(je),""}),Be("",ee.last());if(y==he)throw"Parse Error: "+y;he=y}Be();function we(Se,je,bt,Ct){if(je=je.toLowerCase(),il[je])for(;ee.last()&&Oo[ee.last()];)Be("",ee.last());if(Ti[je]&&ee.last()==je&&Be("",je),Ct=Us[je]||!!Ct,Ct||ee.push(je),M.start){var Wt=[];bt.replace(Vs,function(Et,Je){var Mt=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:ka[Je]?Je:"";Wt.push({name:Je,value:Mt,escaped:Mt.replace(/(^|[^\\])"/g,'$1\\"')})}),M.start&&M.start(je,Wt,Ct)}}function Be(Se,je){if(je)for(var bt=ee.length-1;bt>=0&&ee[bt]!=je;bt--);else var bt=0;if(bt>=0){for(var Ct=ee.length-1;Ct>=bt;Ct--)M.end&&M.end(ee[Ct]);ee.length=bt}}}function ma(y){for(var M={},W=y.split(","),H=0;H<W.length;H++)M[W[H]]=!0;return M}function gs(y){return y.replace(/<\?xml.*\?>\n/,"").replace(/<!doctype.*>\n/,"").replace(/<!DOCTYPE.*>\n/,"")}function ho(y){return y.reduce(function(M,W){let H=W.value,Q=W.name;return H.match(/ /)&&["style","src"].indexOf(Q)===-1&&(H=H.split(" ")),M[Q]?Array.isArray(M[Q])?M[Q].push(H):M[Q]=[M[Q],H]:M[Q]=H,M},{})}function Ka(y){y=gs(y);let M=[],W={node:"root",children:[]};return zn(y,{start:function(H,Q,ee){let he={name:H};if(Q.length!==0&&(he.attrs=ho(Q)),ee){let me=M[0]||W;me.children||(me.children=[]),me.children.push(he)}else M.unshift(he)},end:function(H){let Q=M.shift();if(Q.name!==H&&console.error("invalid state: mismatch end tag"),M.length===0)W.children.push(Q);else{let ee=M[0];ee.children||(ee.children=[]),ee.children.push(Q)}},chars:function(H){let Q={type:"text",text:H};if(M.length===0)W.children.push(Q);else{let ee=M[0];ee.children||(ee.children=[]),ee.children.push(Q)}},comment:function(H){let Q={node:"comment",text:H},ee=M[0];ee.children||(ee.children=[]),ee.children.push(Q)}}),W.children}let ol={nodes:{type:[Array,String],default:function(){return[]}}},Ra=16,al=O.defineComponent({name:"RichText",props:ol,setup(y){let M=O.getCurrentInstance();return()=>{let W=y.nodes;return Nt.isString(W)&&(W=Ka(W)),O.createVNode("u-rich-text",{value:_a(W||[],M.root,{defaultFontSize:Ra})},null)}}});function _a(y,M,W){let H=["span","a","image","img"],Q={blockquote:je,br:Et,div:je,dl:je,h1:Ct(2),h2:Ct(1.5),h3:Ct(1.17),h4:Ct(1),h5:Ct(.83),h6:Ct(.67),hr:je,ol:je,p:je,strong:Wt,table:je,tbody:je,tfoot:je,thead:je,ul:je},ee=/&(amp|gt|lt|nbsp|quot|apos);/g,he={amp:"&",gt:">",lt:"<",nbsp:" ",quot:'"',apos:"'"},me={type:"span",__type:"break",attr:{value:`
`}},we={__block:!0,__break:!0,children:[]},Be=null;function Se(At){let nn=Object.create(null);if(At.attrs){let ar=(At.attrs.class||"").split(" ");Object.assign(nn,O.parseClassList(ar,M),si(At.attrs.style||""))}if(At.name==="img"||At.name==="image"){let ar=At.attrs;nn.width=nn.width||ar.width,nn.height=nn.height||ar.height}return nn}function je(At){return At.__block=!0,At}function bt(At,nn){return At.style&&!At.style.fontSize&&(At.style.fontSize=W.defaultFontSize*nn),je(Wt(At))}function Ct(At){return function(nn){return bt(nn,At)}}function Wt(At){return At.style&&!At.style.fontWeight&&(At.style.fontWeight="bold"),At}function Et(At){return At.__value=" ",je(At)}function Je(At){return At.replace(ee,function(nn,ar){return he[ar]})}function Mt(At){let nn=(At.name||"").toLowerCase(),ar=nn,Kt=Q[nn];H.indexOf(nn)===-1&&(nn="span"),nn==="img"&&(nn="image");let Gt={type:nn,__type:ar,attr:Object.create(null)};return(At.type==="text"||At.text)&&(Gt.__value=Gt.attr.value=Je((At.text||"").trim())),At.attrs&&Object.keys(At.attrs).forEach(Rn=>{Rn!=="class"&&Rn!=="style"&&(Gt.attr[Rn]=At.attrs[Rn])}),Gt.style=Se(At),Kt&&Kt(Gt),(we.__block||Gt.__block)&&(Be||(we.children.push(me),Be=[we,me])),we=Gt,(we.__value||we.type==="image"&&we.attr.src)&&(Be=null),Gt.children=_n(At.children),we=Gt,we.__block&&we.style.height&&!/^0(px)?$/.test(we.style.height)&&(Be=null),Gt}function _n(At){return Nt.isArray(At)?At.map(nn=>Mt(nn)):[]}let wn=_n(y);if(Be){let[At,nn]=Be,ar=At.children,Kt=ar.indexOf(nn);ar.splice(Kt,1)}return wn}let vs={};function ms(y,M,W){let{adpid:H,width:Q}=y,ee=H+"-"+Q,he=vs[ee];if(he&&he.length>0){M(he.splice(0,1)[0]);return}d.ad.getAds(y,me=>{let we=me.ads;M(we.splice(0,1)[0]),vs[ee]=he?he.concat(we):we},me=>{W({errCode:me.code,errMsg:me.message})})}let zi={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""},channel:{type:String,default:""}},Cr={load:"load",close:"close",error:"error",downloadchange:"downloadchange"},ba=O.defineComponent({name:"Ad",props:zi,emits:[Cr.load,Cr.close,Cr.error,Cr.downloadchange],setup(y,{emit:M}){let W=O.ref(null),H=Kn(W,M),Q=Lo();O.watch(()=>y.adpid,he=>{xa(Q,y,H)}),O.watch(()=>y.data,he=>{Q.data=he}),O.onMounted(()=>{v(()=>{Pn(W.value).then(({width:he})=>{Q.width=he===0?-1:he,xa(Q,y,H)})},50)});let ee={onDownloadchange(he){H(Cr.downloadchange,he)},onDislike(he){H(Cr.close,he)}};return()=>O.createVNode("u-ad",O.mergeProps({ref:W},{data:Q.data,rendering:!0},ee),null)}});function Lo(y){let M=O.ref("");return O.reactive({width:0,data:M})}function xa(y,M,W){ms({adpid:M.adpid,width:y.width},H=>{y.data=H,W(Cr.load,{})},H=>{W(Cr.error,H)})}let sl={};function $s(y,M,W,H,Q){let ee=y+"-"+M,he=sl[ee];if(he&&he.length>0){H(he.splice(0,1)[0]);return}d.ad.getDrawAds({adpid:String(y),count:3,width:M},me=>{let we=me.ads;H(we.splice(0,1)[0]),sl[ee]=he?he.concat(we):we},me=>{Q({errCode:me.code,errMsg:me.message})})}let kl={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""}},ya={load:"load",close:"close",error:"error"},_s=O.defineComponent({name:"AdDraw",props:kl,emits:[ya.load,ya.close,ya.error],setup(y,{emit:M}){let W=O.ref(null),H=Kn(W,M),Q=Hs();O.watch(()=>y.adpid,he=>{ll(Q,y,H)}),O.watch(()=>y.data,he=>{Q.data=he});let ee={onDislike(he){H(ya.close,he)}};return O.onMounted(()=>{v(()=>{Pn(W.value).then(({width:he,height:me})=>{Q.width=he===0?-1:he,Q.height=me===0?-1:me,ll(Q,y,H)})},50)}),()=>{let{data:he}=Q;return O.createVNode("u-ad-draw",O.mergeProps({ref:W},{data:he,rendering:!0},ee),null)}}});function Hs(y){let M=O.ref("");return O.reactive({width:0,height:0,data:M})}function ll(y,M,W){$s(M.adpid,y.width,y.height,H=>{y.data=H,W(ya.load,{})},H=>{W(ya.error,H)})}return{Navigator:wi,Label:lr,Button:mo,MovableArea:cr,MovableView:Ya,Progress:bo,PickerView:Hi,PickerViewColumn:So,Picker:Zn,USlider:Xr,Switch:Oi,Checkbox:Co,CheckboxGroup:pi,Radio:de,RadioGroup:J,Form:xe,Icon:Mr,Swiper:uo,SwiperItem:qa,RichText:al,Ad:ba,AdDraw:_s}}(k,We,Pt);return pe}function uP(v,l){let{UniShared:b,Vue:T}=l;function k(d,m,R){let We=d.$[m];return We&&b.invokeArrayFns(We,R)}let C=v.setup;return v.inheritAttrs=!1,v.setup=(d,m)=>{let{attrs:{__pageId:R,__pagePath:We,__pageQuery:Pt}}=m,en=l.__uniRoutes.find(Nt=>Nt.meta.route===We),pe=T.getCurrentInstance(),O=pe.proxy;if(en&&(en.meta.isSubNVue||fP(O,l,{__pageId:R,__pagePath:We})),T.onMounted(()=>{T.nextTick(()=>{k(O,b.ON_READY)}),pe.onPageScroll&&O.$el.addEvent("scroll",Nt=>{Nt.scrollTop=Nt.detail.scrollTop,k(O,b.ON_PAGE_SCROLL,Nt)}),pe.onReachBottom&&O.$el.addEvent("scrolltolower",Nt=>{k(O,b.ON_REACH_BOTTOM,Nt)})}),T.onBeforeUnmount(()=>{k(O,b.ON_UNLOAD)}),C)return C(Pt,m)},v}function fP(v,l,{__pageId:b,__pagePath:T}){let k=l.getCurrentPages(),C=k[k.length-1];if(C&&C.__setup)C.__setup(v,C);else{let d="/"+T;return l.__registerPage({url:d,path:d,query:{},openType:"launch",webview:{id:b+""},nvuePageVm:v})}}var Lc={},Yg;function qg(v){Yg=v}var af;function dP(v){if(af)return af;let l=new v.Emitter;return af={on(b,T){return l.on(b,T)},once(b,T){return l.once(b,T)},off(b,T){return l.off(b,T)},emit(b,...T){return l.emit(b,...T)}},af}function hP(v){return(l,b,T)=>{let{nvue:k}=b,C=of(v,b);b.Vue=C,Lc[l]={instanceId:l,config:k.config,document:k.document,data:T};let{createApp:d}=C;C.createVueApp=C.createApp=(m,R)=>(b.__uniConfig.styles=m.styles||[],d(m,R).use(pP,l,b)),C.createPageApp=(m,R)=>{uP(m,b);let We=R.$store;delete R.$store;let Pt=d(m,R);return We&&Pt.use(We),Pt.use(vP,C,l,b)}}}var pP={install(v,l,b){Eu(b).initApp(v),gP(v,l,b)}};function gP(v,l,b){let{mount:T}=v,k=Lc[l];return v.mount=C=>{let d=C==="#app",m=k.app=T(Kg(k.document,{isRoot:d}));return d&&b.__registerApp(m),m},v}var vP={install(v,l,b,T){let{weex:k,plus:C,BroadcastChannel:d,VueShared:m,UniShared:R,getCurrentPages:We,setTimeout:Pt,clearTimeout:en,__uniConfig:pe}=T;v.config.globalProperties.$requireNativePlugin=k.requireModule;let O=cP({uni:Yg,Vue:l,weex:k,plus:C,BroadcastChannel:d,UniViewJSBridge:dP(R),VueShared:m,UniShared:R,getCurrentPages:We,setTimeout:Pt,clearTimeout:en,__uniConfig:pe});Object.keys(O).forEach(Nt=>{v.component(l.hyphenate(Nt),O[Nt])}),Eu(T).initApp(v),mP(v,b,T)}};function mP(v,l,{nvue:b}){let{config:{compilerOptions:T},mount:k}=v;T.isCustomElement=d=>!!b.supports(`@component/${d}`);let C=Lc[l];return v.mount=d=>{let m=d==="#root",R=C.app=k(Kg(C.document,{isRoot:m}));if(m)try{b.document.taskCenter.send("dom",{action:"createFinish"},[])}catch(We){}return R},v}function Kg(v,{isRoot:l}){if(l)return v.documentElement;let b=v.createComment("root");return v.documentElement.appendChild(b),b}function Jg(v){let l=Lc[v];if(l&&l.app&&l.document){try{l.app.$.appContext.app.unmount(),l.document.destroy()}catch(b){}delete l.document,delete l.app}delete Lc[v]}function Zg(v){let l=Lc[v];if(!l||!l.app)return new Error(`refreshInstance: instance ${v} not found!`);l.document.taskCenter.send("dom",{action:"refreshFinish"},[])}function _P(v,l){let{UniShared:b,VueShared:T,VueReactivity:k}=v;var C=function(d,m,R,We){"use strict";var Pt=[];function en(o){Pt.push(o)}function pe(){Pt.pop()}function O(o){R.pauseTracking();for(var c=Pt.length?Pt[Pt.length-1].component:null,h=c&&c.appContext.config.warnHandler,_=Nt(),I=arguments.length,A=new Array(I>1?I-1:0),x=1;x<I;x++)A[x-1]=arguments[x];if(h)Jt(h,c,11,[o+A.join(""),c&&c.proxy,_.map($=>{var{vnode:te}=$;return"at <".concat(Sa(c,te.type),">")}).join(`
`),_]);else{var z=["[Vue warn]: ".concat(o),...A];_.length&&z.push(`
`,...jn(_)),console.warn(...z)}R.resetTracking()}function Nt(){var o=Pt[Pt.length-1];if(!o)return[];for(var c=[];o;){var h=c[0];h&&h.vnode===o?h.recurseCount++:c.push({vnode:o,recurseCount:0});var _=o.component&&o.component.parent;o=_&&_.vnode}return c}function jn(o){var c=[];return o.forEach((h,_)=>{c.push(..._===0?[]:[`
`],..._t(h))}),c}function _t(o){var{vnode:c,recurseCount:h}=o,_=h>0?"... (".concat(h," recursive calls)"):"",I=c.component?c.component.parent==null:!1,A=" at <".concat(Sa(c.component,c.type,I)),x=">"+_;return c.props?[A,...K(c.props),x]:[A+x]}function K(o){var c=[],h=Object.keys(o);return h.slice(0,3).forEach(_=>{c.push(...re(_,o[_]))}),h.length>3&&c.push(" ..."),c}function re(o,c,h){return m.isString(c)?(c=JSON.stringify(c),h?c:["".concat(o,"=").concat(c)]):typeof c=="number"||typeof c=="boolean"||c==null?h?c:["".concat(o,"=").concat(c)]:R.isRef(c)?(c=re(o,R.toRaw(c.value),!0),h?c:["".concat(o,"=Ref<"),c,">"]):m.isFunction(c)?["".concat(o,"=fn").concat(c.name?"<".concat(c.name,">"):"")]:(c=R.toRaw(c),h?c:["".concat(o,"="),c])}function Dn(o,c){o!==void 0&&(typeof o!="number"?O("".concat(c," is not a valid number - ")+"got ".concat(JSON.stringify(o),".")):isNaN(o)&&O("".concat(c," is NaN - ")+"the duration expression might be incorrect."))}var fn={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",[0]:"setup function",[1]:"render function",[2]:"watcher getter",[3]:"watcher callback",[4]:"watcher cleanup function",[5]:"native event handler",[6]:"component event handler",[7]:"vnode hook",[8]:"directive hook",[9]:"transition hook",[10]:"app errorHandler",[11]:"app warnHandler",[12]:"ref function",[13]:"async component loader",[14]:"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core"};function Jt(o,c,h,_){var I;try{I=_?o(..._):o()}catch(A){Ir(A,c,h)}return I}function cn(o,c,h,_){if(m.isFunction(o)){var I=Jt(o,c,h,_);return I&&m.isPromise(I)&&I.catch(z=>{Ir(z,c,h)}),I}for(var A=[],x=0;x<o.length;x++)A.push(cn(o[x],c,h,_));return A}function Ir(o,c,h){var _=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,I=c?c.vnode:null;if(c){for(var A=c.parent,x=c.proxy,z=fn[h]||h;A;){var $=A.ec;if($){for(var te=0;te<$.length;te++)if($[te](o,x,z)===!1)return}A=A.parent}var Ie=c.appContext.config.errorHandler;if(Ie){Jt(Ie,null,10,[o,x,z]);return}}wi(o,h,I,_)}function wi(o,c,h){var _=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;{var I=fn[c]||c;if(h&&en(h),O("Unhandled error".concat(I?" during execution of ".concat(I):"")),h&&pe(),_)throw o;console.error(o)}}var qn=!1,hn=!1,Vt=[],Nn=0,yn=[],xn=null,Pr=0,Ke=Promise.resolve(),dt=null,St=100;function tn(o){var c=dt||Ke;return o?c.then(this?o.bind(this):o):c}function kn(o){for(var c=Nn+1,h=Vt.length;c<h;){var _=c+h>>>1,I=Er(Vt[_]);I<o?c=_+1:h=_}return c}function Zt(o){(!Vt.length||!Vt.includes(o,qn&&o.allowRecurse?Nn+1:Nn))&&(o.id==null?Vt.push(o):Vt.splice(kn(o.id),0,o),Ln())}function Ln(){!qn&&!hn&&(hn=!0,dt=Ke.then(Go))}function Nr(o){var c=Vt.indexOf(o);c>Nn&&Vt.splice(c,1)}function Ur(o){m.isArray(o)?yn.push(...o):(!xn||!xn.includes(o,o.allowRecurse?Pr+1:Pr))&&yn.push(o),Ln()}function Fi(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:qn?Nn+1:0;for(o=o||new Map;c<Vt.length;c++){var h=Vt[c];if(h&&h.pre){if(Yo(o,h))continue;Vt.splice(c,1),c--,h()}}}function lr(o){if(yn.length){var c=[...new Set(yn)];if(yn.length=0,xn){xn.push(...c);return}for(xn=c,o=o||new Map,xn.sort((h,_)=>Er(h)-Er(_)),Pr=0;Pr<xn.length;Pr++)Yo(o,xn[Pr])||xn[Pr]();xn=null,Pr=0}}var Er=o=>o.id==null?1/0:o.id,Vi=(o,c)=>{var h=Er(o)-Er(c);if(h===0){if(o.pre&&!c.pre)return-1;if(c.pre&&!o.pre)return 1}return h};function Go(o){hn=!1,qn=!0,o=o||new Map,Vt.sort(Vi);var c=_=>Yo(o,_);try{for(Nn=0;Nn<Vt.length;Nn++){var h=Vt[Nn];if(h&&h.active!==!1){if(c(h))continue;Jt(h,null,14)}}}finally{Nn=0,Vt.length=0,lr(o),qn=!1,dt=null,(Vt.length||yn.length)&&Go(o)}}function Yo(o,c){if(!o.has(c))o.set(c,1);else{var h=o.get(c);if(h>St){var _=c.ownerInstance,I=_&&ts(_.type);return O("Maximum recursive updates exceeded".concat(I?" in component <".concat(I,">"):"",". ")+"This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function."),!0}else o.set(c,h+1)}}var kr=!1,Rr=new Set;m.getGlobalThis().__VUE_HMR_RUNTIME__={createRecord:qo(Ta),rerender:qo(mo),reload:qo(Ia)};var xr=new Map;function Ui(o){var c=o.type.__hmrId,h=xr.get(c);h||(Ta(c,o.type),h=xr.get(c)),h.instances.add(o)}function Yr(o){xr.get(o.type.__hmrId).instances.delete(o)}function Ta(o,c){return xr.has(o)?!1:(xr.set(o,{initialDef:$i(c),instances:new Set}),!0)}function $i(o){return ks(o)?o.__vccOpts:o}function mo(o,c){var h=xr.get(o);!h||(h.initialDef.render=c,[...h.instances].forEach(_=>{c&&(_.render=c,$i(_.type).render=c),_.renderCache=[],kr=!0,_.update(),kr=!1}))}function Ia(o,c){var h=xr.get(o);if(!!h){c=$i(c),no(h.initialDef,c);var _=[...h.instances];for(var I of _){var A=$i(I.type);Rr.has(A)||(A!==h.initialDef&&no(A,c),Rr.add(A)),I.appContext.optionsCache.delete(I.type),I.ceReload?(Rr.add(A),I.ceReload(c.styles),Rr.delete(A)):I.parent?Zt(I.parent.update):I.appContext.reload?I.appContext.reload():typeof window!="undefined"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required.")}Ur(()=>{for(var x of _)Rr.delete($i(x.type))})}}function no(o,c){m.extend(o,c);for(var h in o)h!=="__file"&&!(h in c)&&delete o[h]}function qo(o){return(c,h)=>{try{return o(c,h)}catch(_){console.error(_),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}d.devtools=void 0;var si=[],Pn=!1;function cr(o){for(var c=arguments.length,h=new Array(c>1?c-1:0),_=1;_<c;_++)h[_-1]=arguments[_];d.devtools?d.devtools.emit(o,...h):Pn||si.push({event:o,args:h})}function li(o,c){var h,_;if(d.devtools=o,d.devtools)d.devtools.enabled=!0,si.forEach(A=>{var{event:x,args:z}=A;return d.devtools.emit(x,...z)}),si=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((_=(h=window.navigator)===null||h===void 0?void 0:h.userAgent)===null||_===void 0?void 0:_.includes("jsdom"))){var I=c.__VUE_DEVTOOLS_HOOK_REPLAY__=c.__VUE_DEVTOOLS_HOOK_REPLAY__||[];I.push(A=>{li(A,c)}),setTimeout(()=>{d.devtools||(c.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Pn=!0,si=[])},3e3)}else Pn=!0,si=[]}function Kn(o,c){cr("app:init",o,c,{Fragment:gt,Text:ut,Comment:xt,Static:Yt})}function Ko(o){cr("app:unmount",o)}var xo=oo("component:added"),ro=oo("component:updated"),io=oo("component:removed"),qr=o=>{d.devtools&&typeof d.devtools.cleanupBuffer=="function"&&!d.devtools.cleanupBuffer(o)&&io(o)};function oo(o){return c=>{cr(o,c.appContext.app,c.uid,c.parent?c.parent.uid:void 0,c)}}var Fn=ci("perf:start"),wr=ci("perf:end");function ci(o){return(c,h,_)=>{cr(o,c.appContext.app,c.uid,c,h,_)}}function Jo(o,c,h){cr("component:emit",o.appContext.app,o,c,h)}function _o(o,c){if(!o.isUnmounted){for(var h=o.vnode.props||m.EMPTY_OBJ,_=arguments.length,I=new Array(_>2?_-2:0),A=2;A<_;A++)I[A-2]=arguments[A];{var{emitsOptions:x,propsOptions:[z]}=o;if(x)if(!(c in x))(!z||!(m.toHandlerKey(c)in z))&&O('Component emitted event "'.concat(c,'" but it is neither declared in ')+'the emits option nor as an "'.concat(m.toHandlerKey(c),'" prop.'));else{var $=x[c];if(m.isFunction($)){var te=$(...I);te||O('Invalid event arguments: event validation failed for event "'.concat(c,'".'))}}}var Ie=I,fe=c.startsWith("update:"),ue=fe&&c.slice(7);if(ue&&ue in h){var He="".concat(ue==="modelValue"?"model":ue,"Modifiers"),{number:Ze,trim:vt}=h[He]||m.EMPTY_OBJ;vt&&(Ie=I.map(nt=>m.isString(nt)?nt.trim():nt)),Ze&&(Ie=I.map(m.looseToNumber))}Jo(o,c,Ie);{var yt=c.toLowerCase();yt!==c&&h[m.toHandlerKey(yt)]&&O('Event "'.concat(yt,'" is emitted in component ')+"".concat(Sa(o,o.type),' but the handler is registered for "').concat(c,'". ')+"Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. "+'You should probably use "'.concat(m.hyphenate(c),'" instead of "').concat(c,'".'))}var Ne,_e=h[Ne=m.toHandlerKey(c)]||h[Ne=m.toHandlerKey(m.camelize(c))];!_e&&fe&&(_e=h[Ne=m.toHandlerKey(m.hyphenate(c))]),_e&&cn(_e,o,6,Ie);var Me=h[Ne+"Once"];if(Me){if(!o.emitted)o.emitted={};else if(o.emitted[Ne])return;o.emitted[Ne]=!0,cn(Me,o,6,Ie)}}}function Zo(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,_=c.emitsCache,I=_.get(o);if(I!==void 0)return I;var A=o.emits,x={},z=!1;if(!m.isFunction(o)){var $=te=>{var Ie=Zo(te,c,!0);Ie&&(z=!0,m.extend(x,Ie))};!h&&c.mixins.length&&c.mixins.forEach($),o.extends&&$(o.extends),o.mixins&&o.mixins.forEach($)}return!A&&!z?(m.isObject(o)&&_.set(o,null),null):(m.isArray(A)?A.forEach(te=>x[te]=null):m.extend(x,A),m.isObject(o)&&_.set(o,x),x)}function Kr(o,c){return!o||!m.isOn(c)?!1:(c=c.slice(2).replace(/Once$/,""),m.hasOwn(o,c[0].toLowerCase()+c.slice(1))||m.hasOwn(o,m.hyphenate(c))||m.hasOwn(o,c))}var On=null,En=null;function ui(o){var c=On;return On=o,En=o&&o.type.__scopeId||null,c}function Bo(o){En=o}function Ya(){En=null}var Jn=o=>Jr;function Jr(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:On;if(!c||o._n)return o;var h=function(){h._d&&$o(-1);var _=ui(c),I;try{I=o(...arguments)}finally{ui(_),h._d&&$o(1)}return ro(c),I};return h._n=!0,h._c=!0,h._d=!0,h}var ur=!1;function Dt(){ur=!0}function ke(o){var{type:c,vnode:h,proxy:_,withProxy:I,props:A,propsOptions:[x],slots:z,attrs:$,emit:te,render:Ie,renderCache:fe,data:ue,setupState:He,ctx:Ze,inheritAttrs:vt}=o,yt,Ne,_e=ui(o);ur=!1;try{if(h.shapeFlag&4){var Me=I||_;yt=Ji(Ie.call(Me,Me,fe,A,He,ue,Ze)),Ne=$}else{var nt=c;$===A&&Dt(),yt=Ji(nt.length>1?nt(A,{get attrs(){return Dt(),$},slots:z,emit:te}):nt(A,null)),Ne=c.props?$:Eo($)}}catch(N){Wn.length=0,Ir(N,o,1),yt=Gn(xt)}var qe=yt,at=void 0;if(yt.patchFlag>0&&yt.patchFlag&2048&&([qe,at]=bo(yt)),Ne&&vt!==!1){var It=Object.keys(Ne),{shapeFlag:st}=qe;if(It.length){if(st&(1|6))x&&It.some(m.isModelListener)&&(Ne=pa(Ne,x)),qe=qi(qe,Ne);else if(!ur&&qe.type!==xt){for(var i=Object.keys($),a=[],f=[],p=0,S=i.length;p<S;p++){var w=i[p];m.isOn(w)?m.isModelListener(w)||a.push(w[2].toLowerCase()+w.slice(3)):f.push(w)}f.length&&O("Extraneous non-props attributes ("+"".concat(f.join(", "),") ")+"were passed to component but could not be automatically inherited because component renders fragment or text root nodes."),a.length&&O("Extraneous non-emits event listeners ("+"".concat(a.join(", "),") ")+'were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.')}}}return h.dirs&&(Xo(qe)||O("Runtime directive used on component with non-element root node. The directives will not function as intended."),qe=qi(qe),qe.dirs=qe.dirs?qe.dirs.concat(h.dirs):h.dirs),h.transition&&(Xo(qe)||O("Component inside <Transition> renders non-element root node that cannot be animated."),qe.transition=h.transition),at?at(qe):yt=qe,ui(_e),yt}var bo=o=>{var c=o.children,h=o.dynamicChildren,_=yo(c);if(!_)return[o,void 0];var I=c.indexOf(_),A=h?h.indexOf(_):-1,x=z=>{c[I]=z,h&&(A>-1?h[A]=z:z.patchFlag>0&&(o.dynamicChildren=[...h,z]))};return[Ji(_),x]};function yo(o){for(var c,h=0;h<o.length;h++){var _=o[h];if(oa(_)){if(_.type!==xt||_.children==="v-if"){if(c)return;c=_}}else return}return c}var Eo=o=>{var c;for(var h in o)(h==="class"||h==="style"||m.isOn(h))&&((c||(c={}))[h]=o[h]);return c},pa=(o,c)=>{var h={};for(var _ in o)(!m.isModelListener(_)||!(_.slice(9)in c))&&(h[_]=o[_]);return h},Xo=o=>o.shapeFlag&(6|1)||o.type===xt;function Hi(o,c,h){var{props:_,children:I,component:A}=o,{props:x,children:z,patchFlag:$}=c,te=A.emitsOptions;if((I||z)&&kr||c.dirs||c.transition)return!0;if(h&&$>=0){if($&1024)return!0;if($&16)return _?wo(_,x,te):!!x;if($&8)for(var Ie=c.dynamicProps,fe=0;fe<Ie.length;fe++){var ue=Ie[fe];if(x[ue]!==_[ue]&&!Kr(te,ue))return!0}}else return(I||z)&&(!z||!z.$stable)?!0:_===x?!1:_?x?wo(_,x,te):!0:!!x;return!1}function wo(o,c,h){var _=Object.keys(c);if(_.length!==Object.keys(o).length)return!0;for(var I=0;I<_.length;I++){var A=_[I];if(c[A]!==o[A]&&!Kr(h,A))return!0}return!1}function Zr(o,c){for(var{vnode:h,parent:_}=o;_&&_.subTree===h;)(h=_.vnode).el=c,_=_.parent}var fi=o=>o.__isSuspense,Qo={name:"Suspense",__isSuspense:!0,process(o,c,h,_,I,A,x,z,$,te){o==null?di(c,h,_,I,A,x,z,$,te):ga(o,c,h,_,I,x,z,$,te)},hydrate:fr,create:Br,normalize:ea},an=Qo;function So(o,c){var h=o.props&&o.props[c];m.isFunction(h)&&h()}function di(o,c,h,_,I,A,x,z,$){var{p:te,o:{createElement:Ie}}=$,fe=Ie("div"),ue=o.suspense=Br(o,I,_,c,fe,h,A,x,z,$);te(null,ue.pendingBranch=o.ssContent,fe,null,_,ue,A,x),ue.deps>0?(So(o,"onPending"),So(o,"onFallback"),te(null,o.ssFallback,c,h,_,null,A,x),ao(ue,o.ssFallback)):ue.resolve()}function ga(o,c,h,_,I,A,x,z,$){var{p:te,um:Ie,o:{createElement:fe}}=$,ue=c.suspense=o.suspense;ue.vnode=c,c.el=o.el;var He=c.ssContent,Ze=c.ssFallback,{activeBranch:vt,pendingBranch:yt,isInFallback:Ne,isHydrating:_e}=ue;if(yt)ue.pendingBranch=He,vr(He,yt)?(te(yt,He,ue.hiddenContainer,null,I,ue,A,x,z),ue.deps<=0?ue.resolve():Ne&&(te(vt,Ze,h,_,I,null,A,x,z),ao(ue,Ze))):(ue.pendingId++,_e?(ue.isHydrating=!1,ue.activeBranch=yt):Ie(yt,I,ue),ue.deps=0,ue.effects.length=0,ue.hiddenContainer=fe("div"),Ne?(te(null,He,ue.hiddenContainer,null,I,ue,A,x,z),ue.deps<=0?ue.resolve():(te(vt,Ze,h,_,I,null,A,x,z),ao(ue,Ze))):vt&&vr(He,vt)?(te(vt,He,h,_,I,ue,A,x,z),ue.resolve(!0)):(te(null,He,ue.hiddenContainer,null,I,ue,A,x,z),ue.deps<=0&&ue.resolve()));else if(vt&&vr(He,vt))te(vt,He,h,_,I,ue,A,x,z),ao(ue,He);else if(So(c,"onPending"),ue.pendingBranch=He,ue.pendingId++,te(null,He,ue.hiddenContainer,null,I,ue,A,x,z),ue.deps<=0)ue.resolve();else{var{timeout:Me,pendingId:nt}=ue;Me>0?setTimeout(()=>{ue.pendingId===nt&&ue.fallback(Ze)},Me):Me===0&&ue.fallback(Ze)}}var mn=!1;function Br(o,c,h,_,I,A,x,z,$,te){var Ie=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1;mn||(mn=!0,console[console.info?"info":"log"]("<Suspense> is an experimental feature and its API will likely change."));var{p:fe,m:ue,um:He,n:Ze,o:{parentNode:vt,remove:yt}}=te,Ne=o.props?m.toNumber(o.props.timeout):void 0;Dn(Ne,"Suspense timeout");var _e={vnode:o,parent:c,parentComponent:h,isSVG:x,container:_,hiddenContainer:I,anchor:A,deps:0,pendingId:0,timeout:typeof Ne=="number"?Ne:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:Ie,isUnmounted:!1,effects:[],resolve(){var Me=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;{if(!Me&&!_e.pendingBranch)throw new Error("suspense.resolve() is called without a pending branch.");if(_e.isUnmounted)throw new Error("suspense.resolve() is called on an already unmounted suspense boundary.")}var{vnode:nt,activeBranch:qe,pendingBranch:at,pendingId:It,effects:st,parentComponent:i,container:a}=_e;if(_e.isHydrating)_e.isHydrating=!1;else if(!Me){var f=qe&&at.transition&&at.transition.mode==="out-in";f&&(qe.transition.afterLeave=()=>{It===_e.pendingId&&ue(at,a,p,0)});var{anchor:p}=_e;qe&&(p=Ze(qe),He(qe,i,_e,!0)),f||ue(at,a,p,0)}ao(_e,at),_e.pendingBranch=null,_e.isInFallback=!1;for(var S=_e.parent,w=!1;S;){if(S.pendingBranch){S.effects.push(...st),w=!0;break}S=S.parent}w||Ur(st),_e.effects=[],So(nt,"onResolve")},fallback(Me){if(!!_e.pendingBranch){var{vnode:nt,activeBranch:qe,parentComponent:at,container:It,isSVG:st}=_e;So(nt,"onFallback");var i=Ze(qe),a=()=>{!_e.isInFallback||(fe(null,Me,It,i,at,null,st,z,$),ao(_e,Me))},f=Me.transition&&Me.transition.mode==="out-in";f&&(qe.transition.afterLeave=a),_e.isInFallback=!0,He(qe,at,null,!0),f||a()}},move(Me,nt,qe){_e.activeBranch&&ue(_e.activeBranch,Me,nt,qe),_e.container=Me},next(){return _e.activeBranch&&Ze(_e.activeBranch)},registerDep(Me,nt){var qe=!!_e.pendingBranch;qe&&_e.deps++;var at=Me.vnode.el;Me.asyncDep.catch(It=>{Ir(It,Me,0)}).then(It=>{if(!(Me.isUnmounted||_e.isUnmounted||_e.pendingId!==Me.suspenseId)){Me.asyncResolved=!0;var{vnode:st}=Me;en(st),dl(Me,It,!1),at&&(st.el=at);var i=!at&&Me.subTree.el;nt(Me,st,vt(at||Me.subTree.el),at?null:Ze(Me.subTree),_e,x,$),i&&yt(i),Zr(Me,st.el),pe(),qe&&--_e.deps===0&&_e.resolve()}})},unmount(Me,nt){_e.isUnmounted=!0,_e.activeBranch&&He(_e.activeBranch,h,Me,nt),_e.pendingBranch&&He(_e.pendingBranch,h,Me,nt)}};return _e}function fr(o,c,h,_,I,A,x,z,$){var te=c.suspense=Br(c,_,h,o.parentNode,l.createElement("div"),null,I,A,x,z,!0),Ie=$(o,te.pendingBranch=c.ssContent,h,te,A,x);return te.deps===0&&te.resolve(),Ie}function ea(o){var{shapeFlag:c,children:h}=o,_=c&32;o.ssContent=Pa(_?h.default:h),o.ssFallback=_?Pa(h.fallback):Gn(xt)}function Pa(o){var c;if(m.isFunction(o)){var h=ki&&o._c;h&&(o._d=!1,nr()),o=o(),h&&(o._d=!0,c=Mn,wa())}if(m.isArray(o)){var _=yo(o);_||O("<Suspense> slots expect a single root node."),o=_}return o=Ji(o),c&&!o.dynamicChildren&&(o.dynamicChildren=c.filter(I=>I!==o)),o}function ta(o,c){c&&c.pendingBranch?m.isArray(o)?c.effects.push(...o):c.effects.push(o):Ur(o)}function ao(o,c){o.activeBranch=c;var{vnode:h,parentComponent:_}=o,I=h.el=c.el;_&&_.subTree===h&&(_.vnode.el=I,Zr(_,I))}function Zn(o,c){if(!Bn)O("provide() can only be used inside setup().");else{var h=Bn.provides,_=Bn.parent&&Bn.parent.provides;_===h&&(h=Bn.provides=Object.create(_)),h[o]=c,Bn.type.mpType==="app"&&Bn.appContext.app.provide(o,c)}}function or(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,_=Bn||On;if(_){var I=_.parent==null?_.vnode.appContext&&_.vnode.appContext.provides:_.parent.provides;if(I&&o in I)return I[o];if(arguments.length>1)return h&&m.isFunction(c)?c.call(_.proxy):c;O('injection "'.concat(String(o),'" not found.'))}else O("inject() can only be used inside setup() or functional components.")}function Vn(o,c){return Ci(o,null,c)}function Xr(o,c){return Ci(o,null,Object.assign(Object.assign({},c),{flush:"post"}))}function hi(o,c){return Ci(o,null,Object.assign(Object.assign({},c),{flush:"sync"}))}var na={};function Si(o,c,h){return m.isFunction(c)||O("`watch(fn, options?)` signature has been moved to a separate API. Use `watchEffect(fn, options?)` instead. `watch` now only supports `watch(source, cb, options?) signature."),Ci(o,c,h)}function Ci(o,c){var{immediate:h,deep:_,flush:I,onTrack:A,onTrigger:x}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:m.EMPTY_OBJ;c||(h!==void 0&&O('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'),_!==void 0&&O('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'));var z=at=>{O("Invalid watch source: ",at,"A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.")},$=R.getCurrentScope()===(Bn==null?void 0:Bn.scope)?Bn:null,te,Ie=!1,fe=!1;if(R.isRef(o)?(te=()=>o.value,Ie=R.isShallow(o)):R.isReactive(o)?(te=()=>o,_=!0):m.isArray(o)?(fe=!0,Ie=o.some(at=>R.isReactive(at)||R.isShallow(at)),te=()=>o.map(at=>{if(R.isRef(at))return at.value;if(R.isReactive(at))return Oi(at);if(m.isFunction(at))return Jt(at,$,2);z(at)})):m.isFunction(o)?c?te=()=>Jt(o,$,2):te=()=>{if(!($&&$.isUnmounted))return He&&He(),cn(o,$,3,[Ze])}:(te=m.NOOP,z(o)),c&&_){var ue=te;te=()=>Oi(ue())}var He,Ze=at=>{He=nt.onStop=()=>{Jt(at,$,4)}},vt;if(d.isInSSRComponentSetup)if(Ze=m.NOOP,c?h&&cn(c,$,3,[te(),fe?[]:void 0,Ze]):te(),I==="sync"){var yt=vl();vt=yt.__watcherHandles||(yt.__watcherHandles=[])}else return m.NOOP;var Ne=fe?new Array(o.length).fill(na):na,_e=()=>{if(!!nt.active)if(c){var at=nt.run();(_||Ie||(fe?at.some((It,st)=>m.hasChanged(It,Ne[st])):m.hasChanged(at,Ne)))&&(He&&He(),cn(c,$,3,[at,Ne===na?void 0:fe&&Ne[0]===na?[]:Ne,Ze]),Ne=at)}else nt.run()};_e.allowRecurse=!!c;var Me;I==="sync"?Me=_e:I==="post"?Me=()=>hr(_e,$&&$.suspense):(_e.pre=!0,$&&(_e.id=$.uid),Me=()=>Zt(_e));var nt=new R.ReactiveEffect(te,Me);nt.onTrack=A,nt.onTrigger=x,c?h?_e():Ne=nt.run():I==="post"?hr(nt.run.bind(nt),$&&$.suspense):nt.run();var qe=()=>{nt.stop(),$&&$.scope&&m.remove($.scope.effects,nt)};return vt&&vt.push(qe),qe}function so(o,c,h){var _=this.proxy,I=m.isString(o)?o.includes(".")?va(_,o):()=>_[o]:o.bind(_,_),A;m.isFunction(c)?A=c:(A=c.handler,h=c);var x=Bn;mi(this);var z=Ci(I,A.bind(_),h);return x?mi(x):_i(),z}function va(o,c){var h=c.split(".");return()=>{for(var _=o,I=0;I<h.length&&_;I++)_=_[h[I]];return _}}function Oi(o,c){if(!m.isObject(o)||o.__v_skip||(c=c||new Set,c.has(o)))return o;if(c.add(o),R.isRef(o))Oi(o.value,c);else if(m.isArray(o))for(var h=0;h<o.length;h++)Oi(o[h],c);else if(m.isSet(o)||m.isMap(o))o.forEach(I=>{Oi(I,c)});else if(m.isPlainObject(o))for(var _ in o)Oi(o[_],c);return o}function ji(){var o={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return uo(()=>{o.isMounted=!0}),Qn(()=>{o.isUnmounting=!0}),o}var dr=[Function,Array],Sr={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:dr,onEnter:dr,onAfterEnter:dr,onEnterCancelled:dr,onBeforeLeave:dr,onLeave:dr,onAfterLeave:dr,onLeaveCancelled:dr,onBeforeAppear:dr,onAppear:dr,onAfterAppear:dr,onAppearCancelled:dr},lo={name:"BaseTransition",props:Sr,setup(o,c){var{slots:h}=c,_=Sn(),I=ji(),A;return()=>{var x=h.default&&Z(h.default(),!0);if(!(!x||!x.length)){var z=x[0];if(x.length>1){var $=!1;for(var te of x)if(te.type!==xt){if($){O("<transition> can only be used on a single element or component. Use <transition-group> for lists.");break}z=te,$=!0}}var Ie=R.toRaw(o),{mode:fe}=Ie;if(fe&&fe!=="in-out"&&fe!=="out-in"&&fe!=="default"&&O("invalid <transition> mode: ".concat(fe)),I.isLeaving)return pi(z);var ue=Do(z);if(!ue)return pi(z);var He=Ai(ue,Ie,I,_);D(ue,He);var Ze=_.subTree,vt=Ze&&Do(Ze),yt=!1,{getTransitionKey:Ne}=ue.type;if(Ne){var _e=Ne();A===void 0?A=_e:_e!==A&&(A=_e,yt=!0)}if(vt&&vt.type!==xt&&(!vr(ue,vt)||yt)){var Me=Ai(vt,Ie,I,_);if(D(vt,Me),fe==="out-in")return I.isLeaving=!0,Me.afterLeave=()=>{I.isLeaving=!1,_.update.active!==!1&&_.update()},pi(z);fe==="in-out"&&ue.type!==xt&&(Me.delayLeave=(nt,qe,at)=>{var It=Co(I,vt);It[String(vt.key)]=vt,nt._leaveCb=()=>{qe(),nt._leaveCb=void 0,delete He.delayedLeave},He.delayedLeave=at})}return z}}}},Mo=lo;function Co(o,c){var{leavingVNodes:h}=o,_=h.get(c.type);return _||(_=Object.create(null),h.set(c.type,_)),_}function Ai(o,c,h,_){var{appear:I,mode:A,persisted:x=!1,onBeforeEnter:z,onEnter:$,onAfterEnter:te,onEnterCancelled:Ie,onBeforeLeave:fe,onLeave:ue,onAfterLeave:He,onLeaveCancelled:Ze,onBeforeAppear:vt,onAppear:yt,onAfterAppear:Ne,onAppearCancelled:_e}=c,Me=String(o.key),nt=Co(h,o),qe=(st,i)=>{st&&cn(st,_,9,i)},at=(st,i)=>{var a=i[1];qe(st,i),m.isArray(st)?st.every(f=>f.length<=1)&&a():st.length<=1&&a()},It={mode:A,persisted:x,beforeEnter(st){var i=z;if(!h.isMounted)if(I)i=vt||z;else return;st._leaveCb&&st._leaveCb(!0);var a=nt[Me];a&&vr(o,a)&&a.el._leaveCb&&a.el._leaveCb(),qe(i,[st])},enter(st){var i=$,a=te,f=Ie;if(!h.isMounted)if(I)i=yt||$,a=Ne||te,f=_e||Ie;else return;var p=!1,S=st._enterCb=w=>{p||(p=!0,w?qe(f,[st]):qe(a,[st]),It.delayedLeave&&It.delayedLeave(),st._enterCb=void 0)};i?at(i,[st,S]):S()},leave(st,i){var a=String(o.key);if(st._enterCb&&st._enterCb(!0),h.isUnmounting)return i();qe(fe,[st]);var f=!1,p=st._leaveCb=S=>{f||(f=!0,i(),S?qe(Ze,[st]):qe(He,[st]),st._leaveCb=void 0,nt[a]===o&&delete nt[a])};nt[a]=o,ue?at(ue,[st,p]):p()},clone(st){return Ai(st,c,h,_)}};return It}function pi(o){if(J(o))return o=qi(o),o.children=null,o}function Do(o){return J(o)?o.children?o.children[0]:void 0:o}function D(o,c){o.shapeFlag&6&&o.component?D(o.component.subTree,c):o.shapeFlag&128?(o.ssContent.transition=c.clone(o.ssContent),o.ssFallback.transition=c.clone(o.ssFallback)):o.transition=c}function Z(o){for(var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,h=arguments.length>2?arguments[2]:void 0,_=[],I=0,A=0;A<o.length;A++){var x=o[A],z=h==null?x.key:String(h)+String(x.key!=null?x.key:A);x.type===gt?(x.patchFlag&128&&I++,_=_.concat(Z(x.children,c,z))):(c||x.type!==xt)&&_.push(z!=null?qi(x,{key:z}):x)}if(I>1)for(var $=0;$<_.length;$++)_[$].patchFlag=-2;return _}function ve(o){return m.isFunction(o)?{setup:o,name:o.name}:o}var le=o=>!!o.type.__asyncLoader;function de(o){m.isFunction(o)&&(o={loader:o});var{loader:c,loadingComponent:h,errorComponent:_,delay:I=200,timeout:A,suspensible:x=!0,onError:z}=o,$=null,te,Ie=0,fe=()=>(Ie++,$=null,ue()),ue=()=>{var He;return $||(He=$=c().catch(Ze=>{if(Ze=Ze instanceof Error?Ze:new Error(String(Ze)),z)return new Promise((vt,yt)=>{var Ne=()=>vt(fe()),_e=()=>yt(Ze);z(Ze,Ne,_e,Ie+1)});throw Ze}).then(Ze=>{if(He!==$&&$)return $;if(Ze||O("Async component loader resolved to undefined. If you are using retry(), make sure to return its return value."),Ze&&(Ze.__esModule||Ze[Symbol.toStringTag]==="Module")&&(Ze=Ze.default),Ze&&!m.isObject(Ze)&&!m.isFunction(Ze))throw new Error("Invalid async component load result: ".concat(Ze));return te=Ze,Ze}))};return ve({name:"AsyncComponentWrapper",__asyncLoader:ue,get __asyncResolved(){return te},setup(){var He=Bn;if(te)return()=>Ot(te,He);var Ze=_e=>{$=null,Ir(_e,He,13,!_)};if(x&&He.suspense||d.isInSSRComponentSetup)return ue().then(_e=>()=>Ot(_e,He)).catch(_e=>(Ze(_e),()=>_?Gn(_,{error:_e}):null));var vt=R.ref(!1),yt=R.ref(),Ne=R.ref(!!I);return I&&setTimeout(()=>{Ne.value=!1},I),A!=null&&setTimeout(()=>{if(!vt.value&&!yt.value){var _e=new Error("Async component timed out after ".concat(A,"ms."));Ze(_e),yt.value=_e}},A),ue().then(()=>{vt.value=!0,He.parent&&J(He.parent.vnode)&&Zt(He.parent.update)}).catch(_e=>{Ze(_e),yt.value=_e}),()=>{if(vt.value&&te)return Ot(te,He);if(yt.value&&_)return Gn(_,{error:yt.value});if(h&&!Ne.value)return Gn(h)}}})}function Ot(o,c){var{ref:h,props:_,children:I,ce:A}=c.vnode,x=Gn(o,_,I);return x.ref=h,x.ce=A,delete c.vnode.ce,x}var J=o=>o.type.__isKeepAlive,Y={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(o,c){var{slots:h}=c,_=Sn(),I=_.ctx;if(!I.renderer)return()=>{var Me=h.default&&h.default();return Me&&Me.length===1?Me[0]:Me};var A=new Map,x=new Set,z=null;_.__v_cache=A;var $=_.suspense,{renderer:{p:te,m:Ie,um:fe,o:{createElement:ue}}}=I,He=ue("div");I.activate=(Me,nt,qe,at,It)=>{var st=Me.component;Ie(Me,nt,qe,0,$),te(st.vnode,Me,nt,qe,st,$,at,Me.slotScopeIds,It),hr(()=>{st.isDeactivated=!1,st.a&&m.invokeArrayFns(st.a);var i=Me.props&&Me.props.onVnodeMounted;i&&Fr(i,st.parent,Me)},$),xo(st)},I.deactivate=Me=>{var nt=Me.component;Ie(Me,He,null,1,$),hr(()=>{nt.da&&m.invokeArrayFns(nt.da);var qe=Me.props&&Me.props.onVnodeUnmounted;qe&&Fr(qe,nt.parent,Me),nt.isDeactivated=!0},$),xo(nt)};function Ze(Me){Qr(Me),fe(Me,_,$,!0)}function vt(Me){A.forEach((nt,qe)=>{var at=ts(nt.type);at&&(!Me||!Me(at))&&yt(qe)})}function yt(Me){var nt=A.get(Me);!z||!vr(nt,z)?Ze(nt):z&&Qr(z),A.delete(Me),x.delete(Me)}Si(()=>[o.include,o.exclude],Me=>{var[nt,qe]=Me;nt&&vt(at=>xe(nt,at)),qe&&vt(at=>!xe(qe,at))},{flush:"post",deep:!0});var Ne=null,_e=()=>{Ne!=null&&A.set(Ne,Mr(_.subTree))};return uo(_e),ra(_e),Qn(()=>{A.forEach(Me=>{var{subTree:nt,suspense:qe}=_,at=Mr(nt);if(Me.type===at.type&&Me.key===at.key){Qr(at);var It=at.component.da;It&&hr(It,qe);return}Ze(Me)})}),()=>{if(Ne=null,!h.default)return null;var Me=h.default(),nt=Me[0];if(Me.length>1)return O("KeepAlive should contain exactly one component child."),z=null,Me;if(!oa(nt)||!(nt.shapeFlag&4)&&!(nt.shapeFlag&128))return z=null,nt;var qe=Mr(nt),at=qe.type,It=ts(le(qe)?qe.type.__asyncResolved||{}:at),{include:st,exclude:i,max:a}=o;if(st&&(!It||!xe(st,It))||i&&It&&xe(i,It))return z=qe,nt;var f=qe.key==null?at:qe.key,p=A.get(f);return qe.el&&(qe=qi(qe),nt.shapeFlag&128&&(nt.ssContent=qe)),Ne=f,p?(qe.el=p.el,qe.component=p.component,qe.transition&&D(qe,qe.transition),qe.shapeFlag|=512,x.delete(f),x.add(f)):(x.add(f),a&&x.size>parseInt(a,10)&&yt(x.values().next().value)),qe.shapeFlag|=256,z=qe,fi(nt.type)?nt:qe}}},ce=Y;function xe(o,c){return m.isArray(o)?o.some(h=>xe(h,c)):m.isString(o)?o.split(",").includes(c):m.isRegExp(o)?o.test(c):!1}function lt(o,c){An(o,"a",c)}function zt(o,c){An(o,"da",c)}function An(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Bn,_=o.__wdc||(o.__wdc=()=>{for(var A=h;A;){if(A.isDeactivated)return;A=A.parent}return o()});if(co(c,_,h),h)for(var I=h.parent;I&&I.parent;)J(I.parent.vnode)&&Xn(_,c,h,I),I=I.parent}function Xn(o,c,h,_){var I=co(c,o,_,!0);Dr(()=>{m.remove(_[c],I)},h)}function Qr(o){o.shapeFlag&=~256,o.shapeFlag&=~512}function Mr(o){return o.shapeFlag&128?o.ssContent:o}function co(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Bn,_=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(h){if(We.isRootHook(o)&&h!==h.root&&(h=h.root,We.isRootImmediateHook(o))){var I=h.proxy;cn(c.bind(I),h,o,We.ON_LOAD===o?[I.$page.options]:[])}var A=h[o]||(h[o]=[]),x=c.__weh||(c.__weh=function(){if(!h.isUnmounted){R.pauseTracking(),mi(h);for(var $=arguments.length,te=new Array($),Ie=0;Ie<$;Ie++)te[Ie]=arguments[Ie];var fe=cn(c,h,o,te);return _i(),R.resetTracking(),fe}});return _?A.unshift(x):A.push(x),x}else{var z=m.toHandlerKey((fn[o]||o.replace(/^on/,"")).replace(/ hook$/,""));O("".concat(z," is called when there is no active component instance to be ")+"associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.")}}var gr=o=>function(c){var h=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Bn;return(!d.isInSSRComponentSetup||o==="sp")&&co(o,function(){return c(...arguments)},h)},gi=gr("bm"),uo=gr("m"),fo=gr("bu"),ra=gr("u"),Qn=gr("bum"),Dr=gr("um"),qa=gr("sp"),Na=gr("rtg"),Lr=gr("rtc");function Vs(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Bn;co("ec",o,c)}function Us(o){m.isBuiltInDirective(o)&&O("Do not use built-in directive ids as custom directive id: "+o)}function il(o,c){var h=On;if(h===null)return O("withDirectives can only be used inside render functions."),o;for(var _=Ps(h)||h.proxy,I=o.dirs||(o.dirs=[]),A=0;A<c.length;A++){var[x,z,$,te=m.EMPTY_OBJ]=c[A];x&&(m.isFunction(x)&&(x={mounted:x,updated:x}),x.deep&&Oi(z),I.push({dir:x,instance:_,value:z,oldValue:void 0,arg:$,modifiers:te}))}return o}function Oo(o,c,h,_){for(var I=o.dirs,A=c&&c.dirs,x=0;x<I.length;x++){var z=I[x];A&&(z.oldValue=A[x].value);var $=z.dir[_];$&&(R.pauseTracking(),cn($,h,8,[o.el,z,o,c]),R.resetTracking())}}var Ti="components",ka="directives";function Nl(o,c){return ho(Ti,o,!0,c)||o}var zn=Symbol();function ma(o){return m.isString(o)?ho(Ti,o,!1)||o:o||zn}function gs(o){return ho(ka,o)}function ho(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,_=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,I=On||Bn;if(I){var A=I.type;if(o===Ti){var x=ts(A,!1);if(x&&(x===c||x===m.camelize(c)||x===m.capitalize(m.camelize(c))))return A}var z=Ka(I[o]||A[o],c)||Ka(I.appContext[o],c);if(!z&&_)return A;if(h&&!z){var $=o===Ti?`
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.`:"";O("Failed to resolve ".concat(o.slice(0,-1),": ").concat(c).concat($))}return z}else O("resolve".concat(m.capitalize(o.slice(0,-1))," ")+"can only be used in render() or setup().")}function Ka(o,c){return o&&(o[c]||o[m.camelize(c)]||o[m.capitalize(m.camelize(c))])}function ol(o,c,h,_){var I,A=h&&h[_];if(m.isArray(o)||m.isString(o)){I=new Array(o.length);for(var x=0,z=o.length;x<z;x++)I[x]=c(o[x],x,void 0,A&&A[x])}else if(typeof o=="number"){Number.isInteger(o)||O("The v-for range expect an integer value but got ".concat(o,".")),I=new Array(o);for(var $=0;$<o;$++)I[$]=c($+1,$,void 0,A&&A[$])}else if(m.isObject(o))if(o[Symbol.iterator])I=Array.from(o,(He,Ze)=>c(He,Ze,void 0,A&&A[Ze]));else{var te=Object.keys(o);I=new Array(te.length);for(var Ie=0,fe=te.length;Ie<fe;Ie++){var ue=te[Ie];I[Ie]=c(o[ue],ue,Ie,A&&A[Ie])}}else I=[];return h&&(h[_]=I),I}function Ra(o,c){for(var h=function(I){var A=c[I];if(m.isArray(A))for(var x=0;x<A.length;x++)o[A[x].name]=A[x].fn;else A&&(o[A.name]=A.key?function(){var z=A.fn(...arguments);return z&&(z.key=A.key),z}:A.fn)},_=0;_<c.length;_++)h(_);return o}function al(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},_=arguments.length>3?arguments[3]:void 0,I=arguments.length>4?arguments[4]:void 0;if(On.isCE||On.parent&&le(On.parent)&&On.parent.isCE)return c!=="default"&&(h.name=c),Gn("slot",h,_&&_());var A=o[c];A&&A.length>1&&(O("SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template."),A=()=>[]),A&&A._c&&(A._d=!1),nr();var x=A&&_a(A(h)),z=xl(gt,{key:h.key||x&&x.key||"_".concat(c)},x||(_?_():[]),x&&o._===1?64:-2);return!I&&z.scopeId&&(z.slotScopeIds=[z.scopeId+"-s"]),A&&A._c&&(A._d=!0),z}function _a(o){return o.some(c=>oa(c)?!(c.type===xt||c.type===gt&&!_a(c.children)):!0)?o:null}function vs(o,c){var h={};if(!m.isObject(o))return O("v-on with no argument expects an object value."),h;for(var _ in o)h[c&&/[A-Z]/.test(_)?"on:".concat(_):m.toHandlerKey(_)]=o[_];return h}var ms=o=>o?Ua(o)?Ps(o)||o.proxy:ms(o.parent):null,zi=m.extend(Object.create(null),{$:o=>o,$el:o=>o.vnode.el,$data:o=>o.data,$props:o=>R.shallowReadonly(o.props),$attrs:o=>R.shallowReadonly(o.attrs),$slots:o=>R.shallowReadonly(o.slots),$refs:o=>R.shallowReadonly(o.refs),$parent:o=>ms(o.parent),$root:o=>ms(o.root),$emit:o=>o.emit,$options:o=>M(o),$forceUpdate:o=>o.f||(o.f=()=>Zt(o.update)),$nextTick:o=>o.n||(o.n=tn.bind(o.proxy)),$watch:o=>so.bind(o)}),Cr=o=>o==="_"||o==="$",ba=(o,c)=>o!==m.EMPTY_OBJ&&!o.__isScriptSetup&&m.hasOwn(o,c),Lo={get(o,c){var{_:h}=o,{ctx:_,setupState:I,data:A,props:x,accessCache:z,type:$,appContext:te}=h;if(c==="__isVue")return!0;var Ie;if(c[0]!=="$"){var fe=z[c];if(fe!==void 0)switch(fe){case 1:return I[c];case 2:return A[c];case 4:return _[c];case 3:return x[c]}else{if(ba(I,c))return z[c]=1,I[c];if(A!==m.EMPTY_OBJ&&m.hasOwn(A,c))return z[c]=2,A[c];if((Ie=h.propsOptions[0])&&m.hasOwn(Ie,c))return z[c]=3,x[c];if(_!==m.EMPTY_OBJ&&m.hasOwn(_,c))return z[c]=4,_[c];_s&&(z[c]=0)}}var ue=zi[c],He,Ze;if(ue)return c==="$attrs"&&(R.track(h,"get",c),Dt()),ue(h);if((He=$.__cssModules)&&(He=He[c]))return He;if(_!==m.EMPTY_OBJ&&m.hasOwn(_,c))return z[c]=4,_[c];if(Ze=te.config.globalProperties,m.hasOwn(Ze,c))return Ze[c];On&&(!m.isString(c)||c.indexOf("__v")!==0)&&(A!==m.EMPTY_OBJ&&Cr(c[0])&&m.hasOwn(A,c)?O("Property ".concat(JSON.stringify(c)," must be accessed via $data because it starts with a reserved ")+'character ("$" or "_") and is not proxied on the render context.'):h===On&&O("Property ".concat(JSON.stringify(c)," was accessed during render ")+"but is not defined on instance."))},set(o,c,h){var{_}=o,{data:I,setupState:A,ctx:x}=_;return ba(A,c)?(A[c]=h,!0):A.__isScriptSetup&&m.hasOwn(A,c)?(O('Cannot mutate <script setup> binding "'.concat(c,'" from Options API.')),!1):I!==m.EMPTY_OBJ&&m.hasOwn(I,c)?(I[c]=h,!0):m.hasOwn(_.props,c)?(O('Attempting to mutate prop "'.concat(c,'". Props are readonly.')),!1):c[0]==="$"&&c.slice(1)in _?(O('Attempting to mutate public property "'.concat(c,'". ')+"Properties starting with $ are reserved and readonly."),!1):(c in _.appContext.config.globalProperties?Object.defineProperty(x,c,{enumerable:!0,configurable:!0,value:h}):x[c]=h,!0)},has(o,c){var{_:{data:h,setupState:_,accessCache:I,ctx:A,appContext:x,propsOptions:z}}=o,$;return!!I[c]||h!==m.EMPTY_OBJ&&m.hasOwn(h,c)||ba(_,c)||($=z[0])&&m.hasOwn($,c)||m.hasOwn(A,c)||m.hasOwn(zi,c)||m.hasOwn(x.config.globalProperties,c)},defineProperty(o,c,h){return h.get!=null?o._.accessCache[c]=0:m.hasOwn(h,"value")&&this.set(o,c,h.value,null),Reflect.defineProperty(o,c,h)}};Lo.ownKeys=o=>(O("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."),Reflect.ownKeys(o));var xa=m.extend({},Lo,{get(o,c){if(c!==Symbol.unscopables)return Lo.get(o,c,o)},has(o,c){var h=c[0]!=="_"&&!m.isGloballyWhitelisted(c);return!h&&Lo.has(o,c)&&O("Property ".concat(JSON.stringify(c)," should not start with _ which is a reserved prefix for Vue internals.")),h}});function sl(o){var c={};return Object.defineProperty(c,"_",{configurable:!0,enumerable:!1,get:()=>o}),Object.keys(zi).forEach(h=>{Object.defineProperty(c,h,{configurable:!0,enumerable:!1,get:()=>zi[h](o),set:m.NOOP})}),c}function $s(o){var{ctx:c,propsOptions:[h]}=o;h&&Object.keys(h).forEach(_=>{Object.defineProperty(c,_,{enumerable:!0,configurable:!0,get:()=>o.props[_],set:m.NOOP})})}function kl(o){var{ctx:c,setupState:h}=o;Object.keys(R.toRaw(h)).forEach(_=>{if(!h.__isScriptSetup){if(Cr(_[0])){O("setup() return property ".concat(JSON.stringify(_),' should not start with "$" or "_" ')+"which are reserved prefixes for Vue internals.");return}Object.defineProperty(c,_,{enumerable:!0,configurable:!0,get:()=>h[_],set:m.NOOP})}})}function ya(){var o=Object.create(null);return(c,h)=>{o[h]?O("".concat(c,' property "').concat(h,'" is already defined in ').concat(o[h],".")):o[h]=c}}var _s=!0;function Hs(o){var c=M(o),h=o.proxy,_=o.ctx;_s=!1,c.beforeCreate&&js(c.beforeCreate,o,"bc");var{data:I,computed:A,methods:x,watch:z,provide:$,inject:te,created:Ie,beforeMount:fe,mounted:ue,beforeUpdate:He,updated:Ze,activated:vt,deactivated:yt,beforeDestroy:Ne,beforeUnmount:_e,destroyed:Me,unmounted:nt,render:qe,renderTracked:at,renderTriggered:It,errorCaptured:st,serverPrefetch:i,expose:a,inheritAttrs:f,components:p,directives:S,filters:w}=c,N=ya();{var[V]=o.propsOptions;if(V)for(var F in V)N("Props",F)}if(te&&ll(te,_,N,o.appContext.config.unwrapInjectedRef),x)for(var q in x){var be=x[q];m.isFunction(be)?(Object.defineProperty(_,q,{value:be.bind(h),configurable:!0,enumerable:!0,writable:!0}),N("Methods",q)):O('Method "'.concat(q,'" has type "').concat(typeof be,'" in the component definition. ')+"Did you reference the function correctly?")}if(I&&function(){m.isFunction(I)||O("The data option must be a function. Plain object usage is no longer supported.");var se=I.call(h,h);if(m.isPromise(se)&&O("data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>."),!m.isObject(se))O("data() should return an object.");else{o.data=R.reactive(se);{var Ee=function(Fe){N("Data",Fe),Cr(Fe[0])||Object.defineProperty(_,Fe,{configurable:!0,enumerable:!0,get:()=>se[Fe],set:m.NOOP})};for(var Le in se)Ee(Le)}}}(),_s=!0,A){var ae=function(se){var Ee=A[se],Le=m.isFunction(Ee)?Ee.bind(h,h):m.isFunction(Ee.get)?Ee.get.bind(h,h):m.NOOP;Le===m.NOOP&&O('Computed property "'.concat(se,'" has no getter.'));var Fe=!m.isFunction(Ee)&&m.isFunction(Ee.set)?Ee.set.bind(h):()=>{O('Write operation failed: computed property "'.concat(se,'" is readonly.'))},it=Ll({get:Le,set:Fe});Object.defineProperty(_,se,{enumerable:!0,configurable:!0,get:()=>it.value,set:Tt=>it.value=Tt}),N("Computed",se)};for(var ne in A)ae(ne)}if(z)for(var Ae in z)y(z[Ae],_,h,Ae);if($){var De=m.isFunction($)?$.call(h):$;Reflect.ownKeys(De).forEach(se=>{Zn(se,De[se])})}Ie&&js(Ie,o,"c");function Xe(se,Ee){m.isArray(Ee)?Ee.forEach(Le=>se(Le.bind(h))):Ee&&se(Ee.bind(h))}if(Xe(gi,fe),Xe(uo,ue),Xe(fo,He),Xe(ra,Ze),Xe(lt,vt),Xe(zt,yt),Xe(Vs,st),Xe(Lr,at),Xe(Na,It),Xe(Qn,_e),Xe(Dr,nt),Xe(qa,i),m.isArray(a))if(a.length){var ft=o.exposed||(o.exposed={});a.forEach(se=>{Object.defineProperty(ft,se,{get:()=>h[se],set:Ee=>h[se]=Ee})})}else o.exposed||(o.exposed={});qe&&o.render===m.NOOP&&(o.render=qe),f!=null&&(o.inheritAttrs=f),p&&(o.components=p),S&&(o.directives=S);var Te=o.appContext.config.globalProperties.$applyOptions;Te&&Te(c,o,h)}function ll(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:m.NOOP,_=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;m.isArray(o)&&(o=he(o));var I=function(x){var z=o[x],$=void 0;m.isObject(z)?"default"in z?$=or(z.from||x,z.default,!0):$=or(z.from||x):$=or(z),R.isRef($)?_?Object.defineProperty(c,x,{enumerable:!0,configurable:!0,get:()=>$.value,set:te=>$.value=te}):(O('injected property "'.concat(x,'" is a ref and will be auto-unwrapped ')+"and no longer needs `.value` in the next minor release. To opt-in to the new behavior now, set `app.config.unwrapInjectedRef = true` (this config is temporary and will not be needed in the future.)"),c[x]=$):c[x]=$,h("Inject",x)};for(var A in o)I(A)}function js(o,c,h){cn(m.isArray(o)?o.map(_=>_.bind(c.proxy)):o.bind(c.proxy),c,h)}function y(o,c,h,_){var I=_.includes(".")?va(h,_):()=>h[_];if(m.isString(o)){var A=c[o];m.isFunction(A)?Si(I,A):O('Invalid watch handler specified by key "'.concat(o,'"'),A)}else if(m.isFunction(o))Si(I,o.bind(h));else if(m.isObject(o))if(m.isArray(o))o.forEach(z=>y(z,c,h,_));else{var x=m.isFunction(o.handler)?o.handler.bind(h):c[o.handler];m.isFunction(x)?Si(I,x,o):O('Invalid watch handler specified by key "'.concat(o.handler,'"'),x)}else O('Invalid watch option: "'.concat(_,'"'),o)}function M(o){var c=o.type,{mixins:h,extends:_}=c,{mixins:I,optionsCache:A,config:{optionMergeStrategies:x}}=o.appContext,z=A.get(c),$;return z?$=z:!I.length&&!h&&!_?$=c:($={},I.length&&I.forEach(te=>W($,te,x,!0)),W($,c,x)),m.isObject(c)&&A.set(c,$),$}function W(o,c,h){var _=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:I,extends:A}=c;A&&W(o,A,h,!0),I&&I.forEach($=>W(o,$,h,!0));for(var x in c)if(_&&x==="expose")O('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');else{var z=H[x]||h&&h[x];o[x]=z?z(o[x],c[x]):c[x]}return o}var H={data:Q,props:we,emits:we,methods:we,computed:we,beforeCreate:me,created:me,beforeMount:me,mounted:me,beforeUpdate:me,updated:me,beforeDestroy:me,beforeUnmount:me,destroyed:me,unmounted:me,activated:me,deactivated:me,errorCaptured:me,serverPrefetch:me,components:we,directives:we,watch:Be,provide:Q,inject:ee};function Q(o,c){return c?o?function(){return m.extend(m.isFunction(o)?o.call(this,this):o,m.isFunction(c)?c.call(this,this):c)}:c:o}function ee(o,c){return we(he(o),he(c))}function he(o){if(m.isArray(o)){for(var c={},h=0;h<o.length;h++)c[o[h]]=o[h];return c}return o}function me(o,c){return o?[...new Set([].concat(o,c))]:c}function we(o,c){return o?m.extend(m.extend(Object.create(null),o),c):c}function Be(o,c){if(!o)return c;if(!c)return o;var h=m.extend(Object.create(null),o);for(var _ in c)h[_]=me(o[_],c[_]);return h}function Se(o,c,h){var _=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,I={},A={};m.def(A,Os,1),o.propsDefaults=Object.create(null),Ct(o,c,I,A);for(var x in o.propsOptions[0])x in I||(I[x]=void 0);At(c||{},I,o),h?o.props=_?I:R.shallowReactive(I):o.type.props?o.props=I:o.props=A,o.attrs=A}function je(o){for(;o;){if(o.type.__hmrId)return!0;o=o.parent}}function bt(o,c,h,_){var{props:I,attrs:A,vnode:{patchFlag:x}}=o,z=R.toRaw(I),[$]=o.propsOptions,te=!1;if(!je(o)&&(_||x>0)&&!(x&16)){if(x&8)for(var Ie=o.vnode.dynamicProps,fe=0;fe<Ie.length;fe++){var ue=Ie[fe];if(!Kr(o.emitsOptions,ue)){var He=c[ue];if($)if(m.hasOwn(A,ue))He!==A[ue]&&(A[ue]=He,te=!0);else{var Ze=m.camelize(ue);I[Ze]=Wt($,z,Ze,He,o,!1)}else He!==A[ue]&&(A[ue]=He,te=!0)}}}else{Ct(o,c,I,A)&&(te=!0);var vt;for(var yt in z)(!c||!m.hasOwn(c,yt)&&((vt=m.hyphenate(yt))===yt||!m.hasOwn(c,vt)))&&($?h&&(h[yt]!==void 0||h[vt]!==void 0)&&(I[yt]=Wt($,z,yt,void 0,o,!0)):delete I[yt]);if(A!==z)for(var Ne in A)(!c||!m.hasOwn(c,Ne)&&!0)&&(delete A[Ne],te=!0)}te&&R.trigger(o,"set","$attrs"),At(c||{},I,o)}function Ct(o,c,h,_){var[I,A]=o.propsOptions,x=!1,z;if(c){for(var $ in c)if(!m.isReservedProp($)){var te=c[$],Ie=void 0;I&&m.hasOwn(I,Ie=m.camelize($))?!A||!A.includes(Ie)?h[Ie]=te:(z||(z={}))[Ie]=te:Kr(o.emitsOptions,$)||(!($ in _)||te!==_[$])&&(_[$]=te,x=!0)}}if(A)for(var fe=R.toRaw(h),ue=z||m.EMPTY_OBJ,He=0;He<A.length;He++){var Ze=A[He];h[Ze]=Wt(I,fe,Ze,ue[Ze],o,!m.hasOwn(ue,Ze))}return x}function Wt(o,c,h,_,I,A){var x=o[h];if(x!=null){var z=m.hasOwn(x,"default");if(z&&_===void 0){var $=x.default;if(x.type!==Function&&m.isFunction($)){var{propsDefaults:te}=I;h in te?_=te[h]:(mi(I),_=te[h]=$.call(null,c),_i())}else _=$}x[0]&&(A&&!z?_=!1:x[1]&&(_===""||_===m.hyphenate(h))&&(_=!0))}return _}function Et(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,_=c.propsCache,I=_.get(o);if(I)return I;var A=o.props,x={},z=[],$=!1;if(!m.isFunction(o)){var te=Me=>{$=!0;var[nt,qe]=Et(Me,c,!0);m.extend(x,nt),qe&&z.push(...qe)};!h&&c.mixins.length&&c.mixins.forEach(te),o.extends&&te(o.extends),o.mixins&&o.mixins.forEach(te)}if(!A&&!$)return m.isObject(o)&&_.set(o,m.EMPTY_ARR),m.EMPTY_ARR;if(m.isArray(A))for(var Ie=0;Ie<A.length;Ie++){m.isString(A[Ie])||O("props must be strings when using array syntax.",A[Ie]);var fe=m.camelize(A[Ie]);Je(fe)&&(x[fe]=m.EMPTY_OBJ)}else if(A){m.isObject(A)||O("invalid props options",A);for(var ue in A){var He=m.camelize(ue);if(Je(He)){var Ze=A[ue],vt=x[He]=m.isArray(Ze)||m.isFunction(Ze)?{type:Ze}:Object.assign({},Ze);if(vt){var yt=wn(Boolean,vt.type),Ne=wn(String,vt.type);vt[0]=yt>-1,vt[1]=Ne<0||yt<Ne,(yt>-1||m.hasOwn(vt,"default"))&&z.push(He)}}}}var _e=[x,z];return m.isObject(o)&&_.set(o,_e),_e}function Je(o){return o[0]!=="$"?!0:(O('Invalid prop name: "'.concat(o,'" is a reserved property.')),!1)}function Mt(o){var c=o&&o.toString().match(/^\s*(function|class) (\w+)/);return c?c[2]:o===null?"null":""}function _n(o,c){return Mt(o)===Mt(c)}function wn(o,c){return m.isArray(c)?c.findIndex(h=>_n(h,o)):m.isFunction(c)&&_n(c,o)?0:-1}function At(o,c,h){var _=R.toRaw(c),I=h.propsOptions[0];for(var A in I){var x=I[A];x!=null&&nn(A,_[A],x,!m.hasOwn(o,A)&&!m.hasOwn(o,m.hyphenate(A)))}}function nn(o,c,h,_){var{type:I,required:A,validator:x}=h;if(A&&_){O('Missing required prop: "'+o+'"');return}if(!(c==null&&!h.required)){if(I!=null&&I!==!0){for(var z=!1,$=m.isArray(I)?I:[I],te=[],Ie=0;Ie<$.length&&!z;Ie++){var{valid:fe,expectedType:ue}=Kt(c,$[Ie]);te.push(ue||""),z=fe}if(!z){O(Gt(o,c,te));return}}x&&!x(c)&&O('Invalid prop: custom validator check failed for prop "'+o+'".')}}var ar=m.makeMap("String,Number,Boolean,Function,Symbol,BigInt");function Kt(o,c){var h,_=Mt(c);if(ar(_)){var I=typeof o;h=I===_.toLowerCase(),!h&&I==="object"&&(h=o instanceof c)}else _==="Object"?h=m.isObject(o):_==="Array"?h=m.isArray(o):_==="null"?h=o===null:h=o instanceof c;return{valid:h,expectedType:_}}function Gt(o,c,h){var _='Invalid prop: type check failed for prop "'.concat(o,'".')+" Expected ".concat(h.map(m.capitalize).join(" | ")),I=h[0],A=m.toRawType(c),x=Rn(c,I),z=Rn(c,A);return h.length===1&&er(I)&&!Ba(I,A)&&(_+=" with value ".concat(x)),_+=", got ".concat(A," "),er(A)&&(_+="with value ".concat(z,".")),_}function Rn(o,c){return c==="String"?'"'.concat(o,'"'):c==="Number"?"".concat(Number(o)):"".concat(o)}function er(o){var c=["string","number","boolean"];return c.some(h=>o.toLowerCase()===h)}function Ba(){for(var o=arguments.length,c=new Array(o),h=0;h<o;h++)c[h]=arguments[h];return c.some(_=>_.toLowerCase()==="boolean")}var bs=o=>o[0]==="_"||o==="$stable",Ma=o=>m.isArray(o)?o.map(Ji):[Ji(o)],Ao=(o,c,h)=>{if(c._n)return c;var _=Jr(function(){return Bn&&O('Slot "'.concat(o,'" invoked outside of the render function: ')+"this will not track dependencies used in the slot. Invoke the slot function inside the render function instead."),Ma(c(...arguments))},h);return _._c=!1,_},ys=(o,c,h)=>{var _=o._ctx;for(var I in o)if(!bs(I)){var A=o[I];m.isFunction(A)?c[I]=Ao(I,A,_):A!=null&&function(){O('Non-function value encountered for slot "'.concat(I,'". ')+"Prefer function slots for better performance.");var x=Ma(A);c[I]=()=>x}()}},ei=(o,c)=>{J(o.vnode)||O("Non-function value encountered for default slot. Prefer function slots for better performance.");var h=Ma(c);o.slots.default=()=>h},Da=(o,c)=>{if(o.vnode.shapeFlag&32){var h=c._;h?(o.slots=R.toRaw(c),m.def(c,"_",h)):ys(c,o.slots={})}else o.slots={},c&&ei(o,c);m.def(o.slots,Os,1)},ia=(o,c,h)=>{var{vnode:_,slots:I}=o,A=!0,x=m.EMPTY_OBJ;if(_.shapeFlag&32){var z=c._;z?kr?m.extend(I,c):h&&z===1?A=!1:(m.extend(I,c),!h&&z===1&&delete I._):(A=!c.$stable,ys(c,I)),x=c}else c&&(ei(o,c),x={default:1});if(A)for(var $ in I)!bs($)&&!($ in x)&&delete I[$]};function tr(){return{app:null,config:{isNativeTag:m.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var Ja=0;function cl(o,c){return function(_){var I=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;m.isFunction(_)||(_=Object.assign({},_)),I!=null&&!m.isObject(I)&&(O("root props passed to app.mount() must be an object."),I=null);var A=tr(),x=new Set,z=!1,$=A.app={_uid:Ja++,_component:_,_props:I,_container:null,_context:A,_instance:null,version:zo,get config(){return A.config},set config(te){O("app.config cannot be replaced. Modify individual options instead.")},use(te){for(var Ie=arguments.length,fe=new Array(Ie>1?Ie-1:0),ue=1;ue<Ie;ue++)fe[ue-1]=arguments[ue];return x.has(te)?O("Plugin has already been applied to target app."):te&&m.isFunction(te.install)?(x.add(te),te.install($,...fe)):m.isFunction(te)?(x.add(te),te($,...fe)):O('A plugin must either be a function or an object with an "install" function.'),$},mixin(te){return A.mixins.includes(te)?O("Mixin has already been applied to target app"+(te.name?": ".concat(te.name):"")):A.mixins.push(te),$},component(te,Ie){return fl(te,A.config),Ie?(A.components[te]&&O('Component "'.concat(te,'" has already been registered in target app.')),A.components[te]=Ie,$):A.components[te]},directive(te,Ie){return Us(te),Ie?(A.directives[te]&&O('Directive "'.concat(te,'" has already been registered in target app.')),A.directives[te]=Ie,$):A.directives[te]},mount(te,Ie,fe){if(z)O("App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. `const createMyApp = () => createApp(App)`");else{te.__vue_app__&&O("There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling `app.unmount()` first.");var ue=Gn(_,I);return ue.appContext=A,A.reload=()=>{o(qi(ue),te,fe)},Ie&&c?c(ue,te):o(ue,te,fe),z=!0,$._container=te,te.__vue_app__=$,$._instance=ue.component,Kn($,zo),Ps(ue.component)||ue.component.proxy}},unmount(){z?(o(null,$._container),$._instance=null,Ko($),delete $._container.__vue_app__):O("Cannot unmount an app that is not mounted.")},provide(te,Ie){return te in A.provides&&O('App already provides property with key "'.concat(String(te),'". ')+"It will be overwritten with the new value."),A.provides[te]=Ie,$}};return $}}function Fo(o,c,h,_){var I=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(m.isArray(o)){o.forEach((vt,yt)=>Fo(vt,c&&(m.isArray(c)?c[yt]:c),h,_,I));return}if(!(le(_)&&!I)){var A=_.shapeFlag&4?Ps(_.component)||_.component.proxy:_.el,x=I?null:A,{i:z,r:$}=o;if(!z){O("Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.");return}var te=c&&c.r,Ie=z.refs===m.EMPTY_OBJ?z.refs={}:z.refs,fe=z.setupState;if(te!=null&&te!==$&&(m.isString(te)?(Ie[te]=null,m.hasOwn(fe,te)&&(fe[te]=null)):R.isRef(te)&&(te.value=null)),m.isFunction($))Jt($,z,12,[x,Ie]);else{var ue=m.isString($),He=R.isRef($);if(ue||He){var Ze=()=>{if(o.f){var vt=ue?m.hasOwn(fe,$)?fe[$]:Ie[$]:$.value;I?m.isArray(vt)&&m.remove(vt,A):m.isArray(vt)?vt.includes(A)||vt.push(A):ue?(Ie[$]=[A],m.hasOwn(fe,$)&&(fe[$]=Ie[$])):($.value=[A],o.k&&(Ie[o.k]=$.value))}else ue?(Ie[$]=x,m.hasOwn(fe,$)&&(fe[$]=x)):He?($.value=x,o.k&&(Ie[o.k]=x)):O("Invalid template ref type:",$,"(".concat(typeof $,")"))};x?(Ze.id=-1,hr(Ze,h)):Ze()}else O("Invalid template ref type:",$,"(".concat(typeof $,")"))}}}var Wi=!1,Un=o=>/svg/.test(o.namespaceURI)&&o.tagName!=="foreignObject",Gi=o=>o.nodeType===8;function vi(o){var{mt:c,p:h,o:{patchProp:_,createText:I,nextSibling:A,parentNode:x,remove:z,insert:$,createComment:te}}=o,Ie=(Ne,_e)=>{if(!_e.hasChildNodes()){O("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),h(null,Ne,_e),lr(),_e._vnode=Ne;return}Wi=!1,fe(_e.firstChild,Ne,null,null,null),lr(),_e._vnode=Ne,Wi&&console.error("Hydration completed but contains mismatches.")},fe=function(Ne,_e,Me,nt,qe){var at=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,It=Gi(Ne)&&Ne.data==="[",st=()=>vt(Ne,_e,Me,nt,qe,It),{type:i,ref:a,shapeFlag:f,patchFlag:p}=_e,S=Ne.nodeType;_e.el=Ne,p===-2&&(at=!1,_e.dynamicChildren=null);var w=null;switch(i){case ut:S!==3?_e.children===""?($(_e.el=I(""),x(Ne),Ne),w=Ne):w=st():(Ne.data!==_e.children&&(Wi=!0,O("Hydration text mismatch:"+`
- Client: `.concat(JSON.stringify(Ne.data))+`
- Server: `.concat(JSON.stringify(_e.children))),Ne.data=_e.children),w=A(Ne));break;case xt:S!==8||It?w=st():w=A(Ne);break;case Yt:if(It&&(Ne=A(Ne),S=Ne.nodeType),S===1||S===3){w=Ne;for(var N=!_e.children.length,V=0;V<_e.staticCount;V++)N&&(_e.children+=w.nodeType===1?w.outerHTML:w.data),V===_e.staticCount-1&&(_e.anchor=w),w=A(w);return It?A(w):w}else st();break;case gt:It?w=Ze(Ne,_e,Me,nt,qe,at):w=st();break;default:if(f&1)S!==1||_e.type.toLowerCase()!==Ne.tagName.toLowerCase()?w=st():w=ue(Ne,_e,Me,nt,qe,at);else if(f&6){_e.slotScopeIds=qe;var F=x(Ne);if(c(_e,F,null,Me,nt,Un(F),at),w=It?yt(Ne):A(Ne),w&&Gi(w)&&w.data==="teleport end"&&(w=A(w)),le(_e)){var q;It?(q=Gn(gt),q.anchor=w?w.previousSibling:F.lastChild):q=Ne.nodeType===3?Ts(""):Gn("div"),q.el=Ne,_e.component.subTree=q}}else f&64?S!==8?w=st():w=_e.type.hydrate(Ne,_e,Me,nt,qe,at,o,He):f&128?w=_e.type.hydrate(Ne,_e,Me,nt,Un(x(Ne)),qe,at,o,fe):O("Invalid HostVNode type:",i,"(".concat(typeof i,")"))}return a!=null&&Fo(a,null,nt,_e),w},ue=(Ne,_e,Me,nt,qe,at)=>{at=at||!!_e.dynamicChildren;var{type:It,props:st,patchFlag:i,shapeFlag:a,dirs:f}=_e,p=It==="input"&&f||It==="option";{if(f&&Oo(_e,null,Me,"created"),st)if(p||!at||i&(16|32))for(var S in st)(p&&S.endsWith("value")||m.isOn(S)&&!m.isReservedProp(S))&&_(Ne,S,null,st[S],!1,void 0,Me);else st.onClick&&_(Ne,"onClick",null,st.onClick,!1,void 0,Me);var w;if((w=st&&st.onVnodeBeforeMount)&&Fr(w,Me,_e),f&&Oo(_e,null,Me,"beforeMount"),((w=st&&st.onVnodeMounted)||f)&&ta(()=>{w&&Fr(w,Me,_e),f&&Oo(_e,null,Me,"mounted")},nt),a&16&&!(st&&(st.innerHTML||st.textContent)))for(var N=He(Ne.firstChild,_e,Ne,Me,nt,qe,at),V=!1;N;){Wi=!0,V||(O("Hydration children mismatch in <".concat(_e.type,">: ")+"server rendered element contains more child nodes than client vdom."),V=!0);var F=N;N=N.nextSibling,z(F)}else a&8&&Ne.textContent!==_e.children&&(Wi=!0,O("Hydration text content mismatch in <".concat(_e.type,`>:
`)+"- Client: ".concat(Ne.textContent,`
`)+"- Server: ".concat(_e.children)),Ne.textContent=_e.children)}return Ne.nextSibling},He=(Ne,_e,Me,nt,qe,at,It)=>{It=It||!!_e.dynamicChildren;for(var st=_e.children,i=st.length,a=!1,f=0;f<i;f++){var p=It?st[f]:st[f]=Ji(st[f]);if(Ne)Ne=fe(Ne,p,nt,qe,at,It);else{if(p.type===ut&&!p.children)continue;Wi=!0,a||(O("Hydration children mismatch in <".concat(Me.tagName.toLowerCase(),">: ")+"server rendered element contains fewer child nodes than client vdom."),a=!0),h(null,p,Me,null,nt,qe,Un(Me),at)}}return Ne},Ze=(Ne,_e,Me,nt,qe,at)=>{var{slotScopeIds:It}=_e;It&&(qe=qe?qe.concat(It):It);var st=x(Ne),i=He(A(Ne),_e,st,Me,nt,qe,at);return i&&Gi(i)&&i.data==="]"?A(_e.anchor=i):(Wi=!0,$(_e.anchor=te("]"),st,i),i)},vt=(Ne,_e,Me,nt,qe,at)=>{if(Wi=!0,O(`Hydration node mismatch:
- Client vnode:`,_e.type,`
- Server rendered DOM:`,Ne,Ne.nodeType===3?"(text)":Gi(Ne)&&Ne.data==="["?"(start of fragment)":""),_e.el=null,at)for(var It=yt(Ne);;){var st=A(Ne);if(st&&st!==It)z(st);else break}var i=A(Ne),a=x(Ne);return z(Ne),h(null,_e,a,i,Me,nt,Un(a),qe),i},yt=Ne=>{for(var _e=0;Ne;)if(Ne=A(Ne),Ne&&Gi(Ne)&&(Ne.data==="["&&_e++,Ne.data==="]")){if(_e===0)return A(Ne);_e--}return Ne};return[Ie,fe]}var Ii,ti;function $r(o,c){o.appContext.config.performance&&Pi()&&ti.mark("vue-".concat(c,"-").concat(o.uid)),Fn(o,c,Pi()?ti.now():Date.now())}function Or(o,c){if(o.appContext.config.performance&&Pi()){var h="vue-".concat(c,"-").concat(o.uid),_=h+":end";ti.mark(_),ti.measure("<".concat(Sa(o,o.type),"> ").concat(c),h,_),ti.clearMarks(h),ti.clearMarks(_)}wr(o,c,Pi()?ti.now():Date.now())}function Pi(){return Ii!==void 0||(typeof window!="undefined"&&window.performance?(Ii=!0,ti=window.performance):Ii=!1),Ii}function Es(){var o=[];if(o.length){var c=o.length>1;console.warn("Feature flag".concat(c?"s":""," ").concat(o.join(", ")," ").concat(c?"are":"is"," not explicitly defined. You are running the esm-bundler build of Vue, ")+`which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`)}}var hr=ta;function Ar(o){return ni(o)}function zs(o){return ni(o,vi)}function ni(o,c){Es();var h=m.getGlobalThis();h.__VUE__=!0,li(h.__VUE_DEVTOOLS_GLOBAL_HOOK__,h);var{insert:_,remove:I,patchProp:A,forcePatchProp:x,createElement:z,createText:$,createComment:te,setText:Ie,setElementText:fe,parentNode:ue,nextSibling:He,setScopeId:Ze=m.NOOP,insertStaticContent:vt}=o,yt=function(B,j,ie){var ye=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,oe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,ge=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,et=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Ge=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:kr?!1:!!j.dynamicChildren;if(B!==j){B&&!vr(B,j)&&(ye=Le(B),Xe(B,oe,ge,!0),B=null),j.patchFlag===-2&&(tt=!1,j.dynamicChildren=null);var{type:Ve,ref:Lt,shapeFlag:Bt}=j;switch(Ve){case ut:Ne(B,j,ie,ye);break;case xt:_e(B,j,ie,ye);break;case Yt:B==null?Me(j,ie,ye,et):nt(B,j,ie,et);break;case gt:w(B,j,ie,ye,oe,ge,et,Ge,tt);break;default:Bt&1?It(B,j,ie,ye,oe,ge,et,Ge,tt):Bt&6?N(B,j,ie,ye,oe,ge,et,Ge,tt):Bt&64||Bt&128?Ve.process(B,j,ie,ye,oe,ge,et,Ge,tt,it):O("Invalid VNode type:",Ve,"(".concat(typeof Ve,")"))}Lt!=null&&oe&&Fo(Lt,B&&B.ref,ge,j||B,!j)}},Ne=(B,j,ie,ye)=>{if(B==null)_(j.el=$(j.children),ie,ye);else{var oe=j.el=B.el;j.children!==B.children&&Ie(oe,j.children)}},_e=(B,j,ie,ye)=>{B==null?_(j.el=te(j.children||""),ie,ye):j.el=B.el},Me=(B,j,ie,ye)=>{[B.el,B.anchor]=vt(B.children,j,ie,ye,B.el,B.anchor)},nt=(B,j,ie,ye)=>{if(j.children!==B.children){var oe=He(B.anchor);at(B),[j.el,j.anchor]=vt(j.children,ie,oe,ye)}else j.el=B.el,j.anchor=B.anchor},qe=(B,j,ie)=>{for(var{el:ye,anchor:oe}=B,ge;ye&&ye!==oe;)ge=He(ye),_(ye,j,ie),ye=ge;_(oe,j,ie)},at=B=>{for(var{el:j,anchor:ie}=B,ye;j&&j!==ie;)ye=He(j),I(j),j=ye;I(ie)},It=(B,j,ie,ye,oe,ge,et,Ge,tt)=>{et=et||j.type==="svg",B==null?st(j,ie,ye,oe,ge,et,Ge,tt):f(B,j,oe,ge,et,Ge,tt)},st=(B,j,ie,ye,oe,ge,et,Ge)=>{var tt,Ve,{type:Lt,props:Bt,shapeFlag:Ut,transition:un,dirs:Yn}=B;if(tt=B.el=z(B.type,ge,Bt&&Bt.is,Bt),Ut&8?fe(tt,B.children):Ut&16&&a(B.children,tt,null,ye,oe,ge&&Lt!=="foreignObject",et,Ge),Yn&&Oo(B,null,ye,"created"),i(tt,B,B.scopeId,et,ye),Bt){for(var qt in Bt)qt!=="value"&&!m.isReservedProp(qt)&&A(tt,qt,null,Bt[qt],ge,B.children,ye,oe,Ee,B.hostInstance);"value"in Bt&&A(tt,"value",null,Bt.value,!1,[],ye,null,void 0,B.hostInstance),(Ve=Bt.onVnodeBeforeMount)&&Fr(Ve,ye,B)}Object.defineProperty(tt,"__vnode",{value:B,enumerable:!1}),Object.defineProperty(tt,"__vueParentComponent",{value:ye,enumerable:!1}),Yn&&Oo(B,null,ye,"beforeMount");var bn=(!oe||oe&&!oe.pendingBranch)&&un&&!un.persisted;bn&&un.beforeEnter(tt),_(tt,j,ie),((Ve=Bt&&Bt.onVnodeMounted)||bn||Yn)&&hr(()=>{Ve&&Fr(Ve,ye,B),bn&&un.enter(tt),Yn&&Oo(B,null,ye,"mounted")},oe)},i=(B,j,ie,ye,oe)=>{if(ie&&Ze(B,ie),ye)for(var ge=0;ge<ye.length;ge++)Ze(B,ye[ge]);if(oe){var et=oe.subTree;if(et.patchFlag>0&&et.patchFlag&2048&&(et=yo(et.children)||et),j===et){var Ge=oe.vnode;i(B,Ge,Ge.scopeId,Ge.slotScopeIds,oe.parent)}}},a=function(B,j,ie,ye,oe,ge,et,Ge){for(var tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,Ve=tt;Ve<B.length;Ve++){var Lt=B[Ve]=Ge?mr(B[Ve]):Ji(B[Ve]);yt(null,Lt,j,ie,ye,oe,ge,et,Ge)}},f=(B,j,ie,ye,oe,ge,et)=>{var Ge=j.el=B.el,{patchFlag:tt,dynamicChildren:Ve,dirs:Lt}=j;tt|=B.patchFlag&16;var Bt=B.props||m.EMPTY_OBJ,Ut=j.props||m.EMPTY_OBJ,un;ie&&Vo(ie,!1),(un=Ut.onVnodeBeforeUpdate)&&Fr(un,ie,j,B),Lt&&Oo(j,B,ie,"beforeUpdate"),ie&&Vo(ie,!0),kr&&(tt=0,et=!1,Ve=null);var Yn=oe&&j.type!=="foreignObject";if(Ve?(p(B.dynamicChildren,Ve,Ge,ie,ye,Yn,ge),ie&&ie.type.__hmrId&&Yi(B,j)):et||ae(B,j,Ge,null,ie,ye,Yn,ge,!1),tt>0){if(tt&16)S(Ge,j,Bt,Ut,ie,ye,oe);else if(tt&2&&Bt.class!==Ut.class&&A(Ge,"class",null,Ut.class,oe,[],ie,null,void 0,j.hostInstance),tt&4&&A(Ge,"style",Bt.style,Ut.style,oe,[],ie,null,void 0,j.hostInstance),tt&8)for(var qt=j.dynamicProps,bn=0;bn<qt.length;bn++){var bi=qt[bn],sn=Bt[bi],Tn=Ut[bi];(Tn!==sn||bi==="value"||x&&x(Ge,bi))&&A(Ge,bi,sn,Tn,oe,B.children,ie,ye,Ee,j.hostInstance)}tt&1&&B.children!==j.children&&fe(Ge,j.children)}else!et&&Ve==null&&S(Ge,j,Bt,Ut,ie,ye,oe);((un=Ut.onVnodeUpdated)||Lt)&&hr(()=>{un&&Fr(un,ie,j,B),Lt&&Oo(j,B,ie,"updated")},ye)},p=(B,j,ie,ye,oe,ge,et)=>{for(var Ge=0;Ge<j.length;Ge++){var tt=B[Ge],Ve=j[Ge],Lt=tt.el&&(tt.type===gt||!vr(tt,Ve)||tt.shapeFlag&(6|64))?ue(tt.el):ie;yt(tt,Ve,Lt,null,ye,oe,ge,et,!0)}},S=(B,j,ie,ye,oe,ge,et)=>{if(ie!==ye){if(ie!==m.EMPTY_OBJ)for(var Ge in ie)!m.isReservedProp(Ge)&&!(Ge in ye)&&A(B,Ge,ie[Ge],null,et,j.children,oe,ge,Ee,j.hostInstance);for(var tt in ye)if(!m.isReservedProp(tt)){var Ve=ye[tt],Lt=ie[tt];(Ve!==Lt&&tt!=="value"||x&&x(B,tt))&&A(B,tt,Lt,Ve,et,j.children,oe,ge,Ee,j.hostInstance)}"value"in ye&&A(B,"value",ie.value,ye.value,!1,[],oe,null,void 0,j.hostInstance)}},w=(B,j,ie,ye,oe,ge,et,Ge,tt)=>{var Ve=j.el=B?B.el:$(""),Lt=j.anchor=B?B.anchor:$(""),{patchFlag:Bt,dynamicChildren:Ut,slotScopeIds:un}=j;(kr||Bt&2048)&&(Bt=0,tt=!1,Ut=null),un&&(Ge=Ge?Ge.concat(un):un),B==null?(_(Ve,ie,ye),_(Lt,ie,ye),a(j.children,ie,Lt,oe,ge,et,Ge,tt)):Bt>0&&Bt&64&&Ut&&B.dynamicChildren?(p(B.dynamicChildren,Ut,ie,oe,ge,et,Ge),oe&&oe.type.__hmrId?Yi(B,j):(j.key!=null||oe&&j===oe.subTree)&&Yi(B,j,!0)):ae(B,j,ie,Lt,oe,ge,et,Ge,tt)},N=(B,j,ie,ye,oe,ge,et,Ge,tt)=>{j.slotScopeIds=Ge,B==null?j.shapeFlag&512?oe.ctx.activate(j,ie,ye,et,tt):V(j,ie,ye,oe,ge,et,tt):F(B,j,tt)},V=(B,j,ie,ye,oe,ge,et)=>{var Ge=B.component=ul(B,ye,oe);if(Ge.type.__hmrId&&Ui(Ge),en(B),$r(Ge,"mount"),J(B)&&(Ge.ctx.renderer=it),$r(Ge,"init"),Ri(Ge),Or(Ge,"init"),Ge.asyncDep){if(oe&&oe.registerDep(Ge,q),!B.el){var tt=Ge.subTree=Gn(xt);_e(null,tt,j,ie)}return}q(Ge,B,j,ie,oe,ge,et),pe(),Or(Ge,"mount")},F=(B,j,ie)=>{var ye=j.component=B.component;if(Hi(B,j,ie))if(ye.asyncDep&&!ye.asyncResolved){en(j),be(ye,j,ie),pe();return}else ye.next=j,Nr(ye.update),ye.update();else j.el=B.el,ye.vnode=j},q=(B,j,ie,ye,oe,ge,et)=>{var Ge=()=>{if(B.isMounted){var{next:gn,bu:Xi,u:yi,parent:zr,vnode:ua}=B,G=gn,X;en(gn||B.vnode),Vo(B,!1),gn?(gn.el=ua.el,be(B,gn,et)):gn=ua,Xi&&m.invokeArrayFns(Xi),(X=gn.props&&gn.props.onVnodeBeforeUpdate)&&Fr(X,zr,gn,ua),Vo(B,!0),$r(B,"render");var Ce=ke(B);Or(B,"render");var $e=B.subTree;B.subTree=Ce,$r(B,"patch"),yt($e,Ce,ue($e.el),Le($e),B,oe,ge),Or(B,"patch"),gn.el=Ce.el,G===null&&Zr(B,Ce.el),yi&&hr(yi,oe),(X=gn.props&&gn.props.onVnodeUpdated)&&hr(()=>Fr(X,zr,gn,ua),oe),ro(B),pe()}else{var Lt,{el:Bt,props:Ut}=j,{bm:un,m:Yn,parent:qt}=B,bn=le(j);if(Vo(B,!1),un&&m.invokeArrayFns(un),!bn&&(Lt=Ut&&Ut.onVnodeBeforeMount)&&Fr(Lt,qt,j),Vo(B,!0),Bt&&Qe){var bi=()=>{$r(B,"render"),B.subTree=ke(B),Or(B,"render"),$r(B,"hydrate"),Qe(Bt,B.subTree,B,oe,null),Or(B,"hydrate")};bn?j.type.__asyncLoader().then(()=>!B.isUnmounted&&bi()):bi()}else{$r(B,"render");var sn=B.subTree=ke(B);Or(B,"render"),$r(B,"patch"),yt(null,sn,ie,ye,B,oe,ge),Or(B,"patch"),j.el=sn.el}if(Yn&&hr(Yn,oe),!bn&&(Lt=Ut&&Ut.onVnodeMounted)){var Tn=j;hr(()=>Fr(Lt,qt,Tn),oe)}(j.shapeFlag&256||qt&&le(qt.vnode)&&qt.vnode.shapeFlag&256)&&B.a&&hr(B.a,oe),B.isMounted=!0,xo(B),j=ie=ye=null}},tt=B.effect=new R.ReactiveEffect(Ge,()=>Zt(Ve),B.scope),Ve=B.update=()=>tt.run();Ve.id=B.uid,Vo(B,!0),tt.onTrack=B.rtc?Lt=>m.invokeArrayFns(B.rtc,Lt):void 0,tt.onTrigger=B.rtg?Lt=>m.invokeArrayFns(B.rtg,Lt):void 0,Ve.ownerInstance=B,Ve()},be=(B,j,ie)=>{j.component=B;var ye=B.vnode.props;B.vnode=j,B.next=null,bt(B,j.props,ye,ie),ia(B,j.children,ie),R.pauseTracking(),Fi(),R.resetTracking()},ae=function(B,j,ie,ye,oe,ge,et,Ge){var tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,Ve=B&&B.children,Lt=B?B.shapeFlag:0,Bt=j.children,{patchFlag:Ut,shapeFlag:un}=j;if(Ut>0){if(Ut&128){Ae(Ve,Bt,ie,ye,oe,ge,et,Ge,tt);return}else if(Ut&256){ne(Ve,Bt,ie,ye,oe,ge,et,Ge,tt);return}}un&8?(Lt&16&&Ee(Ve,oe,ge),Bt!==Ve&&fe(ie,Bt)):Lt&16?un&16?Ae(Ve,Bt,ie,ye,oe,ge,et,Ge,tt):Ee(Ve,oe,ge,!0):(Lt&8&&fe(ie,""),un&16&&a(Bt,ie,ye,oe,ge,et,Ge,tt))},ne=(B,j,ie,ye,oe,ge,et,Ge,tt)=>{B=B||m.EMPTY_ARR,j=j||m.EMPTY_ARR;var Ve=B.length,Lt=j.length,Bt=Math.min(Ve,Lt),Ut;for(Ut=0;Ut<Bt;Ut++){var un=j[Ut]=tt?mr(j[Ut]):Ji(j[Ut]);yt(B[Ut],un,ie,null,oe,ge,et,Ge,tt)}Ve>Lt?Ee(B,oe,ge,!0,!1,Bt):a(j,ie,ye,oe,ge,et,Ge,tt,Bt)},Ae=(B,j,ie,ye,oe,ge,et,Ge,tt)=>{for(var Ve=0,Lt=j.length,Bt=B.length-1,Ut=Lt-1;Ve<=Bt&&Ve<=Ut;){var un=B[Ve],Yn=j[Ve]=tt?mr(j[Ve]):Ji(j[Ve]);if(vr(un,Yn))yt(un,Yn,ie,null,oe,ge,et,Ge,tt);else break;Ve++}for(;Ve<=Bt&&Ve<=Ut;){var qt=B[Bt],bn=j[Ut]=tt?mr(j[Ut]):Ji(j[Ut]);if(vr(qt,bn))yt(qt,bn,ie,null,oe,ge,et,Ge,tt);else break;Bt--,Ut--}if(Ve>Bt){if(Ve<=Ut)for(var bi=Ut+1,sn=bi<Lt?j[bi].el:ye;Ve<=Ut;)yt(null,j[Ve]=tt?mr(j[Ve]):Ji(j[Ve]),ie,sn,oe,ge,et,Ge,tt),Ve++}else if(Ve>Ut)for(;Ve<=Bt;)Xe(B[Ve],oe,ge,!0),Ve++;else{var Tn=Ve,gn=Ve,Xi=new Map;for(Ve=gn;Ve<=Ut;Ve++){var yi=j[Ve]=tt?mr(j[Ve]):Ji(j[Ve]);yi.key!=null&&(Xi.has(yi.key)&&O("Duplicate keys found during update:",JSON.stringify(yi.key),"Make sure keys are unique."),Xi.set(yi.key,Ve))}var zr,ua=0,G=Ut-gn+1,X=!1,Ce=0,$e=new Array(G);for(Ve=0;Ve<G;Ve++)$e[Ve]=0;for(Ve=Tn;Ve<=Bt;Ve++){var ze=B[Ve];if(ua>=G){Xe(ze,oe,ge,!0);continue}var rt=void 0;if(ze.key!=null)rt=Xi.get(ze.key);else for(zr=gn;zr<=Ut;zr++)if($e[zr-gn]===0&&vr(ze,j[zr])){rt=zr;break}rt===void 0?Xe(ze,oe,ge,!0):($e[rt-gn]=Ve+1,rt>=Ce?Ce=rt:X=!0,yt(ze,j[rt],ie,null,oe,ge,et,Ge,tt),ua++)}var mt=X?Ea($e):m.EMPTY_ARR;for(zr=mt.length-1,Ve=G-1;Ve>=0;Ve--){var ot=gn+Ve,ct=j[ot],Ye=ot+1<Lt?j[ot+1].el:ye;$e[Ve]===0?yt(null,ct,ie,Ye,oe,ge,et,Ge,tt):X&&(zr<0||Ve!==mt[zr]?De(ct,ie,Ye,2):zr--)}}},De=function(B,j,ie,ye){var oe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:ge,type:et,transition:Ge,children:tt,shapeFlag:Ve}=B;if(Ve&6){De(B.component.subTree,j,ie,ye);return}if(Ve&128){B.suspense.move(j,ie,ye);return}if(Ve&64){et.move(B,j,ie,it);return}if(et===gt){_(ge,j,ie);for(var Lt=0;Lt<tt.length;Lt++)De(tt[Lt],j,ie,ye);_(B.anchor,j,ie);return}if(et===Yt){qe(B,j,ie);return}var Bt=ye!==2&&Ve&1&&Ge;if(Bt)if(ye===0)Ge.beforeEnter(ge),_(ge,j,ie),hr(()=>Ge.enter(ge),oe);else{var{leave:Ut,delayLeave:un,afterLeave:Yn}=Ge,qt=()=>_(ge,j,ie),bn=()=>{Ut(ge,()=>{qt(),Yn&&Yn()})};un?un(ge,qt,bn):bn()}else _(ge,j,ie)},Xe=function(B,j,ie){var ye=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,oe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:ge,props:et,ref:Ge,children:tt,dynamicChildren:Ve,shapeFlag:Lt,patchFlag:Bt,dirs:Ut}=B;if(Ge!=null&&Fo(Ge,null,ie,B,!0),Lt&256){j.ctx.deactivate(B);return}var un=Lt&1&&Ut,Yn=!le(B),qt;if(Yn&&(qt=et&&et.onVnodeBeforeUnmount)&&Fr(qt,j,B),Lt&6)se(B.component,ie,ye);else{if(Lt&128){B.suspense.unmount(ie,ye);return}un&&Oo(B,null,j,"beforeUnmount"),Lt&64?B.type.remove(B,j,ie,oe,it,ye):Ve&&(ge!==gt||Bt>0&&Bt&64)?Ee(Ve,j,ie,!1,!0):(ge===gt&&Bt&(128|256)||!oe&&Lt&16)&&Ee(tt,j,ie),ye&&ft(B)}(Yn&&(qt=et&&et.onVnodeUnmounted)||un)&&hr(()=>{qt&&Fr(qt,j,B),un&&Oo(B,null,j,"unmounted")},ie)},ft=B=>{var{type:j,el:ie,anchor:ye,transition:oe}=B;if(j===gt){B.patchFlag>0&&B.patchFlag&2048&&oe&&!oe.persisted?B.children.forEach(Ve=>{Ve.type===xt?I(Ve.el):ft(Ve)}):Te(ie,ye);return}if(j===Yt){at(B);return}var ge=()=>{I(ie),oe&&!oe.persisted&&oe.afterLeave&&oe.afterLeave()};if(B.shapeFlag&1&&oe&&!oe.persisted){var{leave:et,delayLeave:Ge}=oe,tt=()=>et(ie,ge);Ge?Ge(B.el,ge,tt):tt()}else ge()},Te=(B,j)=>{for(var ie;B!==j;)ie=He(B),I(B),B=ie;I(j)},se=(B,j,ie)=>{B.type.__hmrId&&Yr(B);var{bum:ye,scope:oe,update:ge,subTree:et,um:Ge}=B;ye&&m.invokeArrayFns(ye),oe.stop(),ge&&(ge.active=!1,Xe(et,B,j,ie)),Ge&&hr(Ge,j),hr(()=>{B.isUnmounted=!0},j),j&&j.pendingBranch&&!j.isUnmounted&&B.asyncDep&&!B.asyncResolved&&B.suspenseId===j.pendingId&&(j.deps--,j.deps===0&&j.resolve()),qr(B)},Ee=function(B,j,ie){for(var ye=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,oe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,ge=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,et=ge;et<B.length;et++)Xe(B[et],j,ie,ye,oe)},Le=B=>B.shapeFlag&6?Le(B.component.subTree):B.shapeFlag&128?B.suspense.next():He(B.anchor||B.el),Fe=(B,j,ie)=>{B==null?j._vnode&&Xe(j._vnode,null,null,!0):yt(j._vnode||null,B,j,null,null,null,ie),Fi(),lr(),j._vnode=B},it={p:yt,um:Xe,m:De,r:ft,mt:V,mc:a,pc:ae,pbc:p,n:Le,o},Tt,Qe;return c&&([Tt,Qe]=c(it)),{render:Fe,hydrate:Tt,createApp:cl(Fe,Tt)}}function Vo(o,c){var{effect:h,update:_}=o;h.allowRecurse=_.allowRecurse=c}function Yi(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,_=o.children,I=c.children;if(m.isArray(_)&&m.isArray(I))for(var A=0;A<_.length;A++){var x=_[A],z=I[A];z.shapeFlag&1&&!z.dynamicChildren&&((z.patchFlag<=0||z.patchFlag===32)&&(z=I[A]=mr(I[A]),z.el=x.el),h||Yi(x,z)),z.type===ut&&(z.el=x.el),z.type===xt&&!z.el&&(z.el=x.el)}}function Ea(o){var c=o.slice(),h=[0],_,I,A,x,z,$=o.length;for(_=0;_<$;_++){var te=o[_];if(te!==0){if(I=h[h.length-1],o[I]<te){c[_]=I,h.push(_);continue}for(A=0,x=h.length-1;A<x;)z=A+x>>1,o[h[z]]<te?A=z+1:x=z;te<o[h[A]]&&(A>0&&(c[_]=h[A-1]),h[A]=_)}}for(A=h.length,x=h[A-1];A-- >0;)h[A]=x,x=c[x];return h}var La=o=>o.__isTeleport,po=o=>o&&(o.disabled||o.disabled===""),Ni=o=>typeof SVGElement!="undefined"&&o instanceof SVGElement,ws=(o,c)=>{var h=o&&o.to;if(m.isString(h))if(c){var _=c(h);return _||O('Failed to locate Teleport target with selector "'.concat(h,'". ')+"Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree."),_}else return O("Current renderer does not support string target for Teleports. (missing querySelector renderer option)"),null;else return!h&&!po(o)&&O("Invalid Teleport target: ".concat(h)),h},Uo={__isTeleport:!0,process(o,c,h,_,I,A,x,z,$,te){var{mc:Ie,pc:fe,pbc:ue,o:{insert:He,querySelector:Ze,createText:vt,createComment:yt}}=te,Ne=po(c.props),{shapeFlag:_e,children:Me,dynamicChildren:nt}=c;if(kr&&($=!1,nt=null),o==null){var qe=c.el=yt("teleport start"),at=c.anchor=yt("teleport end");He(qe,h,_),He(at,h,_);var It=c.target=ws(c.props,Ze),st=c.targetAnchor=vt("");It?(He(st,It),x=x||Ni(It)):Ne||O("Invalid Teleport target on mount:",It,"(".concat(typeof It,")"));var i=(F,q)=>{_e&16&&Ie(Me,F,q,I,A,x,z,$)};Ne?i(h,at):It&&i(It,st)}else{c.el=o.el;var a=c.anchor=o.anchor,f=c.target=o.target,p=c.targetAnchor=o.targetAnchor,S=po(o.props),w=S?h:f,N=S?a:p;if(x=x||Ni(f),nt?(ue(o.dynamicChildren,nt,w,I,A,x,z),Yi(o,c,!0)):$||fe(o,c,w,N,I,A,x,z,!1),Ne)S||Ss(c,h,a,te,1);else if((c.props&&c.props.to)!==(o.props&&o.props.to)){var V=c.target=ws(c.props,Ze);V?Ss(c,V,null,te,0):O("Invalid Teleport target on update:",f,"(".concat(typeof f,")"))}else S&&Ss(c,f,p,te,1)}Ue(c)},remove(o,c,h,_,I,A){var{um:x,o:{remove:z}}=I,{shapeFlag:$,children:te,anchor:Ie,targetAnchor:fe,target:ue,props:He}=o;if(ue&&z(fe),(A||!po(He))&&(z(Ie),$&16))for(var Ze=0;Ze<te.length;Ze++){var vt=te[Ze];x(vt,c,h,!0,!!vt.dynamicChildren)}},move:Ss,hydrate:Za};function Ss(o,c,h,_){var{o:{insert:I},m:A}=_,x=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;x===0&&I(o.targetAnchor,c,h);var{el:z,anchor:$,shapeFlag:te,children:Ie,props:fe}=o,ue=x===2;if(ue&&I(z,c,h),(!ue||po(fe))&&te&16)for(var He=0;He<Ie.length;He++)A(Ie[He],c,h,2);ue&&I($,c,h)}function Za(o,c,h,_,I,A,x,z){var{o:{nextSibling:$,parentNode:te,querySelector:Ie}}=x,fe=c.target=ws(c.props,Ie);if(fe){var ue=fe._lpa||fe.firstChild;if(c.shapeFlag&16)if(po(c.props))c.anchor=z($(o),c,te(o),h,_,I,A),c.targetAnchor=ue;else{c.anchor=$(o);for(var He=ue;He;)if(He=$(He),He&&He.nodeType===8&&He.data==="teleport anchor"){c.targetAnchor=He,fe._lpa=c.targetAnchor&&$(c.targetAnchor);break}z(ue,c,fe,h,_,I,A)}Ue(c)}return c.anchor&&$(c.anchor)}var Rl=Uo;function Ue(o){var c=o.ctx;if(c&&c.ut){for(var h=o.children[0].el;h!==o.targetAnchor;)h.nodeType===1&&h.setAttribute("data-v-owner",c.uid),h=h.nextSibling;c.ut()}}var gt=Symbol("Fragment"),ut=Symbol("Text"),xt=Symbol("Comment"),Yt=Symbol("Static"),Wn=[],Mn=null;function nr(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;Wn.push(Mn=o?null:[])}function wa(){Wn.pop(),Mn=Wn[Wn.length-1]||null}var ki=1;function $o(o){ki+=o}function Ws(o){return o.dynamicChildren=ki>0?Mn||m.EMPTY_ARR:null,wa(),ki>0&&Mn&&Mn.push(o),o}function ac(o,c,h,_,I,A){return Ws(Fa(o,c,h,_,I,A,!0))}function xl(o,c,h,_,I){return Ws(Gn(o,c,h,_,I,!0))}function oa(o){return o?o.__v_isVNode===!0:!1}function vr(o,c){return c.shapeFlag&6&&Rr.has(c.type)?(o.shapeFlag&=~256,c.shapeFlag&=~512,!1):o.type===c.type&&o.key===c.key}var ri;function Xa(o){ri=o}var Cs=function(){for(var o=arguments.length,c=new Array(o),h=0;h<o;h++)c[h]=arguments[h];return $n(...ri?ri(c,On):c)},Os="__vInternal",As=o=>{var{key:c}=o;return c!=null?c:null},Ho=o=>{var{ref:c,ref_key:h,ref_for:_}=o;return c!=null?m.isString(c)||R.isRef(c)||m.isFunction(c)?{i:On,r:c,k:h,f:!!_}:c:null};function Fa(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,_=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,I=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,A=arguments.length>5&&arguments[5]!==void 0?arguments[5]:o===gt?0:1,x=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,z=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,$={__v_isVNode:!0,__v_skip:!0,type:o,props:c,key:c&&As(c),ref:c&&Ho(c),scopeId:En,slotScopeIds:null,children:h,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:A,patchFlag:_,dynamicProps:I,dynamicChildren:null,appContext:null,hostInstance:On,ctx:On};return z?(Hr($,h),A&128&&o.normalize($)):h&&($.shapeFlag|=m.isString(h)?8:16),$.key!==$.key&&O("VNode created with invalid key (NaN). VNode type:",$.type),ki>0&&!x&&Mn&&($.patchFlag>0||A&6)&&$.patchFlag!==32&&Mn.push($),$}var Gn=Cs;function $n(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,_=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,I=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,A=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!o||o===zn)&&(o||O("Invalid vnode type when creating vnode: ".concat(o,".")),o=xt),oa(o)){var x=qi(o,c,!0);return h&&Hr(x,h),ki>0&&!A&&Mn&&(x.shapeFlag&6?Mn[Mn.indexOf(o)]=x:Mn.push(x)),x.patchFlag|=-2,x}if(ks(o)&&(o=o.__vccOpts),c){c=Bl(c);var{class:z,style:$}=c;z&&!m.isString(z)&&(c.class=m.normalizeClass(z)),m.isObject($)&&(R.isProxy($)&&!m.isArray($)&&($=m.extend({},$)),c.style=m.normalizeStyle($))}var te=m.isString(o)?1:fi(o)?128:La(o)?64:m.isObject(o)?4:m.isFunction(o)?2:0;return te&4&&R.isProxy(o)&&(o=R.toRaw(o),O("Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.",`
Component that was made reactive: `,o)),Fa(o,c,h,_,I,te,A,!0)}function Bl(o){return o?R.isProxy(o)||Os in o?m.extend({},o):o:null}function qi(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:_,ref:I,patchFlag:A,children:x}=o,z=c?Va(_||{},c):_,$={__v_isVNode:!0,__v_skip:!0,type:o.type,props:z,key:z&&As(z),ref:c&&c.ref?h&&I?m.isArray(I)?I.concat(Ho(c)):[I,Ho(c)]:Ho(c):I,scopeId:o.scopeId,slotScopeIds:o.slotScopeIds,children:A===-1&&m.isArray(x)?x.map(Ki):x,target:o.target,targetAnchor:o.targetAnchor,staticCount:o.staticCount,shapeFlag:o.shapeFlag,patchFlag:c&&o.type!==gt?A===-1?16:A|16:A,dynamicProps:o.dynamicProps,dynamicChildren:o.dynamicChildren,appContext:o.appContext,hostInstance:o.hostInstance,dirs:o.dirs,transition:o.transition,component:o.component,suspense:o.suspense,ssContent:o.ssContent&&qi(o.ssContent),ssFallback:o.ssFallback&&qi(o.ssFallback),el:o.el,anchor:o.anchor,ctx:o.ctx,ce:o.ce};return $}function Ki(o){var c=qi(o);return m.isArray(o.children)&&(c.children=o.children.map(Ki)),c}function Ts(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return Gn(ut,null,o,c)}function Is(o,c){var h=Gn(Yt,null,o);return h.staticCount=c,h}function jc(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return c?(nr(),xl(xt,null,o)):Gn(xt,null,o)}function Ji(o){return o==null||typeof o=="boolean"?Gn(xt):m.isArray(o)?Gn(gt,null,o.slice()):typeof o=="object"?mr(o):Gn(ut,null,String(o))}function mr(o){return o.el===null&&o.patchFlag!==-1||o.memo?o:qi(o)}function Hr(o,c){var h=0,{shapeFlag:_}=o;if(c==null)c=null;else if(m.isArray(c))h=16;else if(typeof c=="object")if(_&(1|64)){var I=c.default;I&&(I._c&&(I._d=!1),Hr(o,I()),I._c&&(I._d=!0));return}else{h=32;var A=c._;!A&&!(Os in c)?c._ctx=On:A===3&&On&&(On.slots._===1?c._=1:(c._=2,o.patchFlag|=1024))}else m.isFunction(c)?(c={default:c,_ctx:On},h=32):(c=String(c),_&64?(h=16,c=[Ts(c)]):h=8);o.children=c,o.shapeFlag|=h}function Va(){for(var o={},c=0;c<arguments.length;c++){var h=c<0||arguments.length<=c?void 0:arguments[c];for(var _ in h)if(_==="class")o.class!==h.class&&(o.class=m.normalizeClass([o.class,h.class]));else if(_==="style")o.style=m.normalizeStyle([o.style,h.style]);else if(m.isOn(_)){var I=o[_],A=h[_];A&&I!==A&&!(m.isArray(I)&&I.includes(A))&&(o[_]=I?[].concat(I,A):A)}else _!==""&&(o[_]=h[_])}return o}function Fr(o,c,h){var _=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;cn(o,c,7,[h,_])}var jr=tr(),Ml=0;function ul(o,c,h){var _=o.type,I=(c?c.appContext:o.appContext)||jr,A={uid:Ml++,vnode:o,type:_,parent:c,appContext:I,root:null,next:null,subTree:null,effect:null,update:null,scope:new R.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:c?c.provides:Object.create(I.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Et(_,I),emitsOptions:Zo(_,I),emit:null,emitted:null,propsDefaults:m.EMPTY_OBJ,inheritAttrs:_.inheritAttrs,ctx:m.EMPTY_OBJ,data:m.EMPTY_OBJ,props:m.EMPTY_OBJ,attrs:m.EMPTY_OBJ,slots:m.EMPTY_OBJ,refs:m.EMPTY_OBJ,setupState:m.EMPTY_OBJ,setupContext:null,suspense:h,suspenseId:h?h.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return A.ctx=sl(A),A.root=c?c.root:A,A.emit=_o.bind(null,A),o.ce&&o.ce(A),A}var Bn=null,Sn=()=>Bn||On,mi=o=>{Bn=o,o.scope.on()},_i=()=>{Bn&&Bn.scope.off(),Bn=null},aa=m.makeMap("slot,component");function fl(o,c){var h=c.isNativeTag||m.NO;(aa(o)||h(o))&&O("Do not use built-in or reserved HTML elements as component id: "+o)}function Ua(o){return o.vnode.shapeFlag&4}d.isInSSRComponentSetup=!1;function Ri(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;d.isInSSRComponentSetup=c;var{props:h,children:_}=o.vnode,I=Ua(o);Se(o,h,I,c),Da(o,_);var A=I?jo(o,c):void 0;return d.isInSSRComponentSetup=!1,A}function jo(o,c){var h,_=o.type;{if(_.name&&fl(_.name,o.appContext.config),_.components)for(var I=Object.keys(_.components),A=0;A<I.length;A++)fl(I[A],o.appContext.config);if(_.directives)for(var x=Object.keys(_.directives),z=0;z<x.length;z++)Us(x[z]);_.compilerOptions&&sc()&&O('"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.')}o.accessCache=Object.create(null),o.proxy=R.markRaw(new Proxy(o.ctx,Lo)),$s(o);var{setup:$}=_;if($){var te=o.setupContext=$.length>1?lc(o):null;mi(o),R.pauseTracking();var Ie=Jt($,o,0,[R.shallowReadonly(o.props),te]);if(R.resetTracking(),_i(),m.isPromise(Ie)){if(Ie.then(_i,_i),c)return Ie.then(ue=>{dl(o,ue,c)}).catch(ue=>{Ir(ue,o,0)});if(o.asyncDep=Ie,!o.suspense){var fe=(h=_.name)!==null&&h!==void 0?h:"Anonymous";O("Component <".concat(fe,">: setup function returned a promise, but no ")+"<Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.")}}else dl(o,Ie,c)}else pl(o,c)}function dl(o,c,h){m.isFunction(c)?o.type.__ssrInlineRender?o.ssrRender=c:o.render=c:m.isObject(c)?(oa(c)&&O("setup() should not return VNodes directly - return a render function instead."),o.devtoolsRawSetupState=c,o.setupState=R.proxyRefs(c),kl(o)):c!==void 0&&O("setup() should return an object. Received: ".concat(c===null?"null":typeof c)),pl(o,h)}var Qa,es;function hl(o){Qa=o,es=c=>{c.render._rc&&(c.withProxy=new Proxy(c.ctx,xa))}}var sc=()=>!Qa;function pl(o,c,h){var _=o.type;if(!o.render){if(!c&&Qa&&!_.render){var I=_.template||M(o).template;if(I){$r(o,"compile");var{isCustomElement:A,compilerOptions:x}=o.appContext.config,{delimiters:z,compilerOptions:$}=_,te=m.extend(m.extend({isCustomElement:A,delimiters:z},x),$);_.render=Qa(I,te),Or(o,"compile")}}o.render=_.render||m.NOOP,es&&es(o)}mi(o),R.pauseTracking(),Hs(o),R.resetTracking(),_i(),!_.render&&o.render===m.NOOP&&!c&&(!Qa&&_.template?O('Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".'):O("Component is missing template or render function."))}function Dl(o){return new Proxy(o.attrs,{get(c,h){return Dt(),R.track(o,"get","$attrs"),c[h]},set(){return O("setupContext.attrs is readonly."),!1},deleteProperty(){return O("setupContext.attrs is readonly."),!1}})}function lc(o){var c=_=>{if(o.exposed&&O("expose() should be called only once per setup()."),_!=null){var I=typeof _;I==="object"&&(m.isArray(_)?I="array":R.isRef(_)&&(I="ref")),I!=="object"&&O("expose() should be passed a plain object, received ".concat(I,"."))}o.exposed=_||{}},h;return Object.freeze({get attrs(){return h||(h=Dl(o))},get slots(){return R.shallowReadonly(o.slots)},get emit(){return function(_){for(var I=arguments.length,A=new Array(I>1?I-1:0),x=1;x<I;x++)A[x-1]=arguments[x];return o.emit(_,...A)}},expose:c})}function Ps(o){if(o.exposed)return o.exposeProxy||(o.exposeProxy=new Proxy(R.proxyRefs(R.markRaw(o.exposed)),{get(c,h){if(h in c)return c[h];if(h in zi)return zi[h](o)},has(c,h){return h in c||h in zi}}))}var Ns=/(?:^|[-_])(\w)/g,cc=o=>o.replace(Ns,c=>c.toUpperCase()).replace(/[-_]/g,"");function ts(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return m.isFunction(o)?o.displayName||o.name:o.name||c&&o.__name}function Sa(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,_=ts(c);if(!_&&c.__file){var I=c.__file.match(/([^/\\]+)\.\w+$/);I&&(_=I[1])}if(!_&&o&&o.parent){var A=x=>{for(var z in x)if(x[z]===c)return z};_=A(o.components||o.parent.type.components)||A(o.appContext.components)}return _?cc(_):h?"App":"Anonymous"}function ks(o){return m.isFunction(o)&&"__vccOpts"in o}var Ll=(o,c)=>R.computed(o,c,d.isInSSRComponentSetup),Gs=o=>O("".concat(o,"() is a compiler-hint helper that is only usable inside ")+"<script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.");function gl(){return Gs("defineProps"),null}function uc(){return Gs("defineEmits"),null}function zc(o){Gs("defineExpose")}function fc(o,c){return Gs("withDefaults"),null}function Wc(){return dc().slots}function Gc(){return dc().attrs}function dc(){var o=Sn();return o||O("useContext() called without active instance."),o.setupContext||(o.setupContext=lc(o))}function hc(o,c){var h=m.isArray(o)?o.reduce((A,x)=>(A[x]={},A),{}):o;for(var _ in c){var I=h[_];I?m.isArray(I)||m.isFunction(I)?h[_]={type:I,default:c[_]}:I.default=c[_]:I===null?h[_]={default:c[_]}:O('props default key "'.concat(_,'" has no corresponding declaration.'))}return h}function pc(o,c){var h={},_=function(A){c.includes(A)||Object.defineProperty(h,A,{enumerable:!0,get:()=>o[A]})};for(var I in o)_(I);return h}function Yc(o){var c=Sn();c||O("withAsyncContext called without active current instance. This is likely a bug.");var h=o();return _i(),m.isPromise(h)&&(h=h.catch(_=>{throw mi(c),_})),[h,()=>mi(c)]}function qc(o,c,h){var _=arguments.length;return _===2?m.isObject(c)&&!m.isArray(c)?oa(c)?Gn(o,null,[c]):Gn(o,c):Gn(o,null,c):(_>3?h=Array.prototype.slice.call(arguments,2):_===3&&oa(h)&&(h=[h]),Gn(o,c,h))}var Fl=Symbol("ssrContext"),vl=()=>{{var o=or(Fl);return o||O("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),o}};function Rs(o){return!!(o&&o.__v_isShallow)}function ii(){if(typeof window=="undefined")return;var o={style:"color:#3ba776"},c={style:"color:#0b1bc9"},h={style:"color:#b62e24"},_={style:"color:#9d288c"},I={header(fe){return m.isObject(fe)?fe.__isVue?["div",o,"VueInstance"]:R.isRef(fe)?["div",{},["span",o,Ie(fe)],"<",z(fe.value),">"]:R.isReactive(fe)?["div",{},["span",o,Rs(fe)?"ShallowReactive":"Reactive"],"<",z(fe),">".concat(R.isReadonly(fe)?" (readonly)":"")]:R.isReadonly(fe)?["div",{},["span",o,Rs(fe)?"ShallowReadonly":"Readonly"],"<",z(fe),">"]:null:null},hasBody(fe){return fe&&fe.__isVue},body(fe){if(fe&&fe.__isVue)return["div",{},...A(fe.$)]}};function A(fe){var ue=[];fe.type.props&&fe.props&&ue.push(x("props",R.toRaw(fe.props))),fe.setupState!==m.EMPTY_OBJ&&ue.push(x("setup",fe.setupState)),fe.data!==m.EMPTY_OBJ&&ue.push(x("data",R.toRaw(fe.data)));var He=$(fe,"computed");He&&ue.push(x("computed",He));var Ze=$(fe,"inject");return Ze&&ue.push(x("injected",Ze)),ue.push(["div",{},["span",{style:_.style+";opacity:0.66"},"$ (internal): "],["object",{object:fe}]]),ue}function x(fe,ue){return ue=m.extend({},ue),Object.keys(ue).length?["div",{style:"line-height:1.25em;margin-bottom:0.6em"},["div",{style:"color:#476582"},fe],["div",{style:"padding-left:1.25em"},...Object.keys(ue).map(He=>["div",{},["span",_,He+": "],z(ue[He],!1)])]]:["span",{}]}function z(fe){var ue=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return typeof fe=="number"?["span",c,fe]:typeof fe=="string"?["span",h,JSON.stringify(fe)]:typeof fe=="boolean"?["span",_,fe]:m.isObject(fe)?["object",{object:ue?R.toRaw(fe):fe}]:["span",h,String(fe)]}function $(fe,ue){var He=fe.type;if(!m.isFunction(He)){var Ze={};for(var vt in fe.ctx)te(He,vt,ue)&&(Ze[vt]=fe.ctx[vt]);return Ze}}function te(fe,ue,He){var Ze=fe[He];if(m.isArray(Ze)&&Ze.includes(ue)||m.isObject(Ze)&&ue in Ze||fe.extends&&te(fe.extends,ue,He)||fe.mixins&&fe.mixins.some(vt=>te(vt,ue,He)))return!0}function Ie(fe){return Rs(fe)?"ShallowRef":fe.effect?"ComputedRef":"Ref"}window.devtoolsFormatters?window.devtoolsFormatters.push(I):window.devtoolsFormatters=[I]}function To(o,c,h,_){var I=h[_];if(I&&Vl(I,o))return I;var A=c();return A.memo=o.slice(),h[_]=A}function Vl(o,c){var h=o.memo;if(h.length!=c.length)return!1;for(var _=0;_<h.length;_++)if(m.hasChanged(h[_],c[_]))return!1;return ki>0&&Mn&&Mn.push(o),!0}var zo="3.2.47",ml=null,ns=null,Kc={insert:(o,c,h)=>h?c.insertBefore(o,h):c.appendChild(o),remove:o=>{var c=o.parentNode;c&&c.removeChild(o)},createElement:o=>l.createElement(o),createText:o=>l.createText(o),createComment:o=>l.createComment(o),setText:(o,c)=>{o.setAttr("value",c)},setElementText:(o,c)=>{o.setAttr("value",c)},parentNode:o=>o.parentNode,nextSibling:o=>o.nextSibling};function Ys(o){return Object.keys(o)}function sa(o){var c={};return m.isArray(o)&&o.forEach(h=>{Ys(h).forEach(_=>{var I=h[_],A=c[_]||(c[_]={});Ys(I).forEach(x=>{var z=I[x],$=A[x]||(A[x]={});Ys(z).forEach(te=>{te[0]==="!"?($[te]=z[te],delete $[te.slice(1)]):m.hasOwn($,"!"+te)||($[te]=z[te])})})})}),c}function qs(o,c){var h=c&&c.classList;return h&&h.includes(o)}var Wo=/[+~> ]$/,Ks="parentNode",Zi="previousSibling";function gc(o,c){for(var h=o.split("."),_=h.length-1;_>0;_--){var I=h[_],A=I[I.length-1],x=I.replace(Wo,"");if(A==="~"||A===" "){for(var z=A==="~"?Zi:Ks;c&&(c=c[z],!qs(x,c)););if(!c)return!1}else if(A===">"?c=c&&c[Ks]:A==="+"&&(c=c&&c[Zi]),!qs(x,c))return!1}return!0}var Ul=1e3;function Jc(o,c,h){var{styles:_,weights:I}=o;Ys(c).forEach(A=>{if(!(A&&h&&!gc(A,h))){var x=A.split(".").length,z=c[A];Ys(z).forEach($=>{var te=z[$],Ie=$[0]==="!";Ie&&($=$.slice(1));var fe=I[$]||0,ue=x+(Ie?Ul:0);ue>=fe&&(I[$]=ue,_[$]=te)})}})}function vc(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,_={styles:{},weights:{}};return o.forEach(I=>{var A=c[I];A&&Jc(_,A,h)}),_.styles}function Js(o){return vc(o.classList,o.styleSheet,o)}function mc(o,c){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null;return vc(o,_c(c),h)}function _c(o){var{type:c,appContext:h}=o,_=c;if(!_.__styles)if(h&&m.isArray(h.provides.__globalStyles)&&(h.provides.__globalStyles=sa(h.provides.__globalStyles)),_.mpType==="page"&&h)_.__styles=h.provides.__globalStyles;else{var I=[];h&&I.push(h.provides.__globalStyles),m.isArray(_.styles)&&_.styles.forEach(A=>I.push(A)),_.__styles=sa(I)}return _.__styles}function bc(o,c,h){var _=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;_&&([c,h]=$a(o,c,h,_)),o.setAttr(c,h)}var $l="hoverClass",Zs="placeholderClass",yc="placeholderStyle",Zc="indicatorClass",Xc="indicatorStyle",Qc="maskClass",Hl="maskStyle",_l={view:{class:[$l],style:[]},button:{class:[$l],style:[]},navigator:{class:[$l],style:[]},"u-input":{class:[Zs],style:[yc]},"u-textarea":{class:[Zs],style:[yc]},"picker-view":{class:[Zc,Qc],style:[Xc,Hl]}};function $a(o,c,h,_){if(!h)return[c,h];var I=_l[o.type];if(I){var A=m.camelize(c);if(I.class.indexOf(A)>-1)return[A,mc([h],_,o)];if(I.style.indexOf(c)>-1)return m.isString(h)?[A,m.parseStringStyle(h)]:[A,m.normalizeStyle(h)]}return[c,h]}function Xs(o,c,h){var _=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;if(!!_){var I=h?h.split(" "):[];o.setClassList(I),o.setStyleSheet(_c(_))}}function jl(o,c,h,_){o.addEvent(c,h)}function Ec(o,c){o.removeEvent(c)}function pn(o,c,h,_){var I=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,A=o._vei||(o._vei={}),x=A[c];if(_&&x)x.value=_;else{var[z,$]=wc(c);if(_){var te=A[c]=bl(_,I);jl(o,z,te)}else x&&(Ec(o,z),A[c]=void 0)}}var xi=/(?:Once|Passive|Capture)$/;function Io(o){return o==="on-post-message"?"onPostMessage":o}function wc(o){var c;if(xi.test(o)){c={};for(var h;h=o.match(xi);)o=o.slice(0,o.length-h[0].length),c[h[0].toLowerCase()]=!0}var _=o[2]===":"?o.slice(3):o.slice(2);return[Io(m.hyphenate(_)),c]}function bl(o,c){var h=I=>{cn(h.value,c,5,[I])};h.value=o;var _=new Set;return m.isArray(h.value)?h.value.forEach(I=>{I.modifiers&&I.modifiers.forEach(A=>{_.add(A)})}):(h.value.modifiers&&h.value.modifiers.forEach(I=>{_.add(I)}),Qs(h,c)),h.modifiers=[..._],h}function Qs(o,c){if(!!c){var{$wxsModules:h}=c;if(!!h){var _=o.value.toString();!h.find(I=>_.indexOf("."+I+".")>-1)||(o.wxsEvent=o.value())}}}function yl(o,c,h){if(!!h){m.isString(h)&&(h=m.parseStringStyle(h));var _={},I=c&&!m.isString(c);if(I){for(var A in c)h[A]==null&&(_[m.camelize(A)]="");for(var x in h){var z=h[x];z!==c[x]&&(_[m.camelize(x)]=z)}}else for(var $ in h)_[m.camelize($)]=h[$];o.setStyles(_)}}var Po=["u-input","u-textarea"],la=function(o,c,h,_){var I=arguments.length>6?arguments[6]:void 0,A=arguments.length>9?arguments[9]:void 0;c==="class"?Xs(o,h,_,A||I):c==="style"?yl(o,h,_):m.isOn(c)?m.isModelListener(c)||pn(o,c,h,_,I):c==="modelValue"&&Po.includes(o.type)?o.setAttrs({modelValue:_,value:_}):bc(o,c,_,I)};function Ha(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var c=Sn();if(!c)return O("useCssModule must be called inside setup()"),m.EMPTY_OBJ;var h=c.type.__cssModules;if(!h)return O("Current instance does not have CSS modules injected."),m.EMPTY_OBJ;var _=h[o];return _||(O('Current instance does not have CSS module named "'.concat(o,'".')),m.EMPTY_OBJ)}}function el(o){var c=Sn();if(!c){O("useCssVars is called without current active component instance.");return}var h=()=>pr(c.subTree,o(c.proxy));uo(()=>Vn(h,{flush:"post"})),ra(h)}function pr(o,c){if(o.shapeFlag&128){var h=o.suspense;o=h.activeBranch,h.pendingBranch&&!h.isHydrating&&h.effects.push(()=>{pr(h.activeBranch,c)})}for(;o.component;)o=o.component.subTree;if(o.shapeFlag&1&&o.el){var _=o.el.style;for(var I in c)_.setProperty("--".concat(I),c[I])}else o.type===gt&&o.children.forEach(A=>pr(A,c))}var xs=["ctrl","shift","alt","meta"],ja={stop:o=>o.stopPropagation(),prevent:o=>o.preventDefault(),self:o=>o.target!==o.currentTarget,ctrl:o=>!o.ctrlKey,shift:o=>!o.shiftKey,alt:o=>!o.altKey,meta:o=>!o.metaKey,left:o=>"button"in o&&o.button!==0,middle:o=>"button"in o&&o.button!==1,right:o=>"button"in o&&o.button!==2,exact:(o,c)=>xs.some(h=>o["".concat(h,"Key")]&&!c.includes(h))},rs=(o,c)=>function(h){for(var _=0;_<c.length;_++){var I=ja[c[_]];if(I&&I(h,c))return}for(var A=arguments.length,x=new Array(A>1?A-1:0),z=1;z<A;z++)x[z-1]=arguments[z];return o(h,...x)},Sc=(o,c)=>h=>{if("key"in h){var _=m.hyphenate(h.key);if(c.some(I=>I===_))return o(h)}},Ca=m.extend({patchProp:la},Kc),El;function ca(){return El||(El=Ar(Ca))}var za=function(){ca().render(...arguments)},oi=function(){var o=ca().createApp(...arguments),{mount:c}=o;return o.mount=h=>c(h),o};return Object.defineProperty(d,"camelize",{enumerable:!0,get:function(){return m.camelize}}),Object.defineProperty(d,"capitalize",{enumerable:!0,get:function(){return m.capitalize}}),Object.defineProperty(d,"hyphenate",{enumerable:!0,get:function(){return m.hyphenate}}),Object.defineProperty(d,"normalizeClass",{enumerable:!0,get:function(){return m.normalizeClass}}),Object.defineProperty(d,"normalizeProps",{enumerable:!0,get:function(){return m.normalizeProps}}),Object.defineProperty(d,"normalizeStyle",{enumerable:!0,get:function(){return m.normalizeStyle}}),Object.defineProperty(d,"toDisplayString",{enumerable:!0,get:function(){return m.toDisplayString}}),Object.defineProperty(d,"toHandlerKey",{enumerable:!0,get:function(){return m.toHandlerKey}}),Object.defineProperty(d,"EffectScope",{enumerable:!0,get:function(){return R.EffectScope}}),Object.defineProperty(d,"ReactiveEffect",{enumerable:!0,get:function(){return R.ReactiveEffect}}),Object.defineProperty(d,"customRef",{enumerable:!0,get:function(){return R.customRef}}),Object.defineProperty(d,"effect",{enumerable:!0,get:function(){return R.effect}}),Object.defineProperty(d,"effectScope",{enumerable:!0,get:function(){return R.effectScope}}),Object.defineProperty(d,"getCurrentScope",{enumerable:!0,get:function(){return R.getCurrentScope}}),Object.defineProperty(d,"isProxy",{enumerable:!0,get:function(){return R.isProxy}}),Object.defineProperty(d,"isReactive",{enumerable:!0,get:function(){return R.isReactive}}),Object.defineProperty(d,"isReadonly",{enumerable:!0,get:function(){return R.isReadonly}}),Object.defineProperty(d,"isRef",{enumerable:!0,get:function(){return R.isRef}}),Object.defineProperty(d,"isShallow",{enumerable:!0,get:function(){return R.isShallow}}),Object.defineProperty(d,"markRaw",{enumerable:!0,get:function(){return R.markRaw}}),Object.defineProperty(d,"onScopeDispose",{enumerable:!0,get:function(){return R.onScopeDispose}}),Object.defineProperty(d,"proxyRefs",{enumerable:!0,get:function(){return R.proxyRefs}}),Object.defineProperty(d,"reactive",{enumerable:!0,get:function(){return R.reactive}}),Object.defineProperty(d,"readonly",{enumerable:!0,get:function(){return R.readonly}}),Object.defineProperty(d,"ref",{enumerable:!0,get:function(){return R.ref}}),Object.defineProperty(d,"shallowReactive",{enumerable:!0,get:function(){return R.shallowReactive}}),Object.defineProperty(d,"shallowReadonly",{enumerable:!0,get:function(){return R.shallowReadonly}}),Object.defineProperty(d,"shallowRef",{enumerable:!0,get:function(){return R.shallowRef}}),Object.defineProperty(d,"stop",{enumerable:!0,get:function(){return R.stop}}),Object.defineProperty(d,"toRaw",{enumerable:!0,get:function(){return R.toRaw}}),Object.defineProperty(d,"toRef",{enumerable:!0,get:function(){return R.toRef}}),Object.defineProperty(d,"toRefs",{enumerable:!0,get:function(){return R.toRefs}}),Object.defineProperty(d,"triggerRef",{enumerable:!0,get:function(){return R.triggerRef}}),Object.defineProperty(d,"unref",{enumerable:!0,get:function(){return R.unref}}),d.BaseTransition=Mo,d.BaseTransitionPropsValidators=Sr,d.Comment=xt,d.Fragment=gt,d.KeepAlive=ce,d.Static=Yt,d.Suspense=an,d.Teleport=Rl,d.Text=ut,d.assertNumber=Dn,d.callWithAsyncErrorHandling=cn,d.callWithErrorHandling=Jt,d.cloneVNode=qi,d.compatUtils=ns,d.computed=Ll,d.createApp=oi,d.createBlock=xl,d.createCommentVNode=jc,d.createElementBlock=ac,d.createElementVNode=Fa,d.createHydrationRenderer=zs,d.createPropsRestProxy=pc,d.createRenderer=Ar,d.createSlots=Ra,d.createStaticVNode=Is,d.createTextVNode=Ts,d.createVNode=Gn,d.defineAsyncComponent=de,d.defineComponent=ve,d.defineEmits=uc,d.defineExpose=zc,d.defineProps=gl,d.getCurrentInstance=Sn,d.getTransitionRawChildren=Z,d.guardReactiveProps=Bl,d.h=qc,d.handleError=Ir,d.initCustomFormatter=ii,d.inject=or,d.injectHook=co,d.isMemoSame=Vl,d.isRuntimeOnly=sc,d.isVNode=oa,d.mergeDefaults=hc,d.mergeProps=Va,d.nextTick=tn,d.onActivated=lt,d.onBeforeMount=gi,d.onBeforeUnmount=Qn,d.onBeforeUpdate=fo,d.onDeactivated=zt,d.onErrorCaptured=Vs,d.onMounted=uo,d.onRenderTracked=Lr,d.onRenderTriggered=Na,d.onServerPrefetch=qa,d.onUnmounted=Dr,d.onUpdated=ra,d.openBlock=nr,d.parseClassList=mc,d.parseClassStyles=Js,d.popScopeId=Ya,d.provide=Zn,d.pushScopeId=Bo,d.queuePostFlushCb=Ur,d.registerRuntimeCompiler=hl,d.render=za,d.renderList=ol,d.renderSlot=al,d.resolveComponent=Nl,d.resolveDirective=gs,d.resolveDynamicComponent=ma,d.resolveFilter=ml,d.resolveTransitionHooks=Ai,d.setBlockTracking=$o,d.setDevtoolsHook=li,d.setTransitionHooks=D,d.ssrContextKey=Fl,d.toHandlers=vs,d.transformVNodeArgs=Xa,d.useAttrs=Gc,d.useCssModule=Ha,d.useCssStyles=sa,d.useCssVars=el,d.useSSRContext=vl,d.useSlots=Wc,d.useTransitionState=ji,d.version=zo,d.warn=O,d.watch=Si,d.watchEffect=Vn,d.watchPostEffect=Xr,d.watchSyncEffect=hi,d.withAsyncContext=Yc,d.withCtx=Jr,d.withDefaults=fc,d.withDirectives=il,d.withKeys=Sc,d.withMemo=To,d.withModifiers=rs,d.withScopeId=Jn,Object.defineProperty(d,"__esModule",{value:!0}),d}({},T,k,b);return C.__TYPE__="nvue",C}var Xg=hP(_P);var wu={};lP(wu,{EMPTY_ARR:()=>RP,EMPTY_OBJ:()=>kP,NO:()=>BP,NOOP:()=>xP,camelize:()=>qP,capitalize:()=>lf,def:()=>QP,extend:()=>Di,getGlobalThis:()=>nN,hasChanged:()=>ZP,hasOwn:()=>Xl,hyphenate:()=>cd,invokeArrayFns:()=>XP,isArray:()=>to,isBuiltInDirective:()=>GP,isFunction:()=>Hn,isGloballyWhitelisted:()=>EP,isHTMLTag:()=>IP,isIntegerKey:()=>zP,isMap:()=>tv,isModelListener:()=>LP,isObject:()=>Vc,isOn:()=>DP,isPlainObject:()=>Uc,isPromise:()=>HP,isRegExp:()=>UP,isReservedProp:()=>WP,isSVGTag:()=>PP,isSet:()=>nv,isString:()=>Li,isSymbol:()=>$P,looseToNumber:()=>eN,makeMap:()=>Fc,normalizeClass:()=>ld,normalizeProps:()=>OP,normalizeStyle:()=>sd,parseStringStyle:()=>Qg,remove:()=>FP,toDisplayString:()=>NP,toHandlerKey:()=>JP,toNumber:()=>tN,toRawType:()=>jP,toTypeString:()=>Ls});function Fc(v,l){let b=Object.create(null),T=v.split(",");for(let k=0;k<T.length;k++)b[T[k]]=!0;return l?k=>!!b[k.toLowerCase()]:k=>!!b[k]}var yP="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",EP=Fc(yP);function sd(v){if(to(v)){let l={};for(let b=0;b<v.length;b++){let T=v[b],k=Li(T)?Qg(T):sd(T);if(k)for(let C in k)l[C]=k[C]}return l}else{if(Li(v))return v;if(Vc(v))return v}}var wP=/;(?![^(]*\))/g,SP=/:([^]+)/,CP=/\/\*.*?\*\//gs;function Qg(v){let l={};return v.replace(CP,"").split(wP).forEach(b=>{if(b){let T=b.split(SP);T.length>1&&(l[T[0].trim()]=T[1].trim())}}),l}function ld(v){let l="";if(Li(v))l=v;else if(to(v))for(let b=0;b<v.length;b++){let T=ld(v[b]);T&&(l+=T+" ")}else if(Vc(v))for(let b in v)v[b]&&(l+=b+" ");return l.trim()}function OP(v){if(!v)return null;let{class:l,style:b}=v;return l&&!Li(l)&&(v.class=ld(l)),b&&(v.style=sd(b)),v}var AP="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",TP="svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view",IP=Fc(AP),PP=Fc(TP),NP=v=>Li(v)?v:v==null?"":to(v)||Vc(v)&&(v.toString===rv||!Hn(v.toString))?JSON.stringify(v,ev,2):String(v),ev=(v,l)=>l&&l.__v_isRef?ev(v,l.value):tv(l)?{[`Map(${l.size})`]:[...l.entries()].reduce((b,[T,k])=>(b[`${T} =>`]=k,b),{})}:nv(l)?{[`Set(${l.size})`]:[...l.values()]}:Vc(l)&&!to(l)&&!Uc(l)?String(l):l,kP={},RP=[],xP=()=>{},BP=()=>!1,MP=/^on[^a-z]/,DP=v=>MP.test(v),LP=v=>v.startsWith("onUpdate:"),Di=Object.assign,FP=(v,l)=>{let b=v.indexOf(l);b>-1&&v.splice(b,1)},VP=Object.prototype.hasOwnProperty,Xl=(v,l)=>VP.call(v,l),to=Array.isArray,tv=v=>Ls(v)==="[object Map]",nv=v=>Ls(v)==="[object Set]",UP=v=>Ls(v)==="[object RegExp]",Hn=v=>typeof v=="function",Li=v=>typeof v=="string",$P=v=>typeof v=="symbol",Vc=v=>v!==null&&typeof v=="object",HP=v=>Vc(v)&&Hn(v.then)&&Hn(v.catch),rv=Object.prototype.toString,Ls=v=>rv.call(v),jP=v=>Ls(v).slice(8,-1),Uc=v=>Ls(v)==="[object Object]",zP=v=>Li(v)&&v!=="NaN"&&v[0]!=="-"&&""+parseInt(v,10)===v,WP=Fc(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),GP=Fc("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"),sf=v=>{let l=Object.create(null);return b=>l[b]||(l[b]=v(b))},YP=/-(\w)/g,qP=sf(v=>v.replace(YP,(l,b)=>b?b.toUpperCase():"")),KP=/\B([A-Z])/g,cd=sf(v=>v.replace(KP,"-$1").toLowerCase()),lf=sf(v=>v.charAt(0).toUpperCase()+v.slice(1)),JP=sf(v=>v?`on${lf(v)}`:""),ZP=(v,l)=>!Object.is(v,l),XP=(v,l)=>{for(let b=0;b<v.length;b++)v[b](l)},QP=(v,l,b)=>{Object.defineProperty(v,l,{configurable:!0,enumerable:!1,value:b})},eN=v=>{let l=parseFloat(v);return isNaN(l)?v:l},tN=v=>{let l=Li(v)?Number(v):NaN;return isNaN(l)?v:l},iv,nN=()=>iv||(iv=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});function ov(v){var l=function(b,T){"use strict";function k(D,...Z){console.warn(`[Vue warn] ${D}`,...Z)}let C;class d{constructor(Z=!1){this.detached=Z,this._active=!0,this.effects=[],this.cleanups=[],this.parent=C,!Z&&C&&(this.index=(C.scopes||(C.scopes=[])).push(this)-1)}get active(){return this._active}run(Z){if(this._active){let ve=C;try{return C=this,Z()}finally{C=ve}}}on(){C=this}off(){C=this.parent}stop(Z){if(this._active){let ve,le;for(ve=0,le=this.effects.length;ve<le;ve++)this.effects[ve].stop();for(ve=0,le=this.cleanups.length;ve<le;ve++)this.cleanups[ve]();if(this.scopes)for(ve=0,le=this.scopes.length;ve<le;ve++)this.scopes[ve].stop(!0);if(!this.detached&&this.parent&&!Z){let de=this.parent.scopes.pop();de&&de!==this&&(this.parent.scopes[this.index]=de,de.index=this.index)}this.parent=void 0,this._active=!1}}}function m(D){return new d(D)}function R(D,Z=C){Z&&Z.active&&Z.effects.push(D)}function We(){return C}function Pt(D){C&&C.cleanups.push(D)}let en=D=>{let Z=new Set(D);return Z.w=0,Z.n=0,Z},pe=D=>(D.w&re)>0,O=D=>(D.n&re)>0,Nt=({deps:D})=>{if(D.length)for(let Z=0;Z<D.length;Z++)D[Z].w|=re},jn=D=>{let{deps:Z}=D;if(Z.length){let ve=0;for(let le=0;le<Z.length;le++){let de=Z[le];pe(de)&&!O(de)?de.delete(D):Z[ve++]=de,de.w&=~re,de.n&=~re}Z.length=ve}},_t=new WeakMap,K=0,re=1,Dn=30,fn,Jt=Symbol(""),cn=Symbol("");class Ir{constructor(Z,ve=null,le){this.fn=Z,this.scheduler=ve,this.active=!0,this.deps=[],this.parent=void 0,R(this,le)}run(){if(!this.active)return this.fn();let Z=fn,ve=Vt;for(;Z;){if(Z===this)return;Z=Z.parent}try{return this.parent=fn,fn=this,Vt=!0,re=1<<++K,K<=Dn?Nt(this):wi(this),this.fn()}finally{K<=Dn&&jn(this),re=1<<--K,fn=this.parent,Vt=ve,this.parent=void 0,this.deferStop&&this.stop()}}stop(){fn===this?this.deferStop=!0:this.active&&(wi(this),this.onStop&&this.onStop(),this.active=!1)}}function wi(D){let{deps:Z}=D;if(Z.length){for(let ve=0;ve<Z.length;ve++)Z[ve].delete(D);Z.length=0}}function qn(D,Z){D.effect&&(D=D.effect.fn);let ve=new Ir(D);Z&&(T.extend(ve,Z),Z.scope&&R(ve,Z.scope)),(!Z||!Z.lazy)&&ve.run();let le=ve.run.bind(ve);return le.effect=ve,le}function hn(D){D.effect.stop()}let Vt=!0,Nn=[];function yn(){Nn.push(Vt),Vt=!1}function xn(){Nn.push(Vt),Vt=!0}function Pr(){let D=Nn.pop();Vt=D===void 0?!0:D}function Ke(D,Z,ve){if(Vt&&fn){let le=_t.get(D);le||_t.set(D,le=new Map);let de=le.get(ve);de||le.set(ve,de=en()),dt(de,void 0)}}function dt(D,Z){let ve=!1;K<=Dn?O(D)||(D.n|=re,ve=!pe(D)):ve=!D.has(fn),ve&&(D.add(fn),fn.deps.push(D))}function St(D,Z,ve,le,de,Ot){let J=_t.get(D);if(!J)return;let Y=[];if(Z==="clear")Y=[...J.values()];else if(ve==="length"&&T.isArray(D)){let xe=Number(le);J.forEach((lt,zt)=>{(zt==="length"||zt>=xe)&&Y.push(lt)})}else switch(ve!==void 0&&Y.push(J.get(ve)),Z){case"add":T.isArray(D)?T.isIntegerKey(ve)&&Y.push(J.get("length")):(Y.push(J.get(Jt)),T.isMap(D)&&Y.push(J.get(cn)));break;case"delete":T.isArray(D)||(Y.push(J.get(Jt)),T.isMap(D)&&Y.push(J.get(cn)));break;case"set":T.isMap(D)&&Y.push(J.get(Jt));break}let ce=void 0;if(Y.length===1)Y[0]&&tn(Y[0]);else{let xe=[];for(let lt of Y)lt&&xe.push(...lt);tn(en(xe))}}function tn(D,Z){let ve=T.isArray(D)?D:[...D];for(let le of ve)le.computed&&kn(le,Z);for(let le of ve)le.computed||kn(le,Z)}function kn(D,Z){(D!==fn||D.allowRecurse)&&(D.scheduler?D.scheduler():D.run())}function Zt(D,Z){var ve;return(ve=_t.get(D))===null||ve===void 0?void 0:ve.get(Z)}let Ln=T.makeMap("__proto__,__v_isRef,__isVue"),Nr=new Set(Object.getOwnPropertyNames(Symbol).filter(D=>D!=="arguments"&&D!=="caller").map(D=>Symbol[D]).filter(T.isSymbol)),Ur=kr(),Fi=kr(!1,!0),lr=kr(!0),Er=kr(!0,!0),Vi=Go();function Go(){let D={};return["includes","indexOf","lastIndexOf"].forEach(Z=>{D[Z]=function(...ve){let le=an(this);for(let Ot=0,J=this.length;Ot<J;Ot++)Ke(le,"get",Ot+"");let de=le[Z](...ve);return de===-1||de===!1?le[Z](...ve.map(an)):de}}),["push","pop","shift","unshift","splice"].forEach(Z=>{D[Z]=function(...ve){yn();let le=an(this)[Z].apply(this,ve);return Pr(),le}}),D}function Yo(D){let Z=an(this);return Ke(Z,"has",D),Z.hasOwnProperty(D)}function kr(D=!1,Z=!1){return function(le,de,Ot){if(de==="__v_isReactive")return!D;if(de==="__v_isReadonly")return D;if(de==="__v_isShallow")return Z;if(de==="__v_raw"&&Ot===(D?Z?Dt:ur:Z?Jr:Jn).get(le))return le;let J=T.isArray(le);if(!D){if(J&&T.hasOwn(Vi,de))return Reflect.get(Vi,de,Ot);if(de==="hasOwnProperty")return Yo}let Y=Reflect.get(le,de,Ot);return(T.isSymbol(de)?Nr.has(de):Ln(de))||(D||Ke(le,"get",de),Z)?Y:fr(Y)?J&&T.isIntegerKey(de)?Y:Y.value:T.isObject(Y)?D?pa(Y):yo(Y):Y}}let Rr=Ui(),xr=Ui(!0);function Ui(D=!1){return function(ve,le,de,Ot){let J=ve[le];if(Zr(J)&&fr(J)&&!fr(de))return!1;if(!D&&(!fi(de)&&!Zr(de)&&(J=an(J),de=an(de)),!T.isArray(ve)&&fr(J)&&!fr(de)))return J.value=de,!0;let Y=T.isArray(ve)&&T.isIntegerKey(le)?Number(le)<ve.length:T.hasOwn(ve,le),ce=Reflect.set(ve,le,de,Ot);return ve===an(Ot)&&(Y?T.hasChanged(de,J)&&St(ve,"set",le,de,J):St(ve,"add",le,de)),ce}}function Yr(D,Z){let ve=T.hasOwn(D,Z),le=D[Z],de=Reflect.deleteProperty(D,Z);return de&&ve&&St(D,"delete",Z,void 0,le),de}function Ta(D,Z){let ve=Reflect.has(D,Z);return(!T.isSymbol(Z)||!Nr.has(Z))&&Ke(D,"has",Z),ve}function $i(D){return Ke(D,"iterate",T.isArray(D)?"length":Jt),Reflect.ownKeys(D)}let mo={get:Ur,set:Rr,deleteProperty:Yr,has:Ta,ownKeys:$i},Ia={get:lr,set(D,Z){return!0},deleteProperty(D,Z){return!0}},no=T.extend({},mo,{get:Fi,set:xr}),qo=T.extend({},Ia,{get:Er}),si=D=>D,Pn=D=>Reflect.getPrototypeOf(D);function cr(D,Z,ve=!1,le=!1){D=D.__v_raw;let de=an(D),Ot=an(Z);ve||(Z!==Ot&&Ke(de,"get",Z),Ke(de,"get",Ot));let{has:J}=Pn(de),Y=le?si:ve?ga:di;if(J.call(de,Z))return Y(D.get(Z));if(J.call(de,Ot))return Y(D.get(Ot));D!==de&&D.get(Z)}function li(D,Z=!1){let ve=this.__v_raw,le=an(ve),de=an(D);return Z||(D!==de&&Ke(le,"has",D),Ke(le,"has",de)),D===de?ve.has(D):ve.has(D)||ve.has(de)}function Kn(D,Z=!1){return D=D.__v_raw,!Z&&Ke(an(D),"iterate",Jt),Reflect.get(D,"size",D)}function Ko(D){D=an(D);let Z=an(this);return Pn(Z).has.call(Z,D)||(Z.add(D),St(Z,"add",D,D)),this}function xo(D,Z){Z=an(Z);let ve=an(this),{has:le,get:de}=Pn(ve),Ot=le.call(ve,D);Ot||(D=an(D),Ot=le.call(ve,D));let J=de.call(ve,D);return ve.set(D,Z),Ot?T.hasChanged(Z,J)&&St(ve,"set",D,Z,J):St(ve,"add",D,Z),this}function ro(D){let Z=an(this),{has:ve,get:le}=Pn(Z),de=ve.call(Z,D);de||(D=an(D),de=ve.call(Z,D));let Ot=le?le.call(Z,D):void 0,J=Z.delete(D);return de&&St(Z,"delete",D,void 0,Ot),J}function io(){let D=an(this),Z=D.size!==0,ve=void 0,le=D.clear();return Z&&St(D,"clear",void 0,void 0,ve),le}function qr(D,Z){return function(le,de){let Ot=this,J=Ot.__v_raw,Y=an(J),ce=Z?si:D?ga:di;return!D&&Ke(Y,"iterate",Jt),J.forEach((xe,lt)=>le.call(de,ce(xe),ce(lt),Ot))}}function oo(D,Z,ve){return function(...le){let de=this.__v_raw,Ot=an(de),J=T.isMap(Ot),Y=D==="entries"||D===Symbol.iterator&&J,ce=D==="keys"&&J,xe=de[D](...le),lt=ve?si:Z?ga:di;return!Z&&Ke(Ot,"iterate",ce?cn:Jt),{next(){let{value:zt,done:An}=xe.next();return An?{value:zt,done:An}:{value:Y?[lt(zt[0]),lt(zt[1])]:lt(zt),done:An}},[Symbol.iterator](){return this}}}}function Fn(D){return function(...Z){return D==="delete"?!1:this}}function wr(){let D={get(Ot){return cr(this,Ot)},get size(){return Kn(this)},has:li,add:Ko,set:xo,delete:ro,clear:io,forEach:qr(!1,!1)},Z={get(Ot){return cr(this,Ot,!1,!0)},get size(){return Kn(this)},has:li,add:Ko,set:xo,delete:ro,clear:io,forEach:qr(!1,!0)},ve={get(Ot){return cr(this,Ot,!0)},get size(){return Kn(this,!0)},has(Ot){return li.call(this,Ot,!0)},add:Fn("add"),set:Fn("set"),delete:Fn("delete"),clear:Fn("clear"),forEach:qr(!0,!1)},le={get(Ot){return cr(this,Ot,!0,!0)},get size(){return Kn(this,!0)},has(Ot){return li.call(this,Ot,!0)},add:Fn("add"),set:Fn("set"),delete:Fn("delete"),clear:Fn("clear"),forEach:qr(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(Ot=>{D[Ot]=oo(Ot,!1,!1),ve[Ot]=oo(Ot,!0,!1),Z[Ot]=oo(Ot,!1,!0),le[Ot]=oo(Ot,!0,!0)}),[D,ve,Z,le]}let[ci,Jo,_o,Zo]=wr();function Kr(D,Z){let ve=Z?D?Zo:_o:D?Jo:ci;return(le,de,Ot)=>de==="__v_isReactive"?!D:de==="__v_isReadonly"?D:de==="__v_raw"?le:Reflect.get(T.hasOwn(ve,de)&&de in le?ve:le,de,Ot)}let On={get:Kr(!1,!1)},En={get:Kr(!1,!0)},ui={get:Kr(!0,!1)},Bo={get:Kr(!0,!0)};function Ya(D,Z,ve){let le=an(ve);if(le!==ve&&Z.call(D,le)){let de=T.toRawType(D);console.warn(`Reactive ${de} contains both the raw and reactive versions of the same object${de==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}let Jn=new WeakMap,Jr=new WeakMap,ur=new WeakMap,Dt=new WeakMap;function ke(D){switch(D){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function bo(D){return D.__v_skip||!Object.isExtensible(D)?0:ke(T.toRawType(D))}function yo(D){return Zr(D)?D:Hi(D,!1,mo,On,Jn)}function Eo(D){return Hi(D,!1,no,En,Jr)}function pa(D){return Hi(D,!0,Ia,ui,ur)}function Xo(D){return Hi(D,!0,qo,Bo,Dt)}function Hi(D,Z,ve,le,de){if(!T.isObject(D)||D.__v_raw&&!(Z&&D.__v_isReactive))return D;let Ot=de.get(D);if(Ot)return Ot;let J=bo(D);if(J===0)return D;let Y=new Proxy(D,J===2?le:ve);return de.set(D,Y),Y}function wo(D){return Zr(D)?wo(D.__v_raw):!!(D&&D.__v_isReactive)}function Zr(D){return!!(D&&D.__v_isReadonly)}function fi(D){return!!(D&&D.__v_isShallow)}function Qo(D){return wo(D)||Zr(D)}function an(D){let Z=D&&D.__v_raw;return Z?an(Z):D}function So(D){return T.def(D,"__v_skip",!0),D}let di=D=>T.isObject(D)?yo(D):D,ga=D=>T.isObject(D)?pa(D):D;function mn(D){Vt&&fn&&(D=an(D),dt(D.dep||(D.dep=en())))}function Br(D,Z){D=an(D);let ve=D.dep;ve&&tn(ve)}function fr(D){return!!(D&&D.__v_isRef===!0)}function ea(D){return ta(D,!1)}function Pa(D){return ta(D,!0)}function ta(D,Z){return fr(D)?D:new ao(D,Z)}class ao{constructor(Z,ve){this.__v_isShallow=ve,this.dep=void 0,this.__v_isRef=!0,this._rawValue=ve?Z:an(Z),this._value=ve?Z:di(Z)}get value(){return mn(this),this._value}set value(Z){let ve=this.__v_isShallow||fi(Z)||Zr(Z);Z=ve?Z:an(Z),T.hasChanged(Z,this._rawValue)&&(this._rawValue=Z,this._value=ve?Z:di(Z),Br(this,Z))}}function Zn(D){Br(D,void 0)}function or(D){return fr(D)?D.value:D}let Vn={get:(D,Z,ve)=>or(Reflect.get(D,Z,ve)),set:(D,Z,ve,le)=>{let de=D[Z];return fr(de)&&!fr(ve)?(de.value=ve,!0):Reflect.set(D,Z,ve,le)}};function Xr(D){return wo(D)?D:new Proxy(D,Vn)}class hi{constructor(Z){this.dep=void 0,this.__v_isRef=!0;let{get:ve,set:le}=Z(()=>mn(this),()=>Br(this));this._get=ve,this._set=le}get value(){return this._get()}set value(Z){this._set(Z)}}function na(D){return new hi(D)}function Si(D){let Z=T.isArray(D)?new Array(D.length):{};for(let ve in D)Z[ve]=so(D,ve);return Z}class Ci{constructor(Z,ve,le){this._object=Z,this._key=ve,this._defaultValue=le,this.__v_isRef=!0}get value(){let Z=this._object[this._key];return Z===void 0?this._defaultValue:Z}set value(Z){this._object[this._key]=Z}get dep(){return Zt(an(this._object),this._key)}}function so(D,Z,ve){let le=D[Z];return fr(le)?le:new Ci(D,Z,ve)}var va;class Oi{constructor(Z,ve,le,de){this._setter=ve,this.dep=void 0,this.__v_isRef=!0,this[va]=!1,this._dirty=!0,this.effect=new Ir(Z,()=>{this._dirty||(this._dirty=!0,Br(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!de,this.__v_isReadonly=le}get value(){let Z=an(this);return mn(Z),(Z._dirty||!Z._cacheable)&&(Z._dirty=!1,Z._value=Z.effect.run()),Z._value}set value(Z){this._setter(Z)}}va="__v_isReadonly";function ji(D,Z,ve=!1){let le,de,Ot=T.isFunction(D);return Ot?(le=D,de=T.NOOP):(le=D.get,de=D.set),new Oi(le,de,Ot||!de,ve)}var dr;let Sr=Promise.resolve(),lo=[],Mo=!1,Co=D=>{lo.push(D),Mo||(Mo=!0,Sr.then(Ai))},Ai=()=>{for(let D=0;D<lo.length;D++)lo[D]();lo.length=0,Mo=!1};class pi{constructor(Z){this.dep=void 0,this._dirty=!0,this.__v_isRef=!0,this[dr]=!0;let ve,le=!1,de=!1;this.effect=new Ir(Z,Ot=>{if(this.dep){if(Ot)ve=this._value,le=!0;else if(!de){let J=le?ve:this._value;de=!0,le=!1,Co(()=>{this.effect.active&&this._get()!==J&&Br(this),de=!1})}for(let J of this.dep)J.computed instanceof pi&&J.scheduler(!0)}this._dirty=!0}),this.effect.computed=this}_get(){return this._dirty?(this._dirty=!1,this._value=this.effect.run()):this._value}get value(){return mn(this),an(this)._get()}}dr="__v_isReadonly";function Do(D){return new pi(D)}return b.EffectScope=d,b.ITERATE_KEY=Jt,b.ReactiveEffect=Ir,b.computed=ji,b.customRef=na,b.deferredComputed=Do,b.effect=qn,b.effectScope=m,b.enableTracking=xn,b.getCurrentScope=We,b.isProxy=Qo,b.isReactive=wo,b.isReadonly=Zr,b.isRef=fr,b.isShallow=fi,b.markRaw=So,b.onScopeDispose=Pt,b.pauseTracking=yn,b.proxyRefs=Xr,b.reactive=yo,b.readonly=pa,b.ref=ea,b.resetTracking=Pr,b.shallowReactive=Eo,b.shallowReadonly=Xo,b.shallowRef=Pa,b.stop=hn,b.toRaw=an,b.toRef=so,b.toRefs=Si,b.track=Ke,b.trigger=St,b.triggerRef=Zn,b.unref=or,Object.defineProperty(b,"__esModule",{value:!0}),b}({},v);return l}function av(v){var l=function(b){"use strict";let T=`
`,k=44,C=50,d=50,m=["%","%"],R="#007aff",We=/^([a-z-]+:)?\/\//i,Pt=/^data:.*,.*/,en="WEB_INVOKE_APPSERVICE",pe="wxs://",O="json://",Nt="wxsModules",jn="renderjsModules",_t="onShow",K="onHide",re="onLaunch",Dn="onError",fn="onThemeChange",Jt="offThemeChange",cn="onKeyboardHeightChange",Ir="onPageNotFound",wi="onUnhandledRejection",qn="onLoad",hn="onReady",Vt="onUnload",Nn="onInit",yn="onSaveExitState",xn="onResize",Pr="onBackPress",Ke="onPageScroll",dt="onTabItemTap",St="onReachBottom",tn="onPullDownRefresh",kn="onShareTimeline",Zt="onAddToFavorites",Ln="onShareAppMessage",Nr="onNavigationBarButtonTap",Ur="onNavigationBarSearchInputClicked",Fi="onNavigationBarSearchInputChanged",lr="onNavigationBarSearchInputConfirmed",Er="onNavigationBarSearchInputFocusChanged",Vi="onAppEnterForeground",Go="onAppEnterBackground",Yo="onWxsInvokeCallMethod";function kr(J){return!!J.appContext}function Rr(J){return J&&(kr(J)?J.proxy:J)}function xr(J){return J.nodeType===1}function Ui(J,Y=!1){let{vnode:ce}=J;if(xr(ce.el))return Y?ce.el?[ce.el]:[]:ce.el;let{subTree:xe}=J;if(xe.shapeFlag&16){let lt=xe.children.filter(zt=>zt.el&&xr(zt.el));if(lt.length>0)return Y?lt.map(zt=>zt.el):lt[0].el}return Y?ce.el?[ce.el]:[]:ce.el}let Yr=0;function Ta(J,...Y){let ce=Date.now(),xe=Yr?ce-Yr:0;return Yr=ce,`[${ce}][${xe}ms][${J}]\uFF1A${Y.map(lt=>JSON.stringify(lt)).join(" ")}`}function $i(J){let Y=Object.create(null);return ce=>Y[ce]||(Y[ce]=J(ce))}function mo(J){return $i(J)}function Ia(J=""){return(""+J).replace(/[^\x00-\xff]/g,"**").length}function no(J){return J.indexOf("/")===0}function qo(J){return no(J)?J:"/"+J}function si(J){return no(J)?J.slice(1):J}let Pn=(J,Y)=>{let ce;for(let xe=0;xe<J.length;xe++)ce=J[xe](Y);return ce};function cr(J,Y=null){let ce;return(...xe)=>(J&&(ce=J.apply(Y,xe),J=null),ce)}function li(J,Y){J=J||{},b.isString(Y)&&(Y={errMsg:Y}),/:ok$/.test(Y.errMsg)?b.isFunction(J.success)&&J.success(Y):b.isFunction(J.fail)&&J.fail(Y),b.isFunction(J.complete)&&J.complete(Y)}function Kn(J){let Y={};return b.isPlainObject(J)&&Object.keys(J).sort().forEach(ce=>{let xe=ce;Y[xe]=J[xe]}),Object.keys(Y)?Y:J}let Ko=encodeURIComponent;function xo(J,Y=Ko){let ce=J?Object.keys(J).map(xe=>{let lt=J[xe];return typeof lt===void 0||lt===null?lt="":b.isPlainObject(lt)&&(lt=JSON.stringify(lt)),Y(xe)+"="+Y(lt)}).filter(xe=>xe.length>0).join("&"):null;return ce?`?${ce}`:""}function ro(J){try{return decodeURIComponent(""+J)}catch(Y){}return""+J}let io=/\+/g;function qr(J){let Y={};if(J===""||J==="?")return Y;let xe=(J[0]==="?"?J.slice(1):J).split("&");for(let lt=0;lt<xe.length;++lt){let zt=xe[lt].replace(io," "),An=zt.indexOf("="),Xn=ro(An<0?zt:zt.slice(0,An)),Qr=An<0?null:ro(zt.slice(An+1));if(Xn in Y){let Mr=Y[Xn];b.isArray(Mr)||(Mr=Y[Xn]=[Mr]),Mr.push(Qr)}else Y[Xn]=Qr}return Y}function oo(J){let[Y,ce]=J.split("?",2);return{path:Y,query:qr(ce||"")}}function Fn(J){let Y={};return J&&Object.keys(J).forEach(ce=>{ce.indexOf("data-")===0&&(Y[ce.replace("data-","")]=J[ce])}),Y}class wr extends Error{constructor(Y){super(Y);this.name="DOMException"}}function ci(J,Y){return Y&&(Y.capture&&(J+="Capture"),Y.once&&(J+="Once"),Y.passive&&(J+="Passive")),`on${b.capitalize(b.camelize(J))}`}class Jo{constructor(Y,ce){this.defaultPrevented=!1,this.timeStamp=Date.now(),this._stop=!1,this._end=!1,this.type=Y,this.bubbles=!!ce.bubbles,this.cancelable=!!ce.cancelable}preventDefault(){this.defaultPrevented=!0}stopImmediatePropagation(){this._end=this._stop=!0}stopPropagation(){this._stop=!0}}function _o(J){if(J instanceof Jo)return J;let[Y]=On(J.type),ce=new Jo(Y,{bubbles:!1,cancelable:!1});return b.extend(ce,J),ce}class Zo{constructor(){this.listeners=Object.create(null)}dispatchEvent(Y){let ce=this.listeners[Y.type];if(!ce)return!1;let xe=_o(Y),lt=ce.length;for(let zt=0;zt<lt&&(ce[zt].call(this,xe),!xe._end);zt++);return xe.cancelable&&xe.defaultPrevented}addEventListener(Y,ce,xe){Y=ci(Y,xe),(this.listeners[Y]||(this.listeners[Y]=[])).push(ce)}removeEventListener(Y,ce,xe){Y=ci(Y,xe);let lt=this.listeners[Y];if(!lt)return;let zt=lt.indexOf(ce);zt>-1&&lt.splice(zt,1)}}let Kr=/(?:Once|Passive|Capture)$/;function On(J){let Y;if(Kr.test(J)){Y={};let ce;for(;ce=J.match(Kr);)J=J.slice(0,J.length-ce[0].length),Y[ce[0].toLowerCase()]=!0}return[b.hyphenate(J.slice(2)),Y]}let En=(()=>({stop:1,prevent:1<<1,self:1<<2}))();function ui(J){let Y=0;return J.includes("stop")&&(Y|=En.stop),J.includes("prevent")&&(Y|=En.prevent),J.includes("self")&&(Y|=En.self),Y}let Bo=0,Ya=1,Jn=3,Jr=8;function ur(J,Y){let{parentNode:ce}=J;if(!ce)return null;let{childNodes:xe}=ce;return xe[xe.indexOf(J)+(Y==="n"?1:-1)]||null}function Dt(J){let{parentNode:Y}=J;if(Y){let{childNodes:ce}=Y,xe=ce.indexOf(J);xe>-1&&(J.parentNode=null,ce.splice(xe,1))}}function ke(J){!J.nodeId&&J.pageNode&&(J.nodeId=J.pageNode.genId())}class bo extends Zo{constructor(Y,ce,xe){super();if(this.pageNode=null,this.parentNode=null,this._text=null,xe){let{pageNode:lt}=xe;lt&&(this.pageNode=lt,this.nodeId=lt.genId(),!lt.isUnmounted&&lt.onCreate(this,ce))}this.nodeType=Y,this.nodeName=ce,this.childNodes=[]}get firstChild(){return this.childNodes[0]||null}get lastChild(){let{childNodes:Y}=this,ce=Y.length;return ce?Y[ce-1]:null}get nextSibling(){return ur(this,"n")}get nodeValue(){return null}set nodeValue(Y){}get textContent(){return this._text||""}set textContent(Y){this._text=Y,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onTextContent(this,Y)}get parentElement(){let{parentNode:Y}=this;return Y&&Y.nodeType===Ya?Y:null}get previousSibling(){return ur(this,"p")}appendChild(Y){return this.insertBefore(Y,null)}cloneNode(Y){let ce=b.extend(Object.create(Object.getPrototypeOf(this)),this),{attributes:xe}=ce;return xe&&(ce.attributes=b.extend({},xe)),Y&&(ce.childNodes=ce.childNodes.map(lt=>lt.cloneNode(!0))),ce}insertBefore(Y,ce){Dt(Y),Y.pageNode=this.pageNode,Y.parentNode=this,ke(Y);let{childNodes:xe}=this;if(ce){let lt=xe.indexOf(ce);if(lt===-1)throw new wr("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");xe.splice(lt,0,Y)}else xe.push(Y);return this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onInsertBefore(this,Y,ce):Y}removeChild(Y){let{childNodes:ce}=this,xe=ce.indexOf(Y);if(xe===-1)throw new wr("Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.");return Y.parentNode=null,ce.splice(xe,1),this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onRemoveChild(Y):Y}}let yo="class",Eo="style",pa=".vOwnerId",Xo=".vRenderjs";class Hi extends bo{constructor(Y,ce,xe){super(Y,ce,xe);this.attributes=Object.create(null),this.style=null,this.vShow=null,this._html=null}get className(){return this.attributes[yo]||""}set className(Y){this.setAttribute(yo,Y)}get innerHTML(){return""}set innerHTML(Y){this._html=Y}addEventListener(Y,ce,xe){super.addEventListener(Y,ce,xe),this.pageNode&&!this.pageNode.isUnmounted&&(ce.wxsEvent?this.pageNode.onAddWxsEvent(this,ci(Y,xe),ce.wxsEvent,ui(ce.modifiers||[])):this.pageNode.onAddEvent(this,ci(Y,xe),ui(ce.modifiers||[])))}removeEventListener(Y,ce,xe){super.removeEventListener(Y,ce,xe),this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveEvent(this,ci(Y,xe))}getAttribute(Y){return Y===Eo?this.style:this.attributes[Y]}removeAttribute(Y){Y==Eo?this.style=null:delete this.attributes[Y],this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveAttribute(this,Y)}setAttribute(Y,ce){Y===Eo?this.style=ce:this.attributes[Y]=ce,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onSetAttribute(this,Y,ce)}toJSON({attr:Y,normalize:ce}={}){let{attributes:xe,style:lt,listeners:zt,_text:An}=this,Xn={};Object.keys(xe).length&&(Xn.a=ce?ce(xe):xe);let Qr=Object.keys(zt);if(Qr.length){let Mr,co={};Qr.forEach(gr=>{let gi=zt[gr];if(gi.length){let{wxsEvent:uo,modifiers:fo}=gi[0],ra=ui(fo||[]);uo?(Mr||(Mr={}),Mr[gr]=[ce?ce(uo):uo,ra]):co[gr]=ra}}),Xn.e=ce?ce(co,!1):co,Mr&&(Xn.w=ce?ce(Mr,!1):Mr)}return lt!==null&&(Xn.s=ce?ce(lt):lt),Y||(Xn.i=this.nodeId,Xn.n=this.nodeName),An!==null&&(Xn.t=ce?ce(An):An),Xn}}class wo extends bo{constructor(Y,ce){super(Jr,"#comment",ce);this._text=""}toJSON(Y={}){return Y.attr?{}:{i:this.nodeId}}}class Zr extends Hi{constructor(Y,ce){super(Ya,Y.toUpperCase(),ce);this.tagName=this.nodeName}}class fi extends Zr{get value(){return this.getAttribute("value")}set value(Y){this.setAttribute("value",Y)}}class Qo extends fi{}class an extends Hi{constructor(Y,ce){super(Jn,"#text",ce);this._text=Y}get nodeValue(){return this._text||""}set nodeValue(Y){this._text=Y,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onNodeValue(this,Y)}}let So={AD:["data"],"AD-DRAW":["data"],"LIVE-PLAYER":["picture-in-picture-mode"],MAP:["markers","polyline","circles","controls","include-points","polygons"],PICKER:["range","value"],"PICKER-VIEW":["value"],"RICH-TEXT":["nodes"],VIDEO:["danmu-list","header"],"WEB-VIEW":["webview-styles"]},di=["animation"],ga=(J,Y)=>{if(di.indexOf(Y)>-1)return!0;let ce=So[J.nodeName];return!!(ce&&ce.indexOf(Y)>-1)},mn=1,Br=2,fr=3,ea=4,Pa=5,ta=6,ao=7,Zn=8,or=9,Vn=10,Xr=12,hi=15,na=20;function Si(J,Y,{clearTimeout:ce,setTimeout:xe}){let lt,zt=function(){ce(lt),lt=xe(()=>J.apply(this,arguments),Y)};return zt.cancel=function(){ce(lt)},zt}class Ci{constructor(Y,ce){this.id=Y,this.listener={},this.emitCache=[],ce&&Object.keys(ce).forEach(xe=>{this.on(xe,ce[xe])})}emit(Y,...ce){let xe=this.listener[Y];if(!xe)return this.emitCache.push({eventName:Y,args:ce});xe.forEach(lt=>{lt.fn.apply(lt.fn,ce)}),this.listener[Y]=xe.filter(lt=>lt.type!=="once")}on(Y,ce){this._addListener(Y,"on",ce),this._clearCache(Y)}once(Y,ce){this._addListener(Y,"once",ce),this._clearCache(Y)}off(Y,ce){let xe=this.listener[Y];if(!!xe)if(ce)for(let lt=0;lt<xe.length;)xe[lt].fn===ce&&(xe.splice(lt,1),lt--),lt++;else delete this.listener[Y]}_clearCache(Y){for(let ce=0;ce<this.emitCache.length;ce++){let xe=this.emitCache[ce],lt=Y?xe.eventName===Y?Y:null:xe.eventName;if(!lt)continue;if(typeof this.emit.apply(this,[lt,...xe.args])=="number"){this.emitCache.pop();continue}this.emitCache.splice(ce,1),ce--}}_addListener(Y,ce,xe){(this.listener[Y]||(this.listener[Y]=[])).push({fn:xe,type:ce})}}let so=[Nn,qn,_t,K,Vt,Pr,Ke,dt,St,tn,kn,Ln,Zt,yn,Nr,Ur,Fi,lr,Er],va=[qn,_t];function Oi(J){return va.indexOf(J)>-1}function ji(J){return so.indexOf(J)>-1}let dr=[_t,K,re,Dn,fn,Ir,wi,Nn,qn,hn,Vt,xn,Pr,Ke,dt,St,tn,kn,Zt,Ln,yn,Nr,Ur,Fi,lr,Er];function Sr(J,Y,ce=!0){return ce&&!b.isFunction(Y)?!1:dr.indexOf(J)>-1?!0:J.indexOf("on")===0}let lo,Mo=[];function Co(J){if(lo)return J(lo);Mo.push(J)}function Ai(J){lo=J,Mo.forEach(Y=>Y(J))}let pi=cr((J,Y)=>{if(b.isFunction(J._component.onError))return Y(J)}),Do=function(){};Do.prototype={on:function(J,Y,ce){var xe=this.e||(this.e={});return(xe[J]||(xe[J]=[])).push({fn:Y,ctx:ce}),this},once:function(J,Y,ce){var xe=this;function lt(){xe.off(J,lt),Y.apply(ce,arguments)}return lt._=Y,this.on(J,lt,ce)},emit:function(J){var Y=[].slice.call(arguments,1),ce=((this.e||(this.e={}))[J]||[]).slice(),xe=0,lt=ce.length;for(xe;xe<lt;xe++)ce[xe].fn.apply(ce[xe].ctx,Y);return this},off:function(J,Y){var ce=this.e||(this.e={}),xe=ce[J],lt=[];if(xe&&Y)for(var zt=0,An=xe.length;zt<An;zt++)xe[zt].fn!==Y&&xe[zt].fn._!==Y&&lt.push(xe[zt]);return lt.length?ce[J]=lt:delete ce[J],this}};var D=Do;let Z={black:"rgba(0,0,0,0.4)",white:"rgba(255,255,255,0.4)"};function ve(J){return J&&J in Z?Z[J]:J}function le(J){return J==="black"?"#000000":"#ffffff"}function de(J,Y={},ce="light"){let xe=Y[ce],lt={};return xe?(Object.keys(J).forEach(zt=>{let An=J[zt];lt[zt]=(()=>{if(b.isPlainObject(An))return de(An,Y,ce);if(b.isArray(An))return An.map(Xn=>b.isPlainObject(Xn)?de(Xn,Y,ce):Xn);if(b.isString(An)&&An.startsWith("@")){let Xn=An.replace("@",""),Qr=xe[Xn]||An;switch(zt){case"titleColor":Qr=le(Qr);break;case"borderStyle":Qr=ve(Qr);break}return Qr}return An})()}),lt):J}var Ot={invokeArrayFns:Pn,isUniLifecycleHook:Sr,ON_LOAD:qn,ON_SHOW:_t,LINEFEED:T,RENDERJS_MODULES:jn,formatLog:Ta,WXS_PROTOCOL:pe,WXS_MODULES:Nt,UniLifecycleHooks:dr,ON_ERROR:Dn,invokeCreateErrorHandler:pi,invokeCreateVueAppHook:Ai,parseNVueDataset:Fn,once:cr,I18N_JSON_DELIMITERS:m,Emitter:D,normalizeStyles:de,addLeadingSlash:qo,resolveComponentInstance:Rr,removeLeadingSlash:si,ON_RESIZE:xn,ON_APP_ENTER_FOREGROUND:Vi,ON_APP_ENTER_BACKGROUND:Go,ON_HIDE:K,ON_PAGE_SCROLL:Ke,ON_REACH_BOTTOM:St,SCHEME_RE:We,DATA_RE:Pt,cacheStringFunction:mo,parseQuery:qr,callOptions:li,ON_UNHANDLE_REJECTION:wi,ON_PAGE_NOT_FOUND:Ir,PRIMARY_COLOR:R,getLen:Ia,ON_THEME_CHANGE:fn,TABBAR_HEIGHT:C,NAVBAR_HEIGHT:k,sortObject:Kn,OFF_THEME_CHANGE:Jt,ON_KEYBOARD_HEIGHT_CHANGE:cn,normalizeTabBarStyles:ve,ON_NAVIGATION_BAR_BUTTON_TAP:Nr,stringifyQuery:xo,debounce:Si,ON_PULL_DOWN_REFRESH:tn,ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED:Fi,ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED:lr,ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED:Ur,ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED:Er,ON_BACK_PRESS:Pr,UniNode:bo,NODE_TYPE_PAGE:Bo,ACTION_TYPE_PAGE_CREATE:mn,ACTION_TYPE_PAGE_CREATED:Br,ACTION_TYPE_PAGE_SCROLL:hi,ACTION_TYPE_INSERT:ea,ACTION_TYPE_CREATE:fr,ACTION_TYPE_REMOVE:Pa,ACTION_TYPE_ADD_EVENT:Zn,ACTION_TYPE_ADD_WXS_EVENT:Xr,ACTION_TYPE_REMOVE_EVENT:or,ACTION_TYPE_SET_ATTRIBUTE:ta,ACTION_TYPE_REMOVE_ATTRIBUTE:ao,ACTION_TYPE_SET_TEXT:Vn,ON_READY:hn,ON_UNLOAD:Vt,EventChannel:Ci,ON_REACH_BOTTOM_DISTANCE:d,parseUrl:oo,onCreateVueApp:Co,ON_TAB_ITEM_TAP:dt,ON_LAUNCH:re,ACTION_TYPE_EVENT:na,createUniEvent:_o,ON_WXS_INVOKE_CALL_METHOD:Yo,WEB_INVOKE_APPSERVICE:en,isRootHook:ji,isRootImmediateHook:Oi,UniInputElement:fi,UniTextAreaElement:Qo,UniElement:Zr,UniTextNode:an,UniCommentNode:wo,forcePatchProp:ga,JSON_PROTOCOL:O,resolveOwnerEl:Ui,ATTR_V_OWNER_ID:pa,ATTR_V_RENDERJS:Xo};return Ot}(v);return l}var rN=1;function sv(){return(rN++).toString()}var ud=v=>v&&JSON.parse(JSON.stringify(v))||v;function Su(v){let l=Ls(v);return l.substring(8,l.length-1)}function fd(v){if(!Hn(btoa))return"";let l=Array.prototype.map.call(new Uint8Array(v),b=>String.fromCharCode(b)).join("");return btoa(l)}function Cu(v){if(!v||typeof v!="object")return!0;for(let l in v)if(Xl(v,l))return!1;return!0}var cf=["off","error","warn","info","log","debug"],uf={};function lv(){cf.forEach(v=>{let l=cf.indexOf(v);uf[v]={},cf.forEach(b=>{cf.indexOf(b)<=l&&(uf[v][b]=!0)})})}function ir(v){let l=global.WXEnvironment&&global.WXEnvironment.logLevel||"log";return uf[l]&&uf[l][v]}function vo(v){global.nativeLog("wxInteractionAnalyzer: [jsfm]"+v,"__DEBUG")}function cv(v,l,b){return`${l}@${b}#${v}`}var ff=class{constructor(l){this.instanceId=String(l),this.lastCallbackId=0,this.callbacks={},this.hooks={}}add(l){return this.lastCallbackId++,this.callbacks[this.lastCallbackId]=l,this.lastCallbackId}remove(l){let b=this.callbacks[l];return delete this.callbacks[l],b}registerHook(l,b,T,k){let C=cv(l,b,T);this.hooks[C]&&console.warn(`[JS Framework] Override an existing component hook "${C}".`),this.hooks[C]=k}triggerHook(l,b,T,k){let C=cv(l,b,T),d=this.hooks[C];if(!Hn(d))return console.error(`[JS Framework] Invalid hook function type (${typeof d}) on "${C}".`),null;let m=null;try{m=d.apply(null,k||[])}catch(R){throw console.error(`[JS Framework] Failed to execute the hook function on "${C}".`),R}return m}consume(l,b,T){let k=this.callbacks[l];if((typeof T=="undefined"||T===!1)&&delete this.callbacks[l],Hn(k))try{return k.call(null,b,T)}catch(C){throw console.error(`[JS Framework] Failed to execute the callback function:
 ${C.toString()}`),C}return new Error(`invalid callback id "${l}"`)}close(){this.callbacks={},this.hooks={}}};var df={};function uv(v,l){v&&(df[v]=l)}function rl(v){return df[v]}function fv(v){delete df[v]}function Gr(v){if(v){let l=df[v];if(l&&l.taskCenter)return l.taskCenter}return null}function iN(v){v.calcClassList&&v.calcClassList()}function dd(v,l,b){let{documentElement:T}=v;if(T.pureChildren.length>0||l.parentNode)return;let k=T.children,C=b?k.indexOf(b):-1;C<0?k.push(l):k.splice(C,0,l),l.nodeType===1?(l.role==="body"?(l.docId=v.id,l.ownerDocument=v,l.parentNode=T,Ql(l,T)):(l.children.forEach(d=>{d.parentNode=l}),hd(v,l),Ql(l,T),delete v.nodeMap[l.nodeId]),T.pureChildren.push(l),oN(v,l)):(l.parentNode=T,v.nodeMap[l.ref]=l)}function oN(v,l){let b=l.toJSON();v&&v.taskCenter&&Hn(v.taskCenter.send)&&v.taskCenter.send("dom",{action:"createBody"},[b])}function hd(v,l){l.role="body",l.depth=1,delete v.nodeMap[l.nodeId],l.ref="_root",v.nodeMap._root=l,v.body=l}function Ql(v,l){v.parentNode=l,iN(v),l.docId&&(v.docId=l.docId,v.ownerDocument=l.ownerDocument,v.ownerDocument.nodeMap[v.nodeId]=v,v.depth=l.depth+1),v.children.forEach(b=>{Ql(b,v)})}function pd(v){for(;v;){if(v.nodeType===1)return v;v=v.nextSibling}}function gd(v){for(;v;){if(v.nodeType===1)return v;v=v.previousSibling}}function ec(v,l,b,T=!1){b<0&&(b=0);let k=l[b-1],C=l[b];return l.splice(b,0,v),T&&(k&&(k.nextSibling=v),v.previousSibling=k,v.nextSibling=C,C&&(C.previousSibling=v)),b}function tc(v,l,b,T=!1){let k=l.indexOf(v);if(k<0)return-1;if(T){let R=l[k-1],We=l[k+1];R&&(R.nextSibling=We),We&&(We.previousSibling=R)}l.splice(k,1);let C=b;k<=b&&(C=b-1);let d=l[C-1],m=l[C];return l.splice(C,0,v),T&&(d&&(d.nextSibling=v),v.previousSibling=d,v.nextSibling=m,m&&(m.previousSibling=v)),k===C?-1:b}function vd(v,l,b=!1){let T=l.indexOf(v);if(!(T<0)){if(b){let k=l[T-1],C=l[T+1];k&&(k.nextSibling=C),C&&(C.previousSibling=k)}l.splice(T,1)}}var nc=class{constructor(){this.depth=0;this.nodeId=sv(),this.ref=this.nodeId,this.children=[],this.pureChildren=[],this.parentNode=null,this.nextSibling=null,this.previousSibling=null}destroy(){let l=rl(this.docId);l&&(delete this.docId,delete l.nodeMap[this.nodeId]),this.children.forEach(b=>{b.destroy()})}};var dv={};function md(v,l){if(!to(l)||!l.length)return;class b extends Ro{}l.forEach(T=>{b.prototype[T]=function(...k){let C=Gr(this.docId);if(C)return C.send("component",{ref:this.ref,component:v,method:T},k)}}),dv[v]=b}function hv(v){return dv[v]}function Vr(v,l,b,T,k){let C={type:"decl",prop:v,value:l.toString(),raws:T,source:k};return b&&(C.important=!0),C}var aN="backgroundColor",sN="backgroundImage",lN=v=>{let{value:l,important:b,raws:T,source:k}=v;return/^#?\S+$/.test(l)||/^rgba?(.+)$/.test(l)?[Vr(aN,l,b,T,k)]:/^linear-gradient(.+)$/.test(l)?[Vr(sN,l,b,T,k)]:[v]},cN="Width",uN="Style",fN="Color",Ou=v=>{let{prop:l,value:b,important:T,raws:k,source:C}=v,d=b.replace(/\s*,\s*/g,",").split(/\s+/),m=[/^[\d\.]+\S*$/,/^(solid|dashed|dotted)$/,/\S+/].map(R=>{let We=d.findIndex(Pt=>R.test(Pt));return We<0?null:d.splice(We,1)[0]});return d.length?[v]:[Vr(l+cN,(m[0]||"0").trim(),T,k,C),Vr(l+uN,(m[1]||"solid").trim(),T,k,C),Vr(l+fN,(m[2]||"#000000").trim(),T,k,C)]},dN="borderTop",hN="borderRight",pN="borderBottom",gN="borderLeft",_d=v=>{let{prop:l,value:b,important:T,raws:k,source:C}=v,d=cd(l).split("-")[1];d=lf(d);let m=b.replace(/\s*,\s*/g,",").split(/\s+/);switch(m.length){case 1:return[v];case 2:m.push(m[0],m[1]);break;case 3:m.push(m[1]);break}return[Vr(dN+d,m[0],T,k,C),Vr(hN+d,m[1],T,k,C),Vr(pN+d,m[2],T,k,C),Vr(gN+d,m[3],T,k,C)]},vN="borderTopLeftRadius",mN="borderTopRightRadius",_N="borderBottomRightRadius",bN="borderBottomLeftRadius",yN=v=>{let{value:l,important:b,raws:T,source:k}=v,C=l.split(/\s+/);if(l.includes("/"))return[v];switch(C.length){case 1:return[v];case 2:C.push(C[0],C[1]);break;case 3:C.push(C[1]);break}return[Vr(vN,C[0],b,T,k),Vr(mN,C[1],b,T,k),Vr(_N,C[2],b,T,k),Vr(bN,C[3],b,T,k)]},EN=_d,wN=_d,SN="flexDirection",CN="flexWrap",ON=v=>{let{value:l,important:b,raws:T,source:k}=v,C=l.split(/\s+/),d=[/^(column|column-reverse|row|row-reverse)$/,/^(nowrap|wrap|wrap-reverse)$/].map(m=>{let R=C.findIndex(We=>m.test(We));return R<0?null:C.splice(R,1)[0]});return C.length?[v]:[Vr(SN,d[0]||"column",b,T,k),Vr(CN,d[1]||"nowrap",b,T,k)]},AN="Top",TN="Right",IN="Bottom",PN="Left",pv=v=>l=>{let{value:b,important:T,raws:k,source:C}=l,d=b.split(/\s+/);switch(d.length){case 1:d.push(d[0],d[0],d[0]);break;case 2:d.push(d[0],d[1]);break;case 3:d.push(d[1]);break}return[Vr(v+AN,d[0],T,k,C),Vr(v+TN,d[1],T,k,C),Vr(v+IN,d[2],T,k,C),Vr(v+PN,d[3],T,k,C)]},NN=pv("margin"),kN=pv("padding"),RN="transitionProperty",xN="transitionDuration",BN="transitionTimingFunction",MN="transitionDelay",DN=v=>{let l=/^(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?\s*(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?$/,{value:b,important:T,raws:k,source:C}=v,d=[],m=b.match(l);return m&&(m[1]&&d.push(Vr(RN,m[1],T,k,C)),m[2]&&d.push(Vr(xN,m[2],T,k,C)),m[3]&&d.push(Vr(BN,m[3],T,k,C)),m[4]&&d.push(Vr(MN,m[4],T,k,C))),d},gv={transition:DN,margin:NN,padding:kN,border:Ou,background:lN};Di(gv,{borderTop:Ou,borderRight:Ou,borderBottom:Ou,borderLeft:Ou,borderStyle:EN,borderWidth:wN,borderColor:_d,borderRadius:yN,flexFlow:ON});var vv=Symbol("expanded"),mv={postcssPlugin:"nvue:expand",Declaration(v){if(v[vv])return;let l=gv[v.prop];if(l){let b=l(v);b.length===1&&b[0]===v||v.replaceWith(b)}v[vv]=!0}};var LN=mv.Declaration;function bd(v,l){let b=Di({replaceWith(k){T=k}},FN(v,l)),T=[b];return LN(b),T}function FN(v,l){let b=l+"";return b.includes("!important")?{prop:v,value:b.replace(/\s*!important/,""),important:!0}:{prop:v,value:b,important:!1}}var VN="view",UN=["click","longpress","touchstart","touchmove","touchend","panstart","panmove","panend","horizontalpan","verticalpan","swipe"];function yd(v,l){let b=rl(v);b.nodeMap[l.nodeId]=l}var Ed;function _v(v){Ed||(Ed=v)}var Ro=class extends nc{constructor(l=VN,b={},T){super();let k=hv(l);if(k&&!T)return new k(l,b,!0);this.nodeType=1,this.type=l,this.attr=b.attr||{},this.style=b.style||{},this.classStyle=b.classStyle||{},this.classList=b.classList||[],this.styleSheet=b.styleSheet||{},this.event={}}appendChild(l){if(!(l.parentNode&&l.parentNode!==this)){if(l.parentNode){if(ir("debug")&&vo(`[appendChild](${this.docId},${l.type},${l.ref}) Move <${l.type}> to ${this.children.length} of <${this.type}> (${this.ref}).`),tc(l,this.children,this.children.length,!0),l.nodeType===1){let b=tc(l,this.pureChildren,this.pureChildren.length),T=Gr(this.docId);if(T&&b>=0)return T.send("dom",{action:"moveElement"},[l.ref,this.ref,b])}}else if(ir("debug")&&vo(`[appendChild](${this.docId},${l.type},${l.ref}) Append <${l.type}> to <${this.type}> (${this.ref}).`),Ql(l,this),ec(l,this.children,this.children.length,!0),this.docId&&yd(this.docId,l),l.nodeType===1){ec(l,this.pureChildren,this.pureChildren.length);let b=Gr(this.docId);if(b)return b.send("dom",{action:"addElement"},[this.ref,l.toJSON(),-1])}}}insertBefore(l,b){if(!(l.parentNode&&l.parentNode!==this)&&!(l===b||l.nextSibling&&l.nextSibling===b)){if(l.parentNode){if(tc(l,this.children,this.children.indexOf(b),!0),l.nodeType===1){let T=pd(b),k=tc(l,this.pureChildren,T?this.pureChildren.indexOf(T):this.pureChildren.length),C=Gr(this.docId);if(C&&k>=0)return C.send("dom",{action:"moveElement"},[l.ref,this.ref,k])}}else if(ir("debug")&&vo(`[insertBefore](${this.docId},${l.type},${l.ref}) Insert <${l.type}> to <${this.type}> (${this.ref}), before (${b.ref}).`),Ql(l,this),ec(l,this.children,this.children.indexOf(b),!0),this.docId&&yd(this.docId,l),l.nodeType===1){let T=pd(b),k=ec(l,this.pureChildren,T?this.pureChildren.indexOf(T):this.pureChildren.length),C=Gr(this.docId);if(C)return C.send("dom",{action:"addElement"},[this.ref,l.toJSON(),k])}}}insertAfter(l,b){if(!(l.parentNode&&l.parentNode!==this)&&!(l===b||l.previousSibling&&l.previousSibling===b)){if(l.parentNode){if(tc(l,this.children,this.children.indexOf(b)+1,!0),l.nodeType===1){let T=tc(l,this.pureChildren,this.pureChildren.indexOf(gd(b))+1),k=Gr(this.docId);if(k&&T>=0)return k.send("dom",{action:"moveElement"},[l.ref,this.ref,T])}}else if(ir("debug")&&vo(`[insertAfter](${this.docId},${l.type},${l.ref}) Insert <${l.type}> to <${this.type}> (${this.ref}), after (${b.ref}).`),Ql(l,this),ec(l,this.children,this.children.indexOf(b)+1,!0),this.docId&&yd(this.docId,l),l.nodeType===1){let T=ec(l,this.pureChildren,this.pureChildren.indexOf(gd(b))+1),k=Gr(this.docId);if(k)return k.send("dom",{action:"addElement"},[this.ref,l.toJSON(),T])}}}removeChild(l,b){if(l.parentNode&&(vd(l,this.children,!0),l.nodeType===1)){ir("debug")&&vo(`[removeChild](${this.docId},${l.type},${l.ref}) Remove <${l.type}> from <${this.type}> (${this.ref}).`),vd(l,this.pureChildren);let T=Gr(this.docId);T&&T.send("dom",{action:"removeElement"},[l.ref])}b||l.destroy()}clear(){let l=Gr(this.docId);l&&this.pureChildren.forEach(b=>{l.send("dom",{action:"removeElement"},[b.ref])}),this.children.forEach(b=>{b.destroy()}),this.children.length=0,this.pureChildren.length=0}setAttr(l,b,T){if(this.attr[l]===b&&T!==!1)return;this.attr[l]=b;let k=Gr(this.docId);!T&&k&&k.send("dom",{action:"updateAttrs"},[this.ref,{[l]:b}])}setAttrs(l,b){if(Cu(l))return;let T={};for(let k in l)this.attr[k]!==l[k]&&(this.attr[k]=l[k],T[k]=l[k]);if(!Cu(T)){let k=Gr(this.docId);!b&&k&&k.send("dom",{action:"updateAttrs"},[this.ref,T])}}setStyle(l,b,T){bd(l,b).forEach(({prop:k,value:C})=>{if(this.style[k]===C&&T!==!1)return;this.style[k]=C;let d=Gr(this.docId);!T&&d&&d.send("dom",{action:"updateStyle"},[this.ref,{[k]:C===""&&k in this.classStyle?this.classStyle[k]:C}])})}setStyles(l,b){if(Cu(l))return;let T={};for(let k in l)bd(k,l[k]).forEach(({prop:C,value:d})=>{this.style[C]!==d&&(this.style[C]=d,T[C]=d===""&&C in this.classStyle?this.classStyle[C]:d)});if(!Cu(T)){let k=Gr(this.docId);!b&&k&&k.send("dom",{action:"updateStyle"},[this.ref,T])}}setClassStyle(l){for(let T in this.classStyle)this.classStyle[T]="";Di(this.classStyle,l);let b=Gr(this.docId);b&&b.send("dom",{action:"updateStyle"},[this.ref,this.toStyle()])}setClassList(l){l.length===this.classList.length&&l.filter(b=>!this.classList.includes(b)).length===0||(this.classList=l,this.parentNode&&this.calcClassList())}calcClassList(){this.setClassStyle(Ed(this))}setStyleSheet(l){this.styleSheet=l}addEvent(l,b,T){if(this.event||(this.event={}),!this.event[l]){ir("debug")&&vo(`[addEvent](${this.docId},${this.type},${this.ref}) Add "${l}" event on <${this.type}> (${this.ref}).`),this.event[l]={handler:b,params:T};let k=Gr(this.docId);k&&k.send("dom",{action:"addEvent"},[this.ref,l])}}removeEvent(l){if(this.event&&this.event[l]){ir("debug")&&vo(`[removeEvent](${this.docId},${this.type},${this.ref}) Remove "${l}" event on <${this.type}> (${this.ref}).`),delete this.event[l];let b=Gr(this.docId);b&&b.send("dom",{action:"removeEvent"},[this.ref,l])}}fireEvent(l,b,T,k){let C=null,d=!1,m=this.event[l];if(m&&b){ir("debug")&&vo(`[fireEvent](${this.docId},${this.type},${this.ref}) Fire "${l}" event on <${this.type}> (${this.ref}).`);let R=m.handler;b.stopPropagation=()=>{d=!0},b.preventDefault=()=>{};try{k&&k.params?C=R.call(this,...k.params,b):C=R.call(this,b)}catch(We){throw console.error(`[JS Framework] Failed to invoke the event handler of "${l}" on ${this.type} (${this.ref}):
 ${We.toString()}`),We}}return!d&&T&&UN.indexOf(l)!==-1&&this.parentNode&&this.parentNode.fireEvent&&(b.currentTarget=this.parentNode,this.parentNode.fireEvent(l,b,T)),C}toStyle(){let l=Object.assign({},this.classStyle),b=this.style;for(let T in b){let k=b[T];l[T]=k===""&&T in this.classStyle?this.classStyle[T]:k}return l}toJSON(l=!1){let b={ref:this.ref.toString(),type:this.type,attr:this.attr,style:this.toStyle()},T=[];for(let k in this.event){let{params:C}=this.event[k];C?T.push({type:k,params:C}):T.push(k)}return T.length&&(b.event=T),!l&&this.pureChildren.length&&(b.children=this.pureChildren.map(k=>k.toJSON())),b}toString(){return"<"+this.type+" attr="+JSON.stringify(this.attr)+" style="+JSON.stringify(this.toStyle())+">"+this.pureChildren.map(l=>l.toString()).join("")+"</"+this.type+">"}};function bv(v){let l=v&&v.__v_raw;return l?bv(l):v}function yv(v){let l=Su(v);switch(l){case"Undefined":case"Null":return"";case"RegExp":return v.toString();case"Date":return v.toISOString();case"Number":case"String":case"Boolean":case"Array":case"Object":return bv(v);case"ArrayBuffer":return{"@type":"binary",dataType:l,base64:fd(v)};case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":return{"@type":"binary",dataType:l,base64:fd(v.buffer)};default:return JSON.stringify(v)}}var hf=function(){},$c=class{constructor(l,b){Object.defineProperty(this,"instanceId",{enumerable:!0,value:String(l)}),Object.defineProperty(this,"callbackManager",{enumerable:!0,value:new ff(l)}),hf=b||function(){}}callback(l,b,T){return this.callbackManager.consume(l,b,T)}registerHook(l,b,T,k){return this.callbackManager.registerHook(l,b,T,k)}triggerHook(l,b,T,k){return this.callbackManager.triggerHook(l,b,T,k)}updateData(l,b,T){this.send("module",{module:"dom",method:"updateComponentData"},[l,b,T])}destroyCallback(){return this.callbackManager.close()}normalize(l,b=!1){let T=Su(l);if(l&&l instanceof Ro)return l.ref;if(l&&l.$el instanceof Ro)return l.$el.ref;if(T==="Function")return this.callbackManager.add(l).toString();if(b){if(T==="Object"){let k={};for(let C in l)k[C]=this.normalize(l[C],!0);return k}if(T==="Array")return l.map(k=>this.normalize(k,!0))}return l&&l.ref&&l["[[VirtualElement]]"]?l.ref:yv(l)}send(l,b,T,k){let{action:C,component:d,ref:m,module:R,method:We}=b;switch(T=T.map(Pt=>this.normalize(Pt,l!=="module")),Su(k)==="Object"&&(k=this.normalize(k,!0)),l){case"dom":return ir("debug")&&vo(`[task](${this.instanceId},${l},${C}) ${JSON.stringify(T)}`),this[C](this.instanceId,T);case"component":return this.componentHandler(this.instanceId,m,We,T,Di({component:d},k));default:return ir("debug")&&vo(`[task](${this.instanceId},${R},${We}) ${JSON.stringify(T)}`),this.moduleHandler(this.instanceId,R,We,T,k)}}callDOM(l,b){return this[l](this.instanceId,b)}callComponent(l,b,T,k){return this.componentHandler(this.instanceId,l,b,T,k)}callModule(l,b,T,k){return this.moduleHandler(this.instanceId,l,b,T,k)}};function Ev(){let v={createFinish:global.callCreateFinish,updateFinish:global.callUpdateFinish,refreshFinish:global.callRefreshFinish,createBody:global.callCreateBody,addElement:global.callAddElement,removeElement:global.callRemoveElement,moveElement:global.callMoveElement,updateAttrs:global.callUpdateAttrs,updateStyle:global.callUpdateStyle,addEvent:global.callAddEvent,removeEvent:global.callRemoveEvent,__updateComponentData:global.__updateComponentData},l=$c.prototype;for(let b in v){let T=v[b];l[b]=T?(k,C)=>T(k,...C):(k,C)=>hf(k,[{module:"dom",method:b,args:C}],"-1")}l.componentHandler=global.callNativeComponent||((b,T,k,C,d)=>hf(b,[{component:d.component,ref:T,method:k,args:C}])),l.moduleHandler=global.callNativeModule||((b,T,k,C)=>hf(b,[{module:T,method:k,args:C}]))}function $N(v,l,b,T,k,C){let d=v.getRef(l);if(d)return v.fireEvent(d,b,T,k,C);if(T)return T._nodeId=l,v.fireEvent(v.getRef("_documentElement"),b,T,k,C)}function HN(v,l,b,T){return v.taskCenter.callback(l,b,T)}function jN(v,l,b,T,k){if(!v||!v.taskCenter)return console.error(`[JS Framework] Can't find "document" or "taskCenter".`),null;let C=null;try{C=v.taskCenter.triggerHook(l,b,T,k)}catch(d){throw console.error(`[JS Framework] Failed to trigger the "${b}@${T}" hook on ${l}.`),d}return C}function wd(v,l){let b=rl(v);if(!b)return new Error(`[JS Framework] Failed to receiveTasks, instance (${v}) is not available.`);if(to(l))return l.map(T=>{switch(T.method){case"callback":return HN(b,...T.args);case"fireEventSync":case"fireEvent":return $N(b,...T.args);case"componentHook":return jN(b,...T.args)}})}var Tl={};function wv(v={}){for(let l in v)Xl(Tl,l)||(Tl[l]={}),!!to(v[l])&&v[l].forEach(b=>{Li(b)?Tl[l][b]=!0:Uc(b)&&Li(b.name)&&(Tl[l][b.name]=b.args||[])})}function pf(v,l){return Li(l)?!!(Tl[v]&&Tl[v][l]):!!Tl[v]}function Sv(v){return Tl[v]}var Sd={};function Cv(v){!to(v)||v.forEach(l=>{!l||(Li(l)?Sd[l]=!0:Uc(l)&&Li(l.type)&&(Sd[l.type]=l,md(l.type,l.methods)))})}function Cd(v){return!!Sd[v]}var Il=[];function gf(v,l){Od(v)?console.warn(`Service "${v}" has been registered already!`):(l=Di({},l),Il.push({name:v,options:l}))}function vf(v){Il.some((l,b)=>{if(l.name===v)return Il.splice(b,1),!0})}function Od(v){return zN(v)>=0}function zN(v){return Il.map(l=>l.name).indexOf(v)}function WN(v){return l=>{let b=of(v,l),{createApp:T}=b;b.createVueApp=b.createApp=(k,C)=>T(k,C).use(GN,l),l.Vue=b}}var GN={install(v,l){YN(v,l),Eu(l).initApp(v)}};function YN(v,l){let{mount:b}=v;v.mount=T=>{let k=b(T);return T==="#app"&&l.__registerApp(k),k}}function qN(v){let{UniShared:l,VueShared:b,VueReactivity:T}=v;var k=function(C,d,m,R){"use strict";var We=[];function Pt(i){We.push(i)}function en(){We.pop()}function pe(i){m.pauseTracking();for(var a=We.length?We[We.length-1].component:null,f=a&&a.appContext.config.warnHandler,p=O(),S=arguments.length,w=new Array(S>1?S-1:0),N=1;N<S;N++)w[N-1]=arguments[N];if(f)fn(f,a,11,[i+w.join(""),a&&a.proxy,p.map(F=>{var{vnode:q}=F;return"at <".concat(ks(a,q.type),">")}).join(`
`),p]);else{var V=["[Vue warn]: ".concat(i),...w];p.length&&V.push(`
`,...Nt(p)),console.warn(...V)}m.resetTracking()}function O(){var i=We[We.length-1];if(!i)return[];for(var a=[];i;){var f=a[0];f&&f.vnode===i?f.recurseCount++:a.push({vnode:i,recurseCount:0});var p=i.component&&i.component.parent;i=p&&p.vnode}return a}function Nt(i){var a=[];return i.forEach((f,p)=>{a.push(...p===0?[]:[`
`],...jn(f))}),a}function jn(i){var{vnode:a,recurseCount:f}=i,p=f>0?"... (".concat(f," recursive calls)"):"",S=a.component?a.component.parent==null:!1,w=" at <".concat(ks(a.component,a.type,S)),N=">"+p;return a.props?[w,..._t(a.props),N]:[w+N]}function _t(i){var a=[],f=Object.keys(i);return f.slice(0,3).forEach(p=>{a.push(...K(p,i[p]))}),f.length>3&&a.push(" ..."),a}function K(i,a,f){return d.isString(a)?(a=JSON.stringify(a),f?a:["".concat(i,"=").concat(a)]):typeof a=="number"||typeof a=="boolean"||a==null?f?a:["".concat(i,"=").concat(a)]:m.isRef(a)?(a=K(i,m.toRaw(a.value),!0),f?a:["".concat(i,"=Ref<"),a,">"]):d.isFunction(a)?["".concat(i,"=fn").concat(a.name?"<".concat(a.name,">"):"")]:(a=m.toRaw(a),f?a:["".concat(i,"="),a])}function re(i,a){i!==void 0&&(typeof i!="number"?pe("".concat(a," is not a valid number - ")+"got ".concat(JSON.stringify(i),".")):isNaN(i)&&pe("".concat(a," is NaN - ")+"the duration expression might be incorrect."))}var Dn={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",[0]:"setup function",[1]:"render function",[2]:"watcher getter",[3]:"watcher callback",[4]:"watcher cleanup function",[5]:"native event handler",[6]:"component event handler",[7]:"vnode hook",[8]:"directive hook",[9]:"transition hook",[10]:"app errorHandler",[11]:"app warnHandler",[12]:"ref function",[13]:"async component loader",[14]:"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core"};function fn(i,a,f,p){var S;try{S=p?i(...p):i()}catch(w){cn(w,a,f)}return S}function Jt(i,a,f,p){if(d.isFunction(i)){var S=fn(i,a,f,p);return S&&d.isPromise(S)&&S.catch(V=>{cn(V,a,f)}),S}for(var w=[],N=0;N<i.length;N++)w.push(Jt(i[N],a,f,p));return w}function cn(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,S=a?a.vnode:null;if(a){for(var w=a.parent,N=a.proxy,V=Dn[f]||f;w;){var F=w.ec;if(F){for(var q=0;q<F.length;q++)if(F[q](i,N,V)===!1)return}w=w.parent}var be=a.appContext.config.errorHandler;if(be){fn(be,null,10,[i,N,V]);return}}Ir(i,f,S,p)}function Ir(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;{var S=Dn[a]||a;f&&Pt(f),pe("Unhandled error".concat(S?" during execution of ".concat(S):"")),f&&en(),console.error(i)}}var wi=!1,qn=!1,hn=[],Vt=0,Nn=[],yn=null,xn=0,Pr={then(i){setTimeout(()=>i(),0)}},Ke=C.platform==="iOS",dt=Ke?Pr:Promise.resolve(),St=null,tn=100;function kn(i){var a=St||dt;return i?a.then(this?i.bind(this):i):a}function Zt(i){for(var a=Vt+1,f=hn.length;a<f;){var p=a+f>>>1,S=Vi(hn[p]);S<i?a=p+1:f=p}return a}function Ln(i){(!hn.length||!hn.includes(i,wi&&i.allowRecurse?Vt+1:Vt))&&(i.id==null?hn.push(i):hn.splice(Zt(i.id),0,i),Nr())}function Nr(){!wi&&!qn&&(qn=!0,St=dt.then(Yo))}function Ur(i){var a=hn.indexOf(i);a>Vt&&hn.splice(a,1)}function Fi(i){d.isArray(i)?Nn.push(...i):(!yn||!yn.includes(i,i.allowRecurse?xn+1:xn))&&Nn.push(i),Nr()}function lr(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:wi?Vt+1:0;for(i=i||new Map;a<hn.length;a++){var f=hn[a];if(f&&f.pre){if(kr(i,f))continue;hn.splice(a,1),a--,f()}}}function Er(i){if(Nn.length){var a=[...new Set(Nn)];if(Nn.length=0,yn){yn.push(...a);return}for(yn=a,i=i||new Map,yn.sort((f,p)=>Vi(f)-Vi(p)),xn=0;xn<yn.length;xn++)kr(i,yn[xn])||yn[xn]();yn=null,xn=0}}var Vi=i=>i.id==null?1/0:i.id,Go=(i,a)=>{var f=Vi(i)-Vi(a);if(f===0){if(i.pre&&!a.pre)return-1;if(a.pre&&!i.pre)return 1}return f};function Yo(i){qn=!1,wi=!0,i=i||new Map,hn.sort(Go);var a=p=>kr(i,p);try{for(Vt=0;Vt<hn.length;Vt++){var f=hn[Vt];if(f&&f.active!==!1){if(a(f))continue;fn(f,null,14)}}}finally{Vt=0,hn.length=0,Er(i),wi=!1,St=null,(hn.length||Nn.length)&&Yo(i)}}function kr(i,a){if(!i.has(a))i.set(a,1);else{var f=i.get(a);if(f>tn){var p=a.ownerInstance,S=p&&Sa(p.type);return pe("Maximum recursive updates exceeded".concat(S?" in component <".concat(S,">"):"",". ")+"This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function."),!0}else i.set(a,f+1)}}var Rr=!1,xr=new Set;d.getGlobalThis().__VUE_HMR_RUNTIME__={createRecord:si($i),rerender:si(Ia),reload:si(no)};var Ui=new Map;function Yr(i){var a=i.type.__hmrId,f=Ui.get(a);f||($i(a,i.type),f=Ui.get(a)),f.instances.add(i)}function Ta(i){Ui.get(i.type.__hmrId).instances.delete(i)}function $i(i,a){return Ui.has(i)?!1:(Ui.set(i,{initialDef:mo(a),instances:new Set}),!0)}function mo(i){return Ll(i)?i.__vccOpts:i}function Ia(i,a){var f=Ui.get(i);!f||(f.initialDef.render=a,[...f.instances].forEach(p=>{a&&(p.render=a,mo(p.type).render=a),p.renderCache=[],Rr=!0,p.update(),Rr=!1}))}function no(i,a){var f=Ui.get(i);if(!!f){a=mo(a),qo(f.initialDef,a);var p=[...f.instances];for(var S of p){var w=mo(S.type);xr.has(w)||(w!==f.initialDef&&qo(w,a),xr.add(w)),S.appContext.optionsCache.delete(S.type),S.ceReload?(xr.add(w),S.ceReload(a.styles),xr.delete(w)):S.parent?Ln(S.parent.update):S.appContext.reload?S.appContext.reload():typeof window!="undefined"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required.")}Fi(()=>{for(var N of p)xr.delete(mo(N.type))})}}function qo(i,a){d.extend(i,a);for(var f in i)f!=="__file"&&!(f in a)&&delete i[f]}function si(i){return(a,f)=>{try{return i(a,f)}catch(p){console.error(p),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}C.devtools=void 0;var Pn=[],cr=!1;function li(i){for(var a=arguments.length,f=new Array(a>1?a-1:0),p=1;p<a;p++)f[p-1]=arguments[p];C.devtools?C.devtools.emit(i,...f):cr||Pn.push({event:i,args:f})}function Kn(i,a){var f,p;if(C.devtools=i,C.devtools)C.devtools.enabled=!0,Pn.forEach(w=>{var{event:N,args:V}=w;return C.devtools.emit(N,...V)}),Pn=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((p=(f=window.navigator)===null||f===void 0?void 0:f.userAgent)===null||p===void 0?void 0:p.includes("jsdom"))){var S=a.__VUE_DEVTOOLS_HOOK_REPLAY__=a.__VUE_DEVTOOLS_HOOK_REPLAY__||[];S.push(w=>{Kn(w,a)}),setTimeout(()=>{C.devtools||(a.__VUE_DEVTOOLS_HOOK_REPLAY__=null,cr=!0,Pn=[])},3e3)}else cr=!0,Pn=[]}function Ko(i,a){li("app:init",i,a,{Fragment:ut,Text:xt,Comment:Yt,Static:Wn})}function xo(i){li("app:unmount",i)}var ro=Fn("component:added"),io=Fn("component:updated"),qr=Fn("component:removed"),oo=i=>{C.devtools&&typeof C.devtools.cleanupBuffer=="function"&&!C.devtools.cleanupBuffer(i)&&qr(i)};function Fn(i){return a=>{li(i,a.appContext.app,a.uid,a.parent?a.parent.uid:void 0,a)}}var wr=Jo("perf:start"),ci=Jo("perf:end");function Jo(i){return(a,f,p)=>{li(i,a.appContext.app,a.uid,a,f,p)}}function _o(i,a,f){li("component:emit",i.appContext.app,i,a,f)}function Zo(i,a){if(!i.isUnmounted){for(var f=i.vnode.props||d.EMPTY_OBJ,p=arguments.length,S=new Array(p>2?p-2:0),w=2;w<p;w++)S[w-2]=arguments[w];{var{emitsOptions:N,propsOptions:[V]}=i;if(N)if(!(a in N))(!V||!(d.toHandlerKey(a)in V))&&pe('Component emitted event "'.concat(a,'" but it is neither declared in ')+'the emits option nor as an "'.concat(d.toHandlerKey(a),'" prop.'));else{var F=N[a];if(d.isFunction(F)){var q=F(...S);q||pe('Invalid event arguments: event validation failed for event "'.concat(a,'".'))}}}var be=S,ae=a.startsWith("update:"),ne=ae&&a.slice(7);if(ne&&ne in f){var Ae="".concat(ne==="modelValue"?"model":ne,"Modifiers"),{number:De,trim:Xe}=f[Ae]||d.EMPTY_OBJ;Xe&&(be=S.map(Le=>d.isString(Le)?Le.trim():Le)),De&&(be=S.map(d.looseToNumber))}_o(i,a,be);{var ft=a.toLowerCase();ft!==a&&f[d.toHandlerKey(ft)]&&pe('Event "'.concat(ft,'" is emitted in component ')+"".concat(ks(i,i.type),' but the handler is registered for "').concat(a,'". ')+"Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. "+'You should probably use "'.concat(d.hyphenate(a),'" instead of "').concat(a,'".'))}var Te,se=f[Te=d.toHandlerKey(a)]||f[Te=d.toHandlerKey(d.camelize(a))];!se&&ae&&(se=f[Te=d.toHandlerKey(d.hyphenate(a))]),se&&Jt(se,i,6,be);var Ee=f[Te+"Once"];if(Ee){if(!i.emitted)i.emitted={};else if(i.emitted[Te])return;i.emitted[Te]=!0,Jt(Ee,i,6,be)}}}function Kr(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=a.emitsCache,S=p.get(i);if(S!==void 0)return S;var w=i.emits,N={},V=!1;if(!d.isFunction(i)){var F=q=>{var be=Kr(q,a,!0);be&&(V=!0,d.extend(N,be))};!f&&a.mixins.length&&a.mixins.forEach(F),i.extends&&F(i.extends),i.mixins&&i.mixins.forEach(F)}return!w&&!V?(d.isObject(i)&&p.set(i,null),null):(d.isArray(w)?w.forEach(q=>N[q]=null):d.extend(N,w),d.isObject(i)&&p.set(i,N),N)}function On(i,a){return!i||!d.isOn(a)?!1:(a=a.slice(2).replace(/Once$/,""),d.hasOwn(i,a[0].toLowerCase()+a.slice(1))||d.hasOwn(i,d.hyphenate(a))||d.hasOwn(i,a))}var En=null,ui=null;function Bo(i){var a=En;return En=i,ui=i&&i.type.__scopeId||null,a}function Ya(i){ui=i}function Jn(){ui=null}var Jr=i=>ur;function ur(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:En;if(!a||i._n)return i;var f=function(){f._d&&Ws(-1);var p=Bo(a),S;try{S=i(...arguments)}finally{Bo(p),f._d&&Ws(1)}return io(a),S};return f._n=!0,f._c=!0,f._d=!0,f}var Dt=!1;function ke(){Dt=!0}function bo(i){var{type:a,vnode:f,proxy:p,withProxy:S,props:w,propsOptions:[N],slots:V,attrs:F,emit:q,render:be,renderCache:ae,data:ne,setupState:Ae,ctx:De,inheritAttrs:Xe}=i,ft,Te,se=Bo(i);Dt=!1;try{if(f.shapeFlag&4){var Ee=S||p;ft=mr(be.call(Ee,Ee,ae,w,Ae,ne,De)),Te=F}else{var Le=a;F===w&&ke(),ft=mr(Le.length>1?Le(w,{get attrs(){return ke(),F},slots:V,emit:q}):Le(w,null)),Te=a.props?F:pa(F)}}catch(et){Mn.length=0,cn(et,i,1),ft=$n(Yt)}var Fe=ft,it=void 0;if(ft.patchFlag>0&&ft.patchFlag&2048&&([Fe,it]=yo(ft)),Te&&Xe!==!1){var Tt=Object.keys(Te),{shapeFlag:Qe}=Fe;if(Tt.length){if(Qe&(1|6))N&&Tt.some(d.isModelListener)&&(Te=Xo(Te,N)),Fe=Ki(Fe,Te);else if(!Dt&&Fe.type!==Yt){for(var B=Object.keys(F),j=[],ie=[],ye=0,oe=B.length;ye<oe;ye++){var ge=B[ye];d.isOn(ge)?d.isModelListener(ge)||j.push(ge[2].toLowerCase()+ge.slice(3)):ie.push(ge)}ie.length&&pe("Extraneous non-props attributes ("+"".concat(ie.join(", "),") ")+"were passed to component but could not be automatically inherited because component renders fragment or text root nodes."),j.length&&pe("Extraneous non-emits event listeners ("+"".concat(j.join(", "),") ")+'were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.')}}}return f.dirs&&(Hi(Fe)||pe("Runtime directive used on component with non-element root node. The directives will not function as intended."),Fe=Ki(Fe),Fe.dirs=Fe.dirs?Fe.dirs.concat(f.dirs):f.dirs),f.transition&&(Hi(Fe)||pe("Component inside <Transition> renders non-element root node that cannot be animated."),Fe.transition=f.transition),it?it(Fe):ft=Fe,Bo(se),ft}var yo=i=>{var a=i.children,f=i.dynamicChildren,p=Eo(a);if(!p)return[i,void 0];var S=a.indexOf(p),w=f?f.indexOf(p):-1,N=V=>{a[S]=V,f&&(w>-1?f[w]=V:V.patchFlag>0&&(i.dynamicChildren=[...f,V]))};return[mr(p),N]};function Eo(i){for(var a,f=0;f<i.length;f++){var p=i[f];if(vr(p)){if(p.type!==Yt||p.children==="v-if"){if(a)return;a=p}}else return}return a}var pa=i=>{var a;for(var f in i)(f==="class"||f==="style"||d.isOn(f))&&((a||(a={}))[f]=i[f]);return a},Xo=(i,a)=>{var f={};for(var p in i)(!d.isModelListener(p)||!(p.slice(9)in a))&&(f[p]=i[p]);return f},Hi=i=>i.shapeFlag&(6|1)||i.type===Yt;function wo(i,a,f){var{props:p,children:S,component:w}=i,{props:N,children:V,patchFlag:F}=a,q=w.emitsOptions;if((S||V)&&Rr||a.dirs||a.transition)return!0;if(f&&F>=0){if(F&1024)return!0;if(F&16)return p?Zr(p,N,q):!!N;if(F&8)for(var be=a.dynamicProps,ae=0;ae<be.length;ae++){var ne=be[ae];if(N[ne]!==p[ne]&&!On(q,ne))return!0}}else return(S||V)&&(!V||!V.$stable)?!0:p===N?!1:p?N?Zr(p,N,q):!0:!!N;return!1}function Zr(i,a,f){var p=Object.keys(a);if(p.length!==Object.keys(i).length)return!0;for(var S=0;S<p.length;S++){var w=p[S];if(a[w]!==i[w]&&!On(f,w))return!0}return!1}function fi(i,a){for(var{vnode:f,parent:p}=i;p&&p.subTree===f;)(f=p.vnode).el=a,p=p.parent}var Qo=i=>i.__isSuspense,an={name:"Suspense",__isSuspense:!0,process(i,a,f,p,S,w,N,V,F,q){i==null?ga(a,f,p,S,w,N,V,F,q):mn(i,a,f,p,S,N,V,F,q)},hydrate:ea,create:fr,normalize:Pa},So=an;function di(i,a){var f=i.props&&i.props[a];d.isFunction(f)&&f()}function ga(i,a,f,p,S,w,N,V,F){var{p:q,o:{createElement:be}}=F,ae=be("div",a),ne=i.suspense=fr(i,S,p,a,ae,f,w,N,V,F);q(null,ne.pendingBranch=i.ssContent,ae,null,p,ne,w,N),ne.deps>0?(di(i,"onPending"),di(i,"onFallback"),q(null,i.ssFallback,a,f,p,null,w,N),Zn(ne,i.ssFallback)):ne.resolve()}function mn(i,a,f,p,S,w,N,V,F){var{p:q,um:be,o:{createElement:ae}}=F,ne=a.suspense=i.suspense;ne.vnode=a,a.el=i.el;var Ae=a.ssContent,De=a.ssFallback,{activeBranch:Xe,pendingBranch:ft,isInFallback:Te,isHydrating:se}=ne;if(ft)ne.pendingBranch=Ae,ri(Ae,ft)?(q(ft,Ae,ne.hiddenContainer,null,S,ne,w,N,V),ne.deps<=0?ne.resolve():Te&&(q(Xe,De,f,p,S,null,w,N,V),Zn(ne,De))):(ne.pendingId++,se?(ne.isHydrating=!1,ne.activeBranch=ft):be(ft,S,ne),ne.deps=0,ne.effects.length=0,ne.hiddenContainer=ae("div",f),Te?(q(null,Ae,ne.hiddenContainer,null,S,ne,w,N,V),ne.deps<=0?ne.resolve():(q(Xe,De,f,p,S,null,w,N,V),Zn(ne,De))):Xe&&ri(Ae,Xe)?(q(Xe,Ae,f,p,S,ne,w,N,V),ne.resolve(!0)):(q(null,Ae,ne.hiddenContainer,null,S,ne,w,N,V),ne.deps<=0&&ne.resolve()));else if(Xe&&ri(Ae,Xe))q(Xe,Ae,f,p,S,ne,w,N,V),Zn(ne,Ae);else if(di(a,"onPending"),ne.pendingBranch=Ae,ne.pendingId++,q(null,Ae,ne.hiddenContainer,null,S,ne,w,N,V),ne.deps<=0)ne.resolve();else{var{timeout:Ee,pendingId:Le}=ne;Ee>0?setTimeout(()=>{ne.pendingId===Le&&ne.fallback(De)},Ee):Ee===0&&ne.fallback(De)}}var Br=!1;function fr(i,a,f,p,S,w,N,V,F,q){var be=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1;Br||(Br=!0,console[console.info?"info":"log"]("<Suspense> is an experimental feature and its API will likely change."));var{p:ae,m:ne,um:Ae,n:De,o:{parentNode:Xe,remove:ft}}=q,Te=i.props?d.toNumber(i.props.timeout):void 0;re(Te,"Suspense timeout");var se={vnode:i,parent:a,parentComponent:f,isSVG:N,container:p,hiddenContainer:S,anchor:w,deps:0,pendingId:0,timeout:typeof Te=="number"?Te:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:be,isUnmounted:!1,effects:[],resolve(){var Ee=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;{if(!Ee&&!se.pendingBranch)throw new Error("suspense.resolve() is called without a pending branch.");if(se.isUnmounted)throw new Error("suspense.resolve() is called on an already unmounted suspense boundary.")}var{vnode:Le,activeBranch:Fe,pendingBranch:it,pendingId:Tt,effects:Qe,parentComponent:B,container:j}=se;if(se.isHydrating)se.isHydrating=!1;else if(!Ee){var ie=Fe&&it.transition&&it.transition.mode==="out-in";ie&&(Fe.transition.afterLeave=()=>{Tt===se.pendingId&&ne(it,j,ye,0)});var{anchor:ye}=se;Fe&&(ye=De(Fe),Ae(Fe,B,se,!0)),ie||ne(it,j,ye,0)}Zn(se,it),se.pendingBranch=null,se.isInFallback=!1;for(var oe=se.parent,ge=!1;oe;){if(oe.pendingBranch){oe.effects.push(...Qe),ge=!0;break}oe=oe.parent}ge||Fi(Qe),se.effects=[],di(Le,"onResolve")},fallback(Ee){if(!!se.pendingBranch){var{vnode:Le,activeBranch:Fe,parentComponent:it,container:Tt,isSVG:Qe}=se;di(Le,"onFallback");var B=De(Fe),j=()=>{!se.isInFallback||(ae(null,Ee,Tt,B,it,null,Qe,V,F),Zn(se,Ee))},ie=Ee.transition&&Ee.transition.mode==="out-in";ie&&(Fe.transition.afterLeave=j),se.isInFallback=!0,Ae(Fe,it,null,!0),ie||j()}},move(Ee,Le,Fe){se.activeBranch&&ne(se.activeBranch,Ee,Le,Fe),se.container=Ee},next(){return se.activeBranch&&De(se.activeBranch)},registerDep(Ee,Le){var Fe=!!se.pendingBranch;Fe&&se.deps++;var it=Ee.vnode.el;Ee.asyncDep.catch(Tt=>{cn(Tt,Ee,0)}).then(Tt=>{if(!(Ee.isUnmounted||se.isUnmounted||se.pendingId!==Ee.suspenseId)){Ee.asyncResolved=!0;var{vnode:Qe}=Ee;Pt(Qe),Qa(Ee,Tt,!1),it&&(Qe.el=it);var B=!it&&Ee.subTree.el;Le(Ee,Qe,Xe(it||Ee.subTree.el),it?null:De(Ee.subTree),se,N,F),B&&ft(B),fi(Ee,Qe.el),en(),Fe&&--se.deps===0&&se.resolve()}})},unmount(Ee,Le){se.isUnmounted=!0,se.activeBranch&&Ae(se.activeBranch,f,Ee,Le),se.pendingBranch&&Ae(se.pendingBranch,f,Ee,Le)}};return se}function ea(i,a,f,p,S,w,N,V,F){var q=a.suspense=fr(a,p,f,i.parentNode,document.createElement("div"),null,S,w,N,V,!0),be=F(i,q.pendingBranch=a.ssContent,f,q,w,N);return q.deps===0&&q.resolve(),be}function Pa(i){var{shapeFlag:a,children:f}=i,p=a&32;i.ssContent=ta(p?f.default:f),i.ssFallback=p?ta(f.fallback):$n(Yt)}function ta(i){var a;if(d.isFunction(i)){var f=$o&&i._c;f&&(i._d=!1,wa()),i=i(),f&&(i._d=!0,a=nr,ki())}if(d.isArray(i)){var p=Eo(i);p||pe("<Suspense> slots expect a single root node."),i=p}return i=mr(i),a&&!i.dynamicChildren&&(i.dynamicChildren=a.filter(S=>S!==i)),i}function ao(i,a){a&&a.pendingBranch?d.isArray(i)?a.effects.push(...i):a.effects.push(i):Fi(i)}function Zn(i,a){i.activeBranch=a;var{vnode:f,parentComponent:p}=i,S=f.el=a.el;p&&p.subTree===f&&(p.vnode.el=S,fi(p,S))}function or(i,a){if(!Sn)pe("provide() can only be used inside setup().");else{var f=Sn.provides,p=Sn.parent&&Sn.parent.provides;p===f&&(f=Sn.provides=Object.create(p)),f[i]=a,Sn.type.mpType==="app"&&Sn.appContext.app.provide(i,a)}}function Vn(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=Sn||En;if(p){var S=p.parent==null?p.vnode.appContext&&p.vnode.appContext.provides:p.parent.provides;if(S&&i in S)return S[i];if(arguments.length>1)return f&&d.isFunction(a)?a.call(p.proxy):a;pe('injection "'.concat(String(i),'" not found.'))}else pe("inject() can only be used inside setup() or functional components.")}function Xr(i,a){return so(i,null,a)}function hi(i,a){return so(i,null,Object.assign(Object.assign({},a),{flush:"post"}))}function na(i,a){return so(i,null,Object.assign(Object.assign({},a),{flush:"sync"}))}var Si={};function Ci(i,a,f){return d.isFunction(a)||pe("`watch(fn, options?)` signature has been moved to a separate API. Use `watchEffect(fn, options?)` instead. `watch` now only supports `watch(source, cb, options?) signature."),so(i,a,f)}function so(i,a){var{immediate:f,deep:p,flush:S,onTrack:w,onTrigger:N}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:d.EMPTY_OBJ;a||(f!==void 0&&pe('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'),p!==void 0&&pe('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'));var V=it=>{pe("Invalid watch source: ",it,"A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.")},F=m.getCurrentScope()===(Sn==null?void 0:Sn.scope)?Sn:null,q,be=!1,ae=!1;if(m.isRef(i)?(q=()=>i.value,be=m.isShallow(i)):m.isReactive(i)?(q=()=>i,p=!0):d.isArray(i)?(ae=!0,be=i.some(it=>m.isReactive(it)||m.isShallow(it)),q=()=>i.map(it=>{if(m.isRef(it))return it.value;if(m.isReactive(it))return ji(it);if(d.isFunction(it))return fn(it,F,2);V(it)})):d.isFunction(i)?a?q=()=>fn(i,F,2):q=()=>{if(!(F&&F.isUnmounted))return Ae&&Ae(),Jt(i,F,3,[De])}:(q=d.NOOP,V(i)),a&&p){var ne=q;q=()=>ji(ne())}var Ae,De=it=>{Ae=Le.onStop=()=>{fn(it,F,4)}},Xe;if(C.isInSSRComponentSetup)if(De=d.NOOP,a?f&&Jt(a,F,3,[q(),ae?[]:void 0,De]):q(),S==="sync"){var ft=Rs();Xe=ft.__watcherHandles||(ft.__watcherHandles=[])}else return d.NOOP;var Te=ae?new Array(i.length).fill(Si):Si,se=()=>{if(!!Le.active)if(a){var it=Le.run();(p||be||(ae?it.some((Tt,Qe)=>d.hasChanged(Tt,Te[Qe])):d.hasChanged(it,Te)))&&(Ae&&Ae(),Jt(a,F,3,[it,Te===Si?void 0:ae&&Te[0]===Si?[]:Te,De]),Te=it)}else Le.run()};se.allowRecurse=!!a;var Ee;S==="sync"?Ee=se:S==="post"?Ee=()=>Ar(se,F&&F.suspense):(se.pre=!0,F&&(se.id=F.uid),Ee=()=>Ln(se));var Le=new m.ReactiveEffect(q,Ee);Le.onTrack=w,Le.onTrigger=N,a?f?se():Te=Le.run():S==="post"?Ar(Le.run.bind(Le),F&&F.suspense):Le.run();var Fe=()=>{Le.stop(),F&&F.scope&&d.remove(F.scope.effects,Le)};return Xe&&Xe.push(Fe),Fe}function va(i,a,f){var p=this.proxy,S=d.isString(i)?i.includes(".")?Oi(p,i):()=>p[i]:i.bind(p,p),w;d.isFunction(a)?w=a:(w=a.handler,f=a);var N=Sn;_i(this);var V=so(S,w.bind(p),f);return N?_i(N):aa(),V}function Oi(i,a){var f=a.split(".");return()=>{for(var p=i,S=0;S<f.length&&p;S++)p=p[f[S]];return p}}function ji(i,a){if(!d.isObject(i)||i.__v_skip||(a=a||new Set,a.has(i)))return i;if(a.add(i),m.isRef(i))ji(i.value,a);else if(d.isArray(i))for(var f=0;f<i.length;f++)ji(i[f],a);else if(d.isSet(i)||d.isMap(i))i.forEach(S=>{ji(S,a)});else if(d.isPlainObject(i))for(var p in i)ji(i[p],a);return i}function dr(){var i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return fo(()=>{i.isMounted=!0}),Dr(()=>{i.isUnmounting=!0}),i}var Sr=[Function,Array],lo={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Sr,onEnter:Sr,onAfterEnter:Sr,onEnterCancelled:Sr,onBeforeLeave:Sr,onLeave:Sr,onAfterLeave:Sr,onLeaveCancelled:Sr,onBeforeAppear:Sr,onAppear:Sr,onAfterAppear:Sr,onAppearCancelled:Sr},Mo={name:"BaseTransition",props:lo,setup(i,a){var{slots:f}=a,p=mi(),S=dr(),w;return()=>{var N=f.default&&ve(f.default(),!0);if(!(!N||!N.length)){var V=N[0];if(N.length>1){var F=!1;for(var q of N)if(q.type!==Yt){if(F){pe("<transition> can only be used on a single element or component. Use <transition-group> for lists.");break}V=q,F=!0}}var be=m.toRaw(i),{mode:ae}=be;if(ae&&ae!=="in-out"&&ae!=="out-in"&&ae!=="default"&&pe("invalid <transition> mode: ".concat(ae)),S.isLeaving)return Do(V);var ne=D(V);if(!ne)return Do(V);var Ae=pi(ne,be,S,p);Z(ne,Ae);var De=p.subTree,Xe=De&&D(De),ft=!1,{getTransitionKey:Te}=ne.type;if(Te){var se=Te();w===void 0?w=se:se!==w&&(w=se,ft=!0)}if(Xe&&Xe.type!==Yt&&(!ri(ne,Xe)||ft)){var Ee=pi(Xe,be,S,p);if(Z(Xe,Ee),ae==="out-in")return S.isLeaving=!0,Ee.afterLeave=()=>{S.isLeaving=!1,p.update.active!==!1&&p.update()},Do(V);ae==="in-out"&&ne.type!==Yt&&(Ee.delayLeave=(Le,Fe,it)=>{var Tt=Ai(S,Xe);Tt[String(Xe.key)]=Xe,Le._leaveCb=()=>{Fe(),Le._leaveCb=void 0,delete Ae.delayedLeave},Ae.delayedLeave=it})}return V}}}},Co=Mo;function Ai(i,a){var{leavingVNodes:f}=i,p=f.get(a.type);return p||(p=Object.create(null),f.set(a.type,p)),p}function pi(i,a,f,p){var{appear:S,mode:w,persisted:N=!1,onBeforeEnter:V,onEnter:F,onAfterEnter:q,onEnterCancelled:be,onBeforeLeave:ae,onLeave:ne,onAfterLeave:Ae,onLeaveCancelled:De,onBeforeAppear:Xe,onAppear:ft,onAfterAppear:Te,onAppearCancelled:se}=a,Ee=String(i.key),Le=Ai(f,i),Fe=(Qe,B)=>{Qe&&Jt(Qe,p,9,B)},it=(Qe,B)=>{var j=B[1];Fe(Qe,B),d.isArray(Qe)?Qe.every(ie=>ie.length<=1)&&j():Qe.length<=1&&j()},Tt={mode:w,persisted:N,beforeEnter(Qe){var B=V;if(!f.isMounted)if(S)B=Xe||V;else return;Qe._leaveCb&&Qe._leaveCb(!0);var j=Le[Ee];j&&ri(i,j)&&j.el._leaveCb&&j.el._leaveCb(),Fe(B,[Qe])},enter(Qe){var B=F,j=q,ie=be;if(!f.isMounted)if(S)B=ft||F,j=Te||q,ie=se||be;else return;var ye=!1,oe=Qe._enterCb=ge=>{ye||(ye=!0,ge?Fe(ie,[Qe]):Fe(j,[Qe]),Tt.delayedLeave&&Tt.delayedLeave(),Qe._enterCb=void 0)};B?it(B,[Qe,oe]):oe()},leave(Qe,B){var j=String(i.key);if(Qe._enterCb&&Qe._enterCb(!0),f.isUnmounting)return B();Fe(ae,[Qe]);var ie=!1,ye=Qe._leaveCb=oe=>{ie||(ie=!0,B(),oe?Fe(De,[Qe]):Fe(Ae,[Qe]),Qe._leaveCb=void 0,Le[j]===i&&delete Le[j])};Le[j]=i,ne?it(ne,[Qe,ye]):ye()},clone(Qe){return pi(Qe,a,f,p)}};return Tt}function Do(i){if(Y(i))return i=Ki(i),i.children=null,i}function D(i){return Y(i)?i.children?i.children[0]:void 0:i}function Z(i,a){i.shapeFlag&6&&i.component?Z(i.component.subTree,a):i.shapeFlag&128?(i.ssContent.transition=a.clone(i.ssContent),i.ssFallback.transition=a.clone(i.ssFallback)):i.transition=a}function ve(i){for(var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,f=arguments.length>2?arguments[2]:void 0,p=[],S=0,w=0;w<i.length;w++){var N=i[w],V=f==null?N.key:String(f)+String(N.key!=null?N.key:w);N.type===ut?(N.patchFlag&128&&S++,p=p.concat(ve(N.children,a,V))):(a||N.type!==Yt)&&p.push(V!=null?Ki(N,{key:V}):N)}if(S>1)for(var F=0;F<p.length;F++)p[F].patchFlag=-2;return p}function le(i){return d.isFunction(i)?{setup:i,name:i.name}:i}var de=i=>!!i.type.__asyncLoader;function Ot(i){d.isFunction(i)&&(i={loader:i});var{loader:a,loadingComponent:f,errorComponent:p,delay:S=200,timeout:w,suspensible:N=!0,onError:V}=i,F=null,q,be=0,ae=()=>(be++,F=null,ne()),ne=()=>{var Ae;return F||(Ae=F=a().catch(De=>{if(De=De instanceof Error?De:new Error(String(De)),V)return new Promise((Xe,ft)=>{var Te=()=>Xe(ae()),se=()=>ft(De);V(De,Te,se,be+1)});throw De}).then(De=>{if(Ae!==F&&F)return F;if(De||pe("Async component loader resolved to undefined. If you are using retry(), make sure to return its return value."),De&&(De.__esModule||De[Symbol.toStringTag]==="Module")&&(De=De.default),De&&!d.isObject(De)&&!d.isFunction(De))throw new Error("Invalid async component load result: ".concat(De));return q=De,De}))};return le({name:"AsyncComponentWrapper",__asyncLoader:ne,get __asyncResolved(){return q},setup(){var Ae=Sn;if(q)return()=>J(q,Ae);var De=se=>{F=null,cn(se,Ae,13,!p)};if(N&&Ae.suspense||C.isInSSRComponentSetup)return ne().then(se=>()=>J(se,Ae)).catch(se=>(De(se),()=>p?$n(p,{error:se}):null));var Xe=m.ref(!1),ft=m.ref(),Te=m.ref(!!S);return S&&setTimeout(()=>{Te.value=!1},S),w!=null&&setTimeout(()=>{if(!Xe.value&&!ft.value){var se=new Error("Async component timed out after ".concat(w,"ms."));De(se),ft.value=se}},w),ne().then(()=>{Xe.value=!0,Ae.parent&&Y(Ae.parent.vnode)&&Ln(Ae.parent.update)}).catch(se=>{De(se),ft.value=se}),()=>{if(Xe.value&&q)return J(q,Ae);if(ft.value&&p)return $n(p,{error:ft.value});if(f&&!Te.value)return $n(f)}}})}function J(i,a){var{ref:f,props:p,children:S,ce:w}=a.vnode,N=$n(i,p,S);return N.ref=f,N.ce=w,delete a.vnode.ce,N}var Y=i=>i.type.__isKeepAlive,ce={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(i,a){var{slots:f}=a,p=mi(),S=p.ctx;if(!S.renderer)return()=>{var Ee=f.default&&f.default();return Ee&&Ee.length===1?Ee[0]:Ee};var w=new Map,N=new Set,V=null;p.__v_cache=w;var F=p.suspense,{renderer:{p:q,m:be,um:ae,o:{createElement:ne}}}=S,Ae=ne("div",null);S.activate=(Ee,Le,Fe,it,Tt)=>{var Qe=Ee.component;be(Ee,Le,Fe,0,F),q(Qe.vnode,Ee,Le,Fe,Qe,F,it,Ee.slotScopeIds,Tt),Ar(()=>{Qe.isDeactivated=!1,Qe.a&&d.invokeArrayFns(Qe.a);var B=Ee.props&&Ee.props.onVnodeMounted;B&&jr(B,Qe.parent,Ee)},F),ro(Qe)},S.deactivate=Ee=>{var Le=Ee.component;be(Ee,Ae,null,1,F),Ar(()=>{Le.da&&d.invokeArrayFns(Le.da);var Fe=Ee.props&&Ee.props.onVnodeUnmounted;Fe&&jr(Fe,Le.parent,Ee),Le.isDeactivated=!0},F),ro(Le)};function De(Ee){Mr(Ee),ae(Ee,p,F,!0)}function Xe(Ee){w.forEach((Le,Fe)=>{var it=Sa(Le.type);it&&(!Ee||!Ee(it))&&ft(Fe)})}function ft(Ee){var Le=w.get(Ee);!V||!ri(Le,V)?De(Le):V&&Mr(V),w.delete(Ee),N.delete(Ee)}Ci(()=>[i.include,i.exclude],Ee=>{var[Le,Fe]=Ee;Le&&Xe(it=>lt(Le,it)),Fe&&Xe(it=>!lt(Fe,it))},{flush:"post",deep:!0});var Te=null,se=()=>{Te!=null&&w.set(Te,co(p.subTree))};return fo(se),Qn(se),Dr(()=>{w.forEach(Ee=>{var{subTree:Le,suspense:Fe}=p,it=co(Le);if(Ee.type===it.type&&Ee.key===it.key){Mr(it);var Tt=it.component.da;Tt&&Ar(Tt,Fe);return}De(Ee)})}),()=>{if(Te=null,!f.default)return null;var Ee=f.default(),Le=Ee[0];if(Ee.length>1)return pe("KeepAlive should contain exactly one component child."),V=null,Ee;if(!vr(Le)||!(Le.shapeFlag&4)&&!(Le.shapeFlag&128))return V=null,Le;var Fe=co(Le),it=Fe.type,Tt=Sa(de(Fe)?Fe.type.__asyncResolved||{}:it),{include:Qe,exclude:B,max:j}=i;if(Qe&&(!Tt||!lt(Qe,Tt))||B&&Tt&&lt(B,Tt))return V=Fe,Le;var ie=Fe.key==null?it:Fe.key,ye=w.get(ie);return Fe.el&&(Fe=Ki(Fe),Le.shapeFlag&128&&(Le.ssContent=Fe)),Te=ie,ye?(Fe.el=ye.el,Fe.component=ye.component,Fe.transition&&Z(Fe,Fe.transition),Fe.shapeFlag|=512,N.delete(ie),N.add(ie)):(N.add(ie),j&&N.size>parseInt(j,10)&&ft(N.values().next().value)),Fe.shapeFlag|=256,V=Fe,Qo(Le.type)?Le:Fe}}},xe=ce;function lt(i,a){return d.isArray(i)?i.some(f=>lt(f,a)):d.isString(i)?i.split(",").includes(a):d.isRegExp(i)?i.test(a):!1}function zt(i,a){Xn(i,"a",a)}function An(i,a){Xn(i,"da",a)}function Xn(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Sn,p=i.__wdc||(i.__wdc=()=>{for(var w=f;w;){if(w.isDeactivated)return;w=w.parent}return i()});if(gr(a,p,f),f)for(var S=f.parent;S&&S.parent;)Y(S.parent.vnode)&&Qr(p,a,f,S),S=S.parent}function Qr(i,a,f,p){var S=gr(a,i,p,!0);qa(()=>{d.remove(p[a],S)},f)}function Mr(i){i.shapeFlag&=~256,i.shapeFlag&=~512}function co(i){return i.shapeFlag&128?i.ssContent:i}function gr(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Sn,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(f){if(R.isRootHook(i)&&f!==f.root&&(f=f.root,R.isRootImmediateHook(i))){var S=f.proxy;Jt(a.bind(S),f,i,R.ON_LOAD===i?[S.$page.options]:[])}var{__page_container__:w}=f.root.vnode;w&&w.onInjectHook(i);var N=f[i]||(f[i]=[]),V=a.__weh||(a.__weh=function(){if(!f.isUnmounted){m.pauseTracking(),_i(f);for(var q=arguments.length,be=new Array(q),ae=0;ae<q;ae++)be[ae]=arguments[ae];var ne=Jt(a,f,i,be);return aa(),m.resetTracking(),ne}});return p?N.unshift(V):N.push(V),V}else{var F=d.toHandlerKey((Dn[i]||i.replace(/^on/,"")).replace(/ hook$/,""));pe("".concat(F," is called when there is no active component instance to be ")+"associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.")}}var gi=i=>function(a){var f=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Sn;return(!C.isInSSRComponentSetup||i==="sp")&&gr(i,function(){return a(...arguments)},f)},uo=gi("bm"),fo=gi("m"),ra=gi("bu"),Qn=gi("u"),Dr=gi("bum"),qa=gi("um"),Na=gi("sp"),Lr=gi("rtg"),Vs=gi("rtc");function Us(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Sn;gr("ec",i,a)}function il(i){d.isBuiltInDirective(i)&&pe("Do not use built-in directive ids as custom directive id: "+i)}function Oo(i,a){var f=En;if(f===null)return pe("withDirectives can only be used inside render functions."),i;for(var p=Ns(f)||f.proxy,S=i.dirs||(i.dirs=[]),w=0;w<a.length;w++){var[N,V,F,q=d.EMPTY_OBJ]=a[w];N&&(d.isFunction(N)&&(N={mounted:N,updated:N}),N.deep&&ji(V),S.push({dir:N,instance:p,value:V,oldValue:void 0,arg:F,modifiers:q}))}return i}function Ti(i,a,f,p){for(var S=i.dirs,w=a&&a.dirs,N=0;N<S.length;N++){var V=S[N];w&&(V.oldValue=w[N].value);var F=V.dir[p];F&&(m.pauseTracking(),Jt(F,f,8,[i.el,V,i,a]),m.resetTracking())}}var ka="components",Nl="directives";function zn(i,a){return Ka(ka,i,!0,a)||i}var ma=Symbol();function gs(i){return d.isString(i)?Ka(ka,i,!1)||i:i||ma}function ho(i){return Ka(Nl,i)}function Ka(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,S=En||Sn;if(S){var w=S.type;if(i===ka){var N=Sa(w,!1);if(N&&(N===a||N===d.camelize(a)||N===d.capitalize(d.camelize(a))))return w}var V=ol(S[i]||w[i],a)||ol(S.appContext[i],a);if(!V&&p)return w;if(f&&!V){var F=i===ka?`
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.`:"";pe("Failed to resolve ".concat(i.slice(0,-1),": ").concat(a).concat(F))}return V}else pe("resolve".concat(d.capitalize(i.slice(0,-1))," ")+"can only be used in render() or setup().")}function ol(i,a){return i&&(i[a]||i[d.camelize(a)]||i[d.capitalize(d.camelize(a))])}function Ra(i,a,f,p){var S,w=f&&f[p];if(d.isArray(i)||d.isString(i)){S=new Array(i.length);for(var N=0,V=i.length;N<V;N++)S[N]=a(i[N],N,void 0,w&&w[N])}else if(typeof i=="number"){Number.isInteger(i)||pe("The v-for range expect an integer value but got ".concat(i,".")),S=new Array(i);for(var F=0;F<i;F++)S[F]=a(F+1,F,void 0,w&&w[F])}else if(d.isObject(i))if(i[Symbol.iterator])S=Array.from(i,(Ae,De)=>a(Ae,De,void 0,w&&w[De]));else{var q=Object.keys(i);S=new Array(q.length);for(var be=0,ae=q.length;be<ae;be++){var ne=q[be];S[be]=a(i[ne],ne,be,w&&w[be])}}else S=[];return f&&(f[p]=S),S}function al(i,a){for(var f=function(S){var w=a[S];if(d.isArray(w))for(var N=0;N<w.length;N++)i[w[N].name]=w[N].fn;else w&&(i[w.name]=w.key?function(){var V=w.fn(...arguments);return V&&(V.key=w.key),V}:w.fn)},p=0;p<a.length;p++)f(p);return i}function _a(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},p=arguments.length>3?arguments[3]:void 0,S=arguments.length>4?arguments[4]:void 0;if(En.isCE||En.parent&&de(En.parent)&&En.parent.isCE)return a!=="default"&&(f.name=a),$n("slot",f,p&&p());var w=i[a];w&&w.length>1&&(pe("SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template."),w=()=>[]),w&&w._c&&(w._d=!1),wa();var N=w&&vs(w(f)),V=oa(ut,{key:f.key||N&&N.key||"_".concat(a)},N||(p?p():[]),N&&i._===1?64:-2);return!S&&V.scopeId&&(V.slotScopeIds=[V.scopeId+"-s"]),w&&w._c&&(w._d=!0),V}function vs(i){return i.some(a=>vr(a)?!(a.type===Yt||a.type===ut&&!vs(a.children)):!0)?i:null}function ms(i,a){var f={};if(!d.isObject(i))return pe("v-on with no argument expects an object value."),f;for(var p in i)f[a&&/[A-Z]/.test(p)?"on:".concat(p):d.toHandlerKey(p)]=i[p];return f}var zi=i=>i?Ri(i)?Ns(i)||i.proxy:zi(i.parent):null,Cr=d.extend(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>m.shallowReadonly(i.props),$attrs:i=>m.shallowReadonly(i.attrs),$slots:i=>m.shallowReadonly(i.slots),$refs:i=>m.shallowReadonly(i.refs),$parent:i=>zi(i.parent),$root:i=>zi(i.root),$emit:i=>i.emit,$options:i=>W(i),$forceUpdate:i=>i.f||(i.f=()=>Ln(i.update)),$nextTick:i=>i.n||(i.n=kn.bind(i.proxy)),$watch:i=>va.bind(i)}),ba=i=>i==="_"||i==="$",Lo=(i,a)=>i!==d.EMPTY_OBJ&&!i.__isScriptSetup&&d.hasOwn(i,a),xa={get(i,a){var{_:f}=i,{ctx:p,setupState:S,data:w,props:N,accessCache:V,type:F,appContext:q}=f;if(a==="__isVue")return!0;var be;if(a[0]!=="$"){var ae=V[a];if(ae!==void 0)switch(ae){case 1:return S[a];case 2:return w[a];case 4:return p[a];case 3:return N[a]}else{if(Lo(S,a))return V[a]=1,S[a];if(w!==d.EMPTY_OBJ&&d.hasOwn(w,a))return V[a]=2,w[a];if((be=f.propsOptions[0])&&d.hasOwn(be,a))return V[a]=3,N[a];if(p!==d.EMPTY_OBJ&&d.hasOwn(p,a))return V[a]=4,p[a];Hs&&(V[a]=0)}}var ne=Cr[a],Ae,De;if(ne)return a==="$attrs"&&(m.track(f,"get",a),ke()),ne(f);if((Ae=F.__cssModules)&&(Ae=Ae[a]))return Ae;if(p!==d.EMPTY_OBJ&&d.hasOwn(p,a))return V[a]=4,p[a];if(De=q.config.globalProperties,d.hasOwn(De,a))return De[a];En&&(!d.isString(a)||a.indexOf("__v")!==0)&&(w!==d.EMPTY_OBJ&&ba(a[0])&&d.hasOwn(w,a)?pe("Property ".concat(JSON.stringify(a)," must be accessed via $data because it starts with a reserved ")+'character ("$" or "_") and is not proxied on the render context.'):f===En&&pe("Property ".concat(JSON.stringify(a)," was accessed during render ")+"but is not defined on instance."))},set(i,a,f){var{_:p}=i,{data:S,setupState:w,ctx:N}=p;return Lo(w,a)?(w[a]=f,!0):w.__isScriptSetup&&d.hasOwn(w,a)?(pe('Cannot mutate <script setup> binding "'.concat(a,'" from Options API.')),!1):S!==d.EMPTY_OBJ&&d.hasOwn(S,a)?(S[a]=f,!0):d.hasOwn(p.props,a)?(pe('Attempting to mutate prop "'.concat(a,'". Props are readonly.')),!1):a[0]==="$"&&a.slice(1)in p?(pe('Attempting to mutate public property "'.concat(a,'". ')+"Properties starting with $ are reserved and readonly."),!1):(a in p.appContext.config.globalProperties?Object.defineProperty(N,a,{enumerable:!0,configurable:!0,value:f}):N[a]=f,!0)},has(i,a){var{_:{data:f,setupState:p,accessCache:S,ctx:w,appContext:N,propsOptions:V}}=i,F;return!!S[a]||f!==d.EMPTY_OBJ&&d.hasOwn(f,a)||Lo(p,a)||(F=V[0])&&d.hasOwn(F,a)||d.hasOwn(w,a)||d.hasOwn(Cr,a)||d.hasOwn(N.config.globalProperties,a)},defineProperty(i,a,f){return f.get!=null?i._.accessCache[a]=0:d.hasOwn(f,"value")&&this.set(i,a,f.value,null),Reflect.defineProperty(i,a,f)}};xa.ownKeys=i=>(pe("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."),Reflect.ownKeys(i));var sl=d.extend({},xa,{get(i,a){if(a!==Symbol.unscopables)return xa.get(i,a,i)},has(i,a){var f=a[0]!=="_"&&!d.isGloballyWhitelisted(a);return!f&&xa.has(i,a)&&pe("Property ".concat(JSON.stringify(a)," should not start with _ which is a reserved prefix for Vue internals.")),f}});function $s(i){var a={};return Object.defineProperty(a,"_",{configurable:!0,enumerable:!1,get:()=>i}),Object.keys(Cr).forEach(f=>{Object.defineProperty(a,f,{configurable:!0,enumerable:!1,get:()=>Cr[f](i),set:d.NOOP})}),a}function kl(i){var{ctx:a,propsOptions:[f]}=i;f&&Object.keys(f).forEach(p=>{Object.defineProperty(a,p,{enumerable:!0,configurable:!0,get:()=>i.props[p],set:d.NOOP})})}function ya(i){var{ctx:a,setupState:f}=i;Object.keys(m.toRaw(f)).forEach(p=>{if(!f.__isScriptSetup){if(ba(p[0])){pe("setup() return property ".concat(JSON.stringify(p),' should not start with "$" or "_" ')+"which are reserved prefixes for Vue internals.");return}Object.defineProperty(a,p,{enumerable:!0,configurable:!0,get:()=>f[p],set:d.NOOP})}})}function _s(){var i=Object.create(null);return(a,f)=>{i[f]?pe("".concat(a,' property "').concat(f,'" is already defined in ').concat(i[f],".")):i[f]=a}}var Hs=!0;function ll(i){var a=W(i),f=i.proxy,p=i.ctx;Hs=!1,a.beforeCreate&&y(a.beforeCreate,i,"bc");var{data:S,computed:w,methods:N,watch:V,provide:F,inject:q,created:be,beforeMount:ae,mounted:ne,beforeUpdate:Ae,updated:De,activated:Xe,deactivated:ft,beforeDestroy:Te,beforeUnmount:se,destroyed:Ee,unmounted:Le,render:Fe,renderTracked:it,renderTriggered:Tt,errorCaptured:Qe,serverPrefetch:B,expose:j,inheritAttrs:ie,components:ye,directives:oe,filters:ge}=a,et=_s();{var[Ge]=i.propsOptions;if(Ge)for(var tt in Ge)et("Props",tt)}if(q&&js(q,p,et,i.appContext.config.unwrapInjectedRef),N)for(var Ve in N){var Lt=N[Ve];d.isFunction(Lt)?(Object.defineProperty(p,Ve,{value:Lt.bind(f),configurable:!0,enumerable:!0,writable:!0}),et("Methods",Ve)):pe('Method "'.concat(Ve,'" has type "').concat(typeof Lt,'" in the component definition. ')+"Did you reference the function correctly?")}if(S&&function(){d.isFunction(S)||pe("The data option must be a function. Plain object usage is no longer supported.");var sn=S.call(f,f);if(d.isPromise(sn)&&pe("data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>."),!d.isObject(sn))pe("data() should return an object.");else{i.data=m.reactive(sn);{var Tn=function(Xi){et("Data",Xi),ba(Xi[0])||Object.defineProperty(p,Xi,{configurable:!0,enumerable:!0,get:()=>sn[Xi],set:d.NOOP})};for(var gn in sn)Tn(gn)}}}(),Hs=!0,w){var Bt=function(sn){var Tn=w[sn],gn=d.isFunction(Tn)?Tn.bind(f,f):d.isFunction(Tn.get)?Tn.get.bind(f,f):d.NOOP;gn===d.NOOP&&pe('Computed property "'.concat(sn,'" has no getter.'));var Xi=!d.isFunction(Tn)&&d.isFunction(Tn.set)?Tn.set.bind(f):()=>{pe('Write operation failed: computed property "'.concat(sn,'" is readonly.'))},yi=Gs({get:gn,set:Xi});Object.defineProperty(p,sn,{enumerable:!0,configurable:!0,get:()=>yi.value,set:zr=>yi.value=zr}),et("Computed",sn)};for(var Ut in w)Bt(Ut)}if(V)for(var un in V)M(V[un],p,f,un);if(F){var Yn=d.isFunction(F)?F.call(f):F;Reflect.ownKeys(Yn).forEach(sn=>{or(sn,Yn[sn])})}be&&y(be,i,"c");function qt(sn,Tn){d.isArray(Tn)?Tn.forEach(gn=>sn(gn.bind(f))):Tn&&sn(Tn.bind(f))}if(qt(uo,ae),qt(fo,ne),qt(ra,Ae),qt(Qn,De),qt(zt,Xe),qt(An,ft),qt(Us,Qe),qt(Vs,it),qt(Lr,Tt),qt(Dr,se),qt(qa,Le),qt(Na,B),d.isArray(j))if(j.length){var bn=i.exposed||(i.exposed={});j.forEach(sn=>{Object.defineProperty(bn,sn,{get:()=>f[sn],set:Tn=>f[sn]=Tn})})}else i.exposed||(i.exposed={});Fe&&i.render===d.NOOP&&(i.render=Fe),ie!=null&&(i.inheritAttrs=ie),ye&&(i.components=ye),oe&&(i.directives=oe);var bi=i.appContext.config.globalProperties.$applyOptions;bi&&bi(a,i,f)}function js(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:d.NOOP,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;d.isArray(i)&&(i=me(i));var S=function(N){var V=i[N],F=void 0;d.isObject(V)?"default"in V?F=Vn(V.from||N,V.default,!0):F=Vn(V.from||N):F=Vn(V),m.isRef(F)?p?Object.defineProperty(a,N,{enumerable:!0,configurable:!0,get:()=>F.value,set:q=>F.value=q}):(pe('injected property "'.concat(N,'" is a ref and will be auto-unwrapped ')+"and no longer needs `.value` in the next minor release. To opt-in to the new behavior now, set `app.config.unwrapInjectedRef = true` (this config is temporary and will not be needed in the future.)"),a[N]=F):a[N]=F,f("Inject",N)};for(var w in i)S(w)}function y(i,a,f){Jt(d.isArray(i)?i.map(p=>p.bind(a.proxy)):i.bind(a.proxy),a,f)}function M(i,a,f,p){var S=p.includes(".")?Oi(f,p):()=>f[p];if(d.isString(i)){var w=a[i];d.isFunction(w)?Ci(S,w):pe('Invalid watch handler specified by key "'.concat(i,'"'),w)}else if(d.isFunction(i))Ci(S,i.bind(f));else if(d.isObject(i))if(d.isArray(i))i.forEach(V=>M(V,a,f,p));else{var N=d.isFunction(i.handler)?i.handler.bind(f):a[i.handler];d.isFunction(N)?Ci(S,N,i):pe('Invalid watch handler specified by key "'.concat(i.handler,'"'),N)}else pe('Invalid watch option: "'.concat(p,'"'),i)}function W(i){var a=i.type,{mixins:f,extends:p}=a,{mixins:S,optionsCache:w,config:{optionMergeStrategies:N}}=i.appContext,V=w.get(a),F;return V?F=V:!S.length&&!f&&!p?F=a:(F={},S.length&&S.forEach(q=>H(F,q,N,!0)),H(F,a,N)),d.isObject(a)&&w.set(a,F),F}function H(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:S,extends:w}=a;w&&H(i,w,f,!0),S&&S.forEach(F=>H(i,F,f,!0));for(var N in a)if(p&&N==="expose")pe('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');else{var V=Q[N]||f&&f[N];i[N]=V?V(i[N],a[N]):a[N]}return i}var Q={data:ee,props:Be,emits:Be,methods:Be,computed:Be,beforeCreate:we,created:we,beforeMount:we,mounted:we,beforeUpdate:we,updated:we,beforeDestroy:we,beforeUnmount:we,destroyed:we,unmounted:we,activated:we,deactivated:we,errorCaptured:we,serverPrefetch:we,components:Be,directives:Be,watch:Se,provide:ee,inject:he};function ee(i,a){return a?i?function(){return d.extend(d.isFunction(i)?i.call(this,this):i,d.isFunction(a)?a.call(this,this):a)}:a:i}function he(i,a){return Be(me(i),me(a))}function me(i){if(d.isArray(i)){for(var a={},f=0;f<i.length;f++)a[i[f]]=i[f];return a}return i}function we(i,a){return i?[...new Set([].concat(i,a))]:a}function Be(i,a){return i?d.extend(d.extend(Object.create(null),i),a):a}function Se(i,a){if(!i)return a;if(!a)return i;var f=d.extend(Object.create(null),i);for(var p in a)f[p]=we(i[p],a[p]);return f}function je(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,S={},w={};d.def(w,As,1),i.propsDefaults=Object.create(null),Wt(i,a,S,w);for(var N in i.propsOptions[0])N in S||(S[N]=void 0);nn(a||{},S,i),f?i.props=p?S:m.shallowReactive(S):i.type.props?i.props=S:i.props=w,i.attrs=w}function bt(i){for(;i;){if(i.type.__hmrId)return!0;i=i.parent}}function Ct(i,a,f,p){var{props:S,attrs:w,vnode:{patchFlag:N}}=i,V=m.toRaw(S),[F]=i.propsOptions,q=!1;if(!bt(i)&&(p||N>0)&&!(N&16)){if(N&8)for(var be=i.vnode.dynamicProps,ae=0;ae<be.length;ae++){var ne=be[ae];if(!On(i.emitsOptions,ne)){var Ae=a[ne];if(F)if(d.hasOwn(w,ne))Ae!==w[ne]&&(w[ne]=Ae,q=!0);else{var De=d.camelize(ne);S[De]=Et(F,V,De,Ae,i,!1)}else Ae!==w[ne]&&(w[ne]=Ae,q=!0)}}}else{Wt(i,a,S,w)&&(q=!0);var Xe;for(var ft in V)(!a||!d.hasOwn(a,ft)&&((Xe=d.hyphenate(ft))===ft||!d.hasOwn(a,Xe)))&&(F?f&&(f[ft]!==void 0||f[Xe]!==void 0)&&(S[ft]=Et(F,V,ft,void 0,i,!0)):delete S[ft]);if(w!==V)for(var Te in w)(!a||!d.hasOwn(a,Te)&&!0)&&(delete w[Te],q=!0)}q&&m.trigger(i,"set","$attrs"),nn(a||{},S,i)}function Wt(i,a,f,p){var[S,w]=i.propsOptions,N=!1,V;if(a){for(var F in a)if(!d.isReservedProp(F)){var q=a[F],be=void 0;S&&d.hasOwn(S,be=d.camelize(F))?!w||!w.includes(be)?f[be]=q:(V||(V={}))[be]=q:On(i.emitsOptions,F)||(!(F in p)||q!==p[F])&&(p[F]=q,N=!0)}}if(w)for(var ae=m.toRaw(f),ne=V||d.EMPTY_OBJ,Ae=0;Ae<w.length;Ae++){var De=w[Ae];f[De]=Et(S,ae,De,ne[De],i,!d.hasOwn(ne,De))}return N}function Et(i,a,f,p,S,w){var N=i[f];if(N!=null){var V=d.hasOwn(N,"default");if(V&&p===void 0){var F=N.default;if(N.type!==Function&&d.isFunction(F)){var{propsDefaults:q}=S;f in q?p=q[f]:(_i(S),p=q[f]=F.call(null,a),aa())}else p=F}N[0]&&(w&&!V?p=!1:N[1]&&(p===""||p===d.hyphenate(f))&&(p=!0))}return p}function Je(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=a.propsCache,S=p.get(i);if(S)return S;var w=i.props,N={},V=[],F=!1;if(!d.isFunction(i)){var q=Ee=>{F=!0;var[Le,Fe]=Je(Ee,a,!0);d.extend(N,Le),Fe&&V.push(...Fe)};!f&&a.mixins.length&&a.mixins.forEach(q),i.extends&&q(i.extends),i.mixins&&i.mixins.forEach(q)}if(!w&&!F)return d.isObject(i)&&p.set(i,d.EMPTY_ARR),d.EMPTY_ARR;if(d.isArray(w))for(var be=0;be<w.length;be++){d.isString(w[be])||pe("props must be strings when using array syntax.",w[be]);var ae=d.camelize(w[be]);Mt(ae)&&(N[ae]=d.EMPTY_OBJ)}else if(w){d.isObject(w)||pe("invalid props options",w);for(var ne in w){var Ae=d.camelize(ne);if(Mt(Ae)){var De=w[ne],Xe=N[Ae]=d.isArray(De)||d.isFunction(De)?{type:De}:Object.assign({},De);if(Xe){var ft=At(Boolean,Xe.type),Te=At(String,Xe.type);Xe[0]=ft>-1,Xe[1]=Te<0||ft<Te,(ft>-1||d.hasOwn(Xe,"default"))&&V.push(Ae)}}}}var se=[N,V];return d.isObject(i)&&p.set(i,se),se}function Mt(i){return i[0]!=="$"?!0:(pe('Invalid prop name: "'.concat(i,'" is a reserved property.')),!1)}function _n(i){var a=i&&i.toString().match(/^\s*(function|class) (\w+)/);return a?a[2]:i===null?"null":""}function wn(i,a){return _n(i)===_n(a)}function At(i,a){return d.isArray(a)?a.findIndex(f=>wn(f,i)):d.isFunction(a)&&wn(a,i)?0:-1}function nn(i,a,f){var p=m.toRaw(a),S=f.propsOptions[0];for(var w in S){var N=S[w];N!=null&&ar(w,p[w],N,!d.hasOwn(i,w)&&!d.hasOwn(i,d.hyphenate(w)))}}function ar(i,a,f,p){var{type:S,required:w,validator:N}=f;if(w&&p){pe('Missing required prop: "'+i+'"');return}if(!(a==null&&!f.required)){if(S!=null&&S!==!0){for(var V=!1,F=d.isArray(S)?S:[S],q=[],be=0;be<F.length&&!V;be++){var{valid:ae,expectedType:ne}=Gt(a,F[be]);q.push(ne||""),V=ae}if(!V){pe(Rn(i,a,q));return}}N&&!N(a)&&pe('Invalid prop: custom validator check failed for prop "'+i+'".')}}var Kt=d.makeMap("String,Number,Boolean,Function,Symbol,BigInt");function Gt(i,a){var f,p=_n(a);if(Kt(p)){var S=typeof i;f=S===p.toLowerCase(),!f&&S==="object"&&(f=i instanceof a)}else p==="Object"?f=d.isObject(i):p==="Array"?f=d.isArray(i):p==="null"?f=i===null:f=i instanceof a;return{valid:f,expectedType:p}}function Rn(i,a,f){var p='Invalid prop: type check failed for prop "'.concat(i,'".')+" Expected ".concat(f.map(d.capitalize).join(" | ")),S=f[0],w=d.toRawType(a),N=er(a,S),V=er(a,w);return f.length===1&&Ba(S)&&!bs(S,w)&&(p+=" with value ".concat(N)),p+=", got ".concat(w," "),Ba(w)&&(p+="with value ".concat(V,".")),p}function er(i,a){return a==="String"?'"'.concat(i,'"'):a==="Number"?"".concat(Number(i)):"".concat(i)}function Ba(i){var a=["string","number","boolean"];return a.some(f=>i.toLowerCase()===f)}function bs(){for(var i=arguments.length,a=new Array(i),f=0;f<i;f++)a[f]=arguments[f];return a.some(p=>p.toLowerCase()==="boolean")}var Ma=i=>i[0]==="_"||i==="$stable",Ao=i=>d.isArray(i)?i.map(mr):[mr(i)],ys=(i,a,f)=>{if(a._n)return a;var p=ur(function(){return Sn&&pe('Slot "'.concat(i,'" invoked outside of the render function: ')+"this will not track dependencies used in the slot. Invoke the slot function inside the render function instead."),Ao(a(...arguments))},f);return p._c=!1,p},ei=(i,a,f)=>{var p=i._ctx;for(var S in i)if(!Ma(S)){var w=i[S];d.isFunction(w)?a[S]=ys(S,w,p):w!=null&&function(){pe('Non-function value encountered for slot "'.concat(S,'". ')+"Prefer function slots for better performance.");var N=Ao(w);a[S]=()=>N}()}},Da=(i,a)=>{Y(i.vnode)||pe("Non-function value encountered for default slot. Prefer function slots for better performance.");var f=Ao(a);i.slots.default=()=>f},ia=(i,a)=>{if(i.vnode.shapeFlag&32){var f=a._;f?(i.slots=m.toRaw(a),d.def(a,"_",f)):ei(a,i.slots={})}else i.slots={},a&&Da(i,a);d.def(i.slots,As,1)},tr=(i,a,f)=>{var{vnode:p,slots:S}=i,w=!0,N=d.EMPTY_OBJ;if(p.shapeFlag&32){var V=a._;V?Rr?d.extend(S,a):f&&V===1?w=!1:(d.extend(S,a),!f&&V===1&&delete S._):(w=!a.$stable,ei(a,S)),N=a}else a&&(Da(i,a),N={default:1});if(w)for(var F in S)!Ma(F)&&!(F in N)&&delete S[F]};function Ja(){return{app:null,config:{isNativeTag:d.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var cl=0;function Fo(i,a){return function(p){var S=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;d.isFunction(p)||(p=Object.assign({},p)),S!=null&&!d.isObject(S)&&(pe("root props passed to app.mount() must be an object."),S=null);var w=Ja(),N=new Set,V=!1,F=w.app={_uid:cl++,_component:p,_props:S,_container:null,_context:w,_instance:null,version:ml,get config(){return w.config},set config(q){pe("app.config cannot be replaced. Modify individual options instead.")},use(q){for(var be=arguments.length,ae=new Array(be>1?be-1:0),ne=1;ne<be;ne++)ae[ne-1]=arguments[ne];return N.has(q)?pe("Plugin has already been applied to target app."):q&&d.isFunction(q.install)?(N.add(q),q.install(F,...ae)):d.isFunction(q)?(N.add(q),q(F,...ae)):pe('A plugin must either be a function or an object with an "install" function.'),F},mixin(q){return w.mixins.includes(q)?pe("Mixin has already been applied to target app"+(q.name?": ".concat(q.name):"")):w.mixins.push(q),F},component(q,be){return Ua(q,w.config),be?(w.components[q]&&pe('Component "'.concat(q,'" has already been registered in target app.')),w.components[q]=be,F):w.components[q]},directive(q,be){return il(q),be?(w.directives[q]&&pe('Directive "'.concat(q,'" has already been registered in target app.')),w.directives[q]=be,F):w.directives[q]},mount(q,be,ae){if(V)pe("App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. `const createMyApp = () => createApp(App)`");else{q.__vue_app__&&pe("There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling `app.unmount()` first.");var ne=$n(p,S);return ne.appContext=w,w.reload=()=>{i(Ki(ne),q,ae)},be&&a?a(ne,q):i(ne,q,ae),V=!0,F._container=q,q.__vue_app__=F,F._instance=ne.component,Ko(F,ml),Ns(ne.component)||ne.component.proxy}},unmount(){V?(i(null,F._container),F._instance=null,xo(F),delete F._container.__vue_app__):pe("Cannot unmount an app that is not mounted.")},provide(q,be){return q in w.provides&&pe('App already provides property with key "'.concat(String(q),'". ')+"It will be overwritten with the new value."),w.provides[q]=be,F}};return F}}function Wi(i,a,f,p){var S=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(d.isArray(i)){i.forEach((Xe,ft)=>Wi(Xe,a&&(d.isArray(a)?a[ft]:a),f,p,S));return}if(!(de(p)&&!S)){var w=p.shapeFlag&4?Ns(p.component)||p.component.proxy:p.el,N=S?null:w,{i:V,r:F}=i;if(!V){pe("Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.");return}var q=a&&a.r,be=V.refs===d.EMPTY_OBJ?V.refs={}:V.refs,ae=V.setupState;if(q!=null&&q!==F&&(d.isString(q)?(be[q]=null,d.hasOwn(ae,q)&&(ae[q]=null)):m.isRef(q)&&(q.value=null)),d.isFunction(F))fn(F,V,12,[N,be]);else{var ne=d.isString(F),Ae=m.isRef(F);if(ne||Ae){var De=()=>{if(i.f){var Xe=ne?d.hasOwn(ae,F)?ae[F]:be[F]:F.value;S?d.isArray(Xe)&&d.remove(Xe,w):d.isArray(Xe)?Xe.includes(w)||Xe.push(w):ne?(be[F]=[w],d.hasOwn(ae,F)&&(ae[F]=be[F])):(F.value=[w],i.k&&(be[i.k]=F.value))}else ne?(be[F]=N,d.hasOwn(ae,F)&&(ae[F]=N)):Ae?(F.value=N,i.k&&(be[i.k]=N)):pe("Invalid template ref type:",F,"(".concat(typeof F,")"))};N?(De.id=-1,Ar(De,f)):De()}else pe("Invalid template ref type:",F,"(".concat(typeof F,")"))}}}var Un=!1,Gi=i=>/svg/.test(i.namespaceURI)&&i.tagName!=="foreignObject",vi=i=>i.nodeType===8;function Ii(i){var{mt:a,p:f,o:{patchProp:p,createText:S,nextSibling:w,parentNode:N,remove:V,insert:F,createComment:q}}=i,be=(Te,se)=>{if(!se.hasChildNodes()){pe("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),f(null,Te,se),Er(),se._vnode=Te;return}Un=!1,ae(se.firstChild,Te,null,null,null),Er(),se._vnode=Te,Un&&console.error("Hydration completed but contains mismatches.")},ae=function(Te,se,Ee,Le,Fe){var it=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,Tt=vi(Te)&&Te.data==="[",Qe=()=>Xe(Te,se,Ee,Le,Fe,Tt),{type:B,ref:j,shapeFlag:ie,patchFlag:ye}=se,oe=Te.nodeType;se.el=Te,ye===-2&&(it=!1,se.dynamicChildren=null);var ge=null;switch(B){case xt:oe!==3?se.children===""?(F(se.el=S("",Te.parentNode),N(Te),Te),ge=Te):ge=Qe():(Te.data!==se.children&&(Un=!0,pe("Hydration text mismatch:"+`
- Client: `.concat(JSON.stringify(Te.data))+`
- Server: `.concat(JSON.stringify(se.children))),Te.data=se.children),ge=w(Te));break;case Yt:oe!==8||Tt?ge=Qe():ge=w(Te);break;case Wn:if(Tt&&(Te=w(Te),oe=Te.nodeType),oe===1||oe===3){ge=Te;for(var et=!se.children.length,Ge=0;Ge<se.staticCount;Ge++)et&&(se.children+=ge.nodeType===1?ge.outerHTML:ge.data),Ge===se.staticCount-1&&(se.anchor=ge),ge=w(ge);return Tt?w(ge):ge}else Qe();break;case ut:Tt?ge=De(Te,se,Ee,Le,Fe,it):ge=Qe();break;default:if(ie&1)oe!==1||se.type.toLowerCase()!==Te.tagName.toLowerCase()?ge=Qe():ge=ne(Te,se,Ee,Le,Fe,it);else if(ie&6){se.slotScopeIds=Fe;var tt=N(Te);if(a(se,tt,null,Ee,Le,Gi(tt),it),ge=Tt?ft(Te):w(Te),ge&&vi(ge)&&ge.data==="teleport end"&&(ge=w(ge)),de(se)){var Ve;Tt?(Ve=$n(ut),Ve.anchor=ge?ge.previousSibling:tt.lastChild):Ve=Te.nodeType===3?Is(""):$n("div"),Ve.el=Te,se.component.subTree=Ve}}else ie&64?oe!==8?ge=Qe():ge=se.type.hydrate(Te,se,Ee,Le,Fe,it,i,Ae):ie&128?ge=se.type.hydrate(Te,se,Ee,Le,Gi(N(Te)),Fe,it,i,ae):pe("Invalid HostVNode type:",B,"(".concat(typeof B,")"))}return j!=null&&Wi(j,null,Le,se),ge},ne=(Te,se,Ee,Le,Fe,it)=>{it=it||!!se.dynamicChildren;var{type:Tt,props:Qe,patchFlag:B,shapeFlag:j,dirs:ie}=se,ye=Tt==="input"&&ie||Tt==="option";{if(ie&&Ti(se,null,Ee,"created"),Qe)if(ye||!it||B&(16|32))for(var oe in Qe)(ye&&oe.endsWith("value")||d.isOn(oe)&&!d.isReservedProp(oe))&&p(Te,oe,null,Qe[oe],!1,void 0,Ee);else Qe.onClick&&p(Te,"onClick",null,Qe.onClick,!1,void 0,Ee);var ge;if((ge=Qe&&Qe.onVnodeBeforeMount)&&jr(ge,Ee,se),ie&&Ti(se,null,Ee,"beforeMount"),((ge=Qe&&Qe.onVnodeMounted)||ie)&&ao(()=>{ge&&jr(ge,Ee,se),ie&&Ti(se,null,Ee,"mounted")},Le),j&16&&!(Qe&&(Qe.innerHTML||Qe.textContent)))for(var et=Ae(Te.firstChild,se,Te,Ee,Le,Fe,it),Ge=!1;et;){Un=!0,Ge||(pe("Hydration children mismatch in <".concat(se.type,">: ")+"server rendered element contains more child nodes than client vdom."),Ge=!0);var tt=et;et=et.nextSibling,V(tt)}else j&8&&Te.textContent!==se.children&&(Un=!0,pe("Hydration text content mismatch in <".concat(se.type,`>:
`)+"- Client: ".concat(Te.textContent,`
`)+"- Server: ".concat(se.children)),Te.textContent=se.children)}return Te.nextSibling},Ae=(Te,se,Ee,Le,Fe,it,Tt)=>{Tt=Tt||!!se.dynamicChildren;for(var Qe=se.children,B=Qe.length,j=!1,ie=0;ie<B;ie++){var ye=Tt?Qe[ie]:Qe[ie]=mr(Qe[ie]);if(Te)Te=ae(Te,ye,Le,Fe,it,Tt);else{if(ye.type===xt&&!ye.children)continue;Un=!0,j||(pe("Hydration children mismatch in <".concat(Ee.tagName.toLowerCase(),">: ")+"server rendered element contains fewer child nodes than client vdom."),j=!0),f(null,ye,Ee,null,Le,Fe,Gi(Ee),it)}}return Te},De=(Te,se,Ee,Le,Fe,it)=>{var{slotScopeIds:Tt}=se;Tt&&(Fe=Fe?Fe.concat(Tt):Tt);var Qe=N(Te),B=Ae(w(Te),se,Qe,Ee,Le,Fe,it);return B&&vi(B)&&B.data==="]"?w(se.anchor=B):(Un=!0,F(se.anchor=q("]",Qe),Qe,B),B)},Xe=(Te,se,Ee,Le,Fe,it)=>{if(Un=!0,pe(`Hydration node mismatch:
- Client vnode:`,se.type,`
- Server rendered DOM:`,Te,Te.nodeType===3?"(text)":vi(Te)&&Te.data==="["?"(start of fragment)":""),se.el=null,it)for(var Tt=ft(Te);;){var Qe=w(Te);if(Qe&&Qe!==Tt)V(Qe);else break}var B=w(Te),j=N(Te);return V(Te),f(null,se,j,B,Ee,Le,Gi(j),Fe),B},ft=Te=>{for(var se=0;Te;)if(Te=w(Te),Te&&vi(Te)&&(Te.data==="["&&se++,Te.data==="]")){if(se===0)return w(Te);se--}return Te};return[be,ae]}var ti,$r;function Or(i,a){i.appContext.config.performance&&Es()&&$r.mark("vue-".concat(a,"-").concat(i.uid)),wr(i,a,Es()?$r.now():Date.now())}function Pi(i,a){if(i.appContext.config.performance&&Es()){var f="vue-".concat(a,"-").concat(i.uid),p=f+":end";$r.mark(p),$r.measure("<".concat(ks(i,i.type),"> ").concat(a),f,p),$r.clearMarks(f),$r.clearMarks(p)}ci(i,a,Es()?$r.now():Date.now())}function Es(){return ti!==void 0||(typeof window!="undefined"&&window.performance?(ti=!0,$r=window.performance):ti=!1),ti}function hr(){var i=[];if(i.length){var a=i.length>1;console.warn("Feature flag".concat(a?"s":""," ").concat(i.join(", ")," ").concat(a?"are":"is"," not explicitly defined. You are running the esm-bundler build of Vue, ")+`which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`)}}var Ar=ao;function zs(i){return Vo(i)}function ni(i){return Vo(i,Ii)}function Vo(i,a){hr();var f=d.getGlobalThis();f.__VUE__=!0,Kn(f.__VUE_DEVTOOLS_GLOBAL_HOOK__,f);var{insert:p,remove:S,patchProp:w,forcePatchProp:N,createElement:V,createText:F,createComment:q,setText:be,setElementText:ae,parentNode:ne,nextSibling:Ae,setScopeId:De=d.NOOP,insertStaticContent:Xe}=i,ft=function(G,X,Ce){var $e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,ze=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,rt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,mt=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,ot=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,ct=arguments.length>8&&arguments[8]!==void 0?arguments[8]:Rr?!1:!!X.dynamicChildren;if(G!==X){G&&!ri(G,X)&&($e=gn(G),qt(G,ze,rt,!0),G=null),X.patchFlag===-2&&(ct=!1,X.dynamicChildren=null);var{type:Ye,ref:$t,shapeFlag:Ft}=X;switch(Ye){case xt:Te(G,X,Ce,$e);break;case Yt:se(G,X,Ce,$e);break;case Wn:G==null?Ee(X,Ce,$e,mt):Le(G,X,Ce,mt);break;case ut:ge(G,X,Ce,$e,ze,rt,mt,ot,ct);break;default:Ft&1?Tt(G,X,Ce,$e,ze,rt,mt,ot,ct):Ft&6?et(G,X,Ce,$e,ze,rt,mt,ot,ct):Ft&64||Ft&128?Ye.process(G,X,Ce,$e,ze,rt,mt,ot,ct,yi):pe("Invalid VNode type:",Ye,"(".concat(typeof Ye,")"))}$t!=null&&ze&&Wi($t,G&&G.ref,rt,X||G,!X)}},Te=(G,X,Ce,$e)=>{if(G==null)p(X.el=F(X.children,Ce),Ce,$e);else{var ze=X.el=G.el;X.children!==G.children&&be(ze,X.children)}},se=(G,X,Ce,$e)=>{G==null?p(X.el=q(X.children||"",Ce),Ce,$e):X.el=G.el},Ee=(G,X,Ce,$e)=>{[G.el,G.anchor]=Xe(G.children,X,Ce,$e,G.el,G.anchor)},Le=(G,X,Ce,$e)=>{if(X.children!==G.children){var ze=Ae(G.anchor);it(G),[X.el,X.anchor]=Xe(X.children,Ce,ze,$e)}else X.el=G.el,X.anchor=G.anchor},Fe=(G,X,Ce)=>{for(var{el:$e,anchor:ze}=G,rt;$e&&$e!==ze;)rt=Ae($e),p($e,X,Ce),$e=rt;p(ze,X,Ce)},it=G=>{for(var{el:X,anchor:Ce}=G,$e;X&&X!==Ce;)$e=Ae(X),S(X),X=$e;S(Ce)},Tt=(G,X,Ce,$e,ze,rt,mt,ot,ct)=>{mt=mt||X.type==="svg",G==null?Qe(X,Ce,$e,ze,rt,mt,ot,ct):ie(G,X,ze,rt,mt,ot,ct)},Qe=(G,X,Ce,$e,ze,rt,mt,ot)=>{var ct,Ye,{type:$t,props:Ft,shapeFlag:Ht,transition:Cn,dirs:Wr}=G;if(ct=G.el=V(G.type,X),Ht&8?ae(ct,G.children):Ht&16&&j(G.children,ct,null,$e,ze,rt&&$t!=="foreignObject",mt,ot),Wr&&Ti(G,null,$e,"created"),B(ct,G,G.scopeId,mt,$e),Ft){for(var rr in Ft)rr!=="value"&&!d.isReservedProp(rr)&&w(ct,rr,null,Ft[rr],rt,G.children,$e,ze,Tn);"value"in Ft&&w(ct,"value",null,Ft.value),(Ye=Ft.onVnodeBeforeMount)&&jr(Ye,$e,G)}Object.defineProperty(ct,"__vnode",{value:G,enumerable:!1}),Object.defineProperty(ct,"__vueParentComponent",{value:$e,enumerable:!1}),Wr&&Ti(G,null,$e,"beforeMount");var Ei=(!ze||ze&&!ze.pendingBranch)&&Cn&&!Cn.persisted;Ei&&Cn.beforeEnter(ct),p(ct,X,Ce),((Ye=Ft&&Ft.onVnodeMounted)||Ei||Wr)&&Ar(()=>{Ye&&jr(Ye,$e,G),Ei&&Cn.enter(ct),Wr&&Ti(G,null,$e,"mounted")},ze)},B=(G,X,Ce,$e,ze)=>{if(Ce&&De(G,Ce),$e)for(var rt=0;rt<$e.length;rt++)De(G,$e[rt]);if(ze){var mt=ze.subTree;if(mt.patchFlag>0&&mt.patchFlag&2048&&(mt=Eo(mt.children)||mt),X===mt){var ot=ze.vnode;B(G,ot,ot.scopeId,ot.slotScopeIds,ze.parent)}}},j=function(G,X,Ce,$e,ze,rt,mt,ot){for(var ct=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,Ye=ct;Ye<G.length;Ye++){var $t=G[Ye]=ot?Hr(G[Ye]):mr(G[Ye]);ft(null,$t,X,Ce,$e,ze,rt,mt,ot)}},ie=(G,X,Ce,$e,ze,rt,mt)=>{var ot=X.el=G.el,{patchFlag:ct,dynamicChildren:Ye,dirs:$t}=X;ct|=G.patchFlag&16;var Ft=G.props||d.EMPTY_OBJ,Ht=X.props||d.EMPTY_OBJ,Cn;Ce&&Yi(Ce,!1),(Cn=Ht.onVnodeBeforeUpdate)&&jr(Cn,Ce,X,G),$t&&Ti(X,G,Ce,"beforeUpdate"),Ce&&Yi(Ce,!0),Rr&&(ct=0,mt=!1,Ye=null);var Wr=ze&&X.type!=="foreignObject";if(Ye?(ye(G.dynamicChildren,Ye,ot,Ce,$e,Wr,rt),Ce&&Ce.type.__hmrId&&Ea(G,X)):mt||Bt(G,X,ot,null,Ce,$e,Wr,rt,!1),ct>0){if(ct&16)oe(ot,X,Ft,Ht,Ce,$e,ze);else if(ct&2&&Ft.class!==Ht.class&&w(ot,"class",null,Ht.class,ze),ct&4&&w(ot,"style",Ft.style,Ht.style,ze),ct&8)for(var rr=X.dynamicProps,Ei=0;Ei<rr.length;Ei++){var fa=rr[Ei],Bs=Ft[fa],tl=Ht[fa];(tl!==Bs||fa==="value"||N&&N(ot,fa))&&w(ot,fa,Bs,tl,ze,G.children,Ce,$e,Tn)}ct&1&&G.children!==X.children&&ae(ot,X.children)}else!mt&&Ye==null&&oe(ot,X,Ft,Ht,Ce,$e,ze);((Cn=Ht.onVnodeUpdated)||$t)&&Ar(()=>{Cn&&jr(Cn,Ce,X,G),$t&&Ti(X,G,Ce,"updated")},$e)},ye=(G,X,Ce,$e,ze,rt,mt)=>{for(var ot=0;ot<X.length;ot++){var ct=G[ot],Ye=X[ot],$t=ct.el&&(ct.type===ut||!ri(ct,Ye)||ct.shapeFlag&(6|64))?ne(ct.el):Ce;ft(ct,Ye,$t,null,$e,ze,rt,mt,!0)}},oe=(G,X,Ce,$e,ze,rt,mt)=>{if(Ce!==$e){if(Ce!==d.EMPTY_OBJ)for(var ot in Ce)!d.isReservedProp(ot)&&!(ot in $e)&&w(G,ot,Ce[ot],null,mt,X.children,ze,rt,Tn);for(var ct in $e)if(!d.isReservedProp(ct)){var Ye=$e[ct],$t=Ce[ct];(Ye!==$t&&ct!=="value"||N&&N(G,ct))&&w(G,ct,$t,Ye,mt,X.children,ze,rt,Tn)}"value"in $e&&w(G,"value",Ce.value,$e.value)}},ge=(G,X,Ce,$e,ze,rt,mt,ot,ct)=>{var Ye=X.el=G?G.el:F("",Ce),$t=X.anchor=G?G.anchor:F("",Ce),{patchFlag:Ft,dynamicChildren:Ht,slotScopeIds:Cn}=X;(Rr||Ft&2048)&&(Ft=0,ct=!1,Ht=null),Cn&&(ot=ot?ot.concat(Cn):Cn),G==null?(p(Ye,Ce,$e),p($t,Ce,$e),j(X.children,Ce,$t,ze,rt,mt,ot,ct)):Ft>0&&Ft&64&&Ht&&G.dynamicChildren?(ye(G.dynamicChildren,Ht,Ce,ze,rt,mt,ot),ze&&ze.type.__hmrId?Ea(G,X):(X.key!=null||ze&&X===ze.subTree)&&Ea(G,X,!0)):Bt(G,X,Ce,$t,ze,rt,mt,ot,ct)},et=(G,X,Ce,$e,ze,rt,mt,ot,ct)=>{X.slotScopeIds=ot,G==null?X.shapeFlag&512?ze.ctx.activate(X,Ce,$e,mt,ct):Ge(X,Ce,$e,ze,rt,mt,ct):tt(G,X,ct)},Ge=(G,X,Ce,$e,ze,rt,mt)=>{var ot=G.component=Bn(G,$e,ze);if(ot.type.__hmrId&&Yr(ot),Pt(G),Or(ot,"mount"),Y(G)&&(ot.ctx.renderer=yi),Or(ot,"init"),jo(ot),Pi(ot,"init"),ot.asyncDep){if(ze&&ze.registerDep(ot,Ve),!G.el){var ct=ot.subTree=$n(Yt);se(null,ct,X,Ce)}return}if(Ve(ot,G,X,Ce,ze,rt,mt),ot.$wxsModules){var Ye=R.resolveOwnerEl(ot,!0);Ye.length&&Ye.forEach($t=>{$t.setAttribute(R.ATTR_V_OWNER_ID,ot.uid);var{$renderjsModules:Ft}=ot.type;Ft&&$t.setAttribute(R.ATTR_V_RENDERJS,Ft)})}en(),Pi(ot,"mount")},tt=(G,X,Ce)=>{var $e=X.component=G.component;if(wo(G,X,Ce))if($e.asyncDep&&!$e.asyncResolved){Pt(X),Lt($e,X,Ce),en();return}else $e.next=X,Ur($e.update),$e.update();else X.el=G.el,$e.vnode=X},Ve=(G,X,Ce,$e,ze,rt,mt)=>{var ot=()=>{if(G.isMounted){var{next:_r,bu:No,u:is,parent:ko,vnode:os}=G,nl=_r,as;Pt(_r||G.vnode),Yi(G,!1),_r?(_r.el=os.el,Lt(G,_r,mt)):_r=os,No&&d.invokeArrayFns(No),(as=_r.props&&_r.props.onVnodeBeforeUpdate)&&jr(as,ko,_r,os),Yi(G,!0),Or(G,"render");var Ms=bo(G);Pi(G,"render");var Wa=G.subTree;G.subTree=Ms,Or(G,"patch"),ft(Wa,Ms,ne(Wa.el),gn(Wa),G,ze,rt),Pi(G,"patch"),_r.el=Ms.el,nl===null&&fi(G,Ms.el),is&&Ar(is,ze),(as=_r.props&&_r.props.onVnodeUpdated)&&Ar(()=>jr(as,ko,_r,os),ze),io(G),en()}else{var $t,{el:Ft,props:Ht}=X,{bm:Cn,m:Wr,parent:rr}=G,Ei=de(X);if(Yi(G,!1),Cn&&d.invokeArrayFns(Cn),!Ei&&($t=Ht&&Ht.onVnodeBeforeMount)&&jr($t,rr,X),Yi(G,!0),Ft&&ua){var fa=()=>{Or(G,"render"),G.subTree=bo(G),Pi(G,"render"),Or(G,"hydrate"),ua(Ft,G.subTree,G,ze,null),Pi(G,"hydrate")};Ei?X.type.__asyncLoader().then(()=>!G.isUnmounted&&fa()):fa()}else{Or(G,"render");var Bs=G.subTree=bo(G);Pi(G,"render"),Or(G,"patch"),ft(null,Bs,Ce,$e,G,ze,rt),Pi(G,"patch"),X.el=Bs.el}if(Wr&&Ar(Wr,ze),!Ei&&($t=Ht&&Ht.onVnodeMounted)){var tl=X;Ar(()=>jr($t,rr,tl),ze)}(X.shapeFlag&256||rr&&de(rr.vnode)&&rr.vnode.shapeFlag&256)&&G.a&&Ar(G.a,ze),G.isMounted=!0,ro(G),X=Ce=$e=null}},ct=G.effect=new m.ReactiveEffect(ot,()=>Ln(Ye),G.scope),Ye=G.update=()=>ct.run();Ye.id=G.uid,Yi(G,!0),ct.onTrack=G.rtc?$t=>d.invokeArrayFns(G.rtc,$t):void 0,ct.onTrigger=G.rtg?$t=>d.invokeArrayFns(G.rtg,$t):void 0,Ye.ownerInstance=G,Ye()},Lt=(G,X,Ce)=>{X.component=G;var $e=G.vnode.props;G.vnode=X,G.next=null,Ct(G,X.props,$e,Ce),tr(G,X.children,Ce),m.pauseTracking(),lr(),m.resetTracking()},Bt=function(G,X,Ce,$e,ze,rt,mt,ot){var ct=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,Ye=G&&G.children,$t=G?G.shapeFlag:0,Ft=X.children,{patchFlag:Ht,shapeFlag:Cn}=X;if(Ht>0){if(Ht&128){un(Ye,Ft,Ce,$e,ze,rt,mt,ot,ct);return}else if(Ht&256){Ut(Ye,Ft,Ce,$e,ze,rt,mt,ot,ct);return}}Cn&8?($t&16&&Tn(Ye,ze,rt),Ft!==Ye&&ae(Ce,Ft)):$t&16?Cn&16?un(Ye,Ft,Ce,$e,ze,rt,mt,ot,ct):Tn(Ye,ze,rt,!0):($t&8&&ae(Ce,""),Cn&16&&j(Ft,Ce,$e,ze,rt,mt,ot,ct))},Ut=(G,X,Ce,$e,ze,rt,mt,ot,ct)=>{G=G||d.EMPTY_ARR,X=X||d.EMPTY_ARR;var Ye=G.length,$t=X.length,Ft=Math.min(Ye,$t),Ht;for(Ht=0;Ht<Ft;Ht++){var Cn=X[Ht]=ct?Hr(X[Ht]):mr(X[Ht]);ft(G[Ht],Cn,Ce,null,ze,rt,mt,ot,ct)}Ye>$t?Tn(G,ze,rt,!0,!1,Ft):j(X,Ce,$e,ze,rt,mt,ot,ct,Ft)},un=(G,X,Ce,$e,ze,rt,mt,ot,ct)=>{for(var Ye=0,$t=X.length,Ft=G.length-1,Ht=$t-1;Ye<=Ft&&Ye<=Ht;){var Cn=G[Ye],Wr=X[Ye]=ct?Hr(X[Ye]):mr(X[Ye]);if(ri(Cn,Wr))ft(Cn,Wr,Ce,null,ze,rt,mt,ot,ct);else break;Ye++}for(;Ye<=Ft&&Ye<=Ht;){var rr=G[Ft],Ei=X[Ht]=ct?Hr(X[Ht]):mr(X[Ht]);if(ri(rr,Ei))ft(rr,Ei,Ce,null,ze,rt,mt,ot,ct);else break;Ft--,Ht--}if(Ye>Ft){if(Ye<=Ht)for(var fa=Ht+1,Bs=fa<$t?X[fa].el:$e;Ye<=Ht;)ft(null,X[Ye]=ct?Hr(X[Ye]):mr(X[Ye]),Ce,Bs,ze,rt,mt,ot,ct),Ye++}else if(Ye>Ht)for(;Ye<=Ft;)qt(G[Ye],ze,rt,!0),Ye++;else{var tl=Ye,_r=Ye,No=new Map;for(Ye=_r;Ye<=Ht;Ye++){var is=X[Ye]=ct?Hr(X[Ye]):mr(X[Ye]);is.key!=null&&(No.has(is.key)&&pe("Duplicate keys found during update:",JSON.stringify(is.key),"Make sure keys are unique."),No.set(is.key,Ye))}var ko,os=0,nl=Ht-_r+1,as=!1,Ms=0,Wa=new Array(nl);for(Ye=0;Ye<nl;Ye++)Wa[Ye]=0;for(Ye=tl;Ye<=Ft;Ye++){var ss=G[Ye];if(os>=nl){qt(ss,ze,rt,!0);continue}var Ga=void 0;if(ss.key!=null)Ga=No.get(ss.key);else for(ko=_r;ko<=Ht;ko++)if(Wa[ko-_r]===0&&ri(ss,X[ko])){Ga=ko;break}Ga===void 0?qt(ss,ze,rt,!0):(Wa[Ga-_r]=Ye+1,Ga>=Ms?Ms=Ga:as=!0,ft(ss,X[Ga],Ce,null,ze,rt,mt,ot,ct),os++)}var eu=as?La(Wa):d.EMPTY_ARR;for(ko=eu.length-1,Ye=nl-1;Ye>=0;Ye--){var Cc=_r+Ye,tu=X[Cc],nu=Cc+1<$t?X[Cc+1].el:$e;Wa[Ye]===0?ft(null,tu,Ce,nu,ze,rt,mt,ot,ct):as&&(ko<0||Ye!==eu[ko]?Yn(tu,Ce,nu,2):ko--)}}},Yn=function(G,X,Ce,$e){var ze=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:rt,type:mt,transition:ot,children:ct,shapeFlag:Ye}=G;if(Ye&6){Yn(G.component.subTree,X,Ce,$e);return}if(Ye&128){G.suspense.move(X,Ce,$e);return}if(Ye&64){mt.move(G,X,Ce,yi);return}if(mt===ut){p(rt,X,Ce);for(var $t=0;$t<ct.length;$t++)Yn(ct[$t],X,Ce,$e);p(G.anchor,X,Ce);return}if(mt===Wn){Fe(G,X,Ce);return}var Ft=$e!==2&&Ye&1&&ot;if(Ft)if($e===0)ot.beforeEnter(rt),p(rt,X,Ce),Ar(()=>ot.enter(rt),ze);else{var{leave:Ht,delayLeave:Cn,afterLeave:Wr}=ot,rr=()=>p(rt,X,Ce),Ei=()=>{Ht(rt,()=>{rr(),Wr&&Wr()})};Cn?Cn(rt,rr,Ei):Ei()}else p(rt,X,Ce)},qt=function(G,X,Ce){var $e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,ze=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:rt,props:mt,ref:ot,children:ct,dynamicChildren:Ye,shapeFlag:$t,patchFlag:Ft,dirs:Ht}=G;if(ot!=null&&Wi(ot,null,Ce,G,!0),$t&256){X.ctx.deactivate(G);return}var Cn=$t&1&&Ht,Wr=!de(G),rr;if(Wr&&(rr=mt&&mt.onVnodeBeforeUnmount)&&jr(rr,X,G),$t&6)sn(G.component,Ce,$e);else{if($t&128){G.suspense.unmount(Ce,$e);return}Cn&&Ti(G,null,X,"beforeUnmount"),$t&64?G.type.remove(G,X,Ce,ze,yi,$e):Ye&&(rt!==ut||Ft>0&&Ft&64)?Tn(Ye,X,Ce,!1,!0):(rt===ut&&Ft&(128|256)||!ze&&$t&16)&&Tn(ct,X,Ce),$e&&bn(G)}(Wr&&(rr=mt&&mt.onVnodeUnmounted)||Cn)&&Ar(()=>{rr&&jr(rr,X,G),Cn&&Ti(G,null,X,"unmounted")},Ce)},bn=G=>{var{type:X,el:Ce,anchor:$e,transition:ze}=G;if(X===ut){G.patchFlag>0&&G.patchFlag&2048&&ze&&!ze.persisted?G.children.forEach(Ye=>{Ye.type===Yt?S(Ye.el):bn(Ye)}):bi(Ce,$e);return}if(X===Wn){it(G);return}var rt=()=>{S(Ce),ze&&!ze.persisted&&ze.afterLeave&&ze.afterLeave()};if(G.shapeFlag&1&&ze&&!ze.persisted){var{leave:mt,delayLeave:ot}=ze,ct=()=>mt(Ce,rt);ot?ot(G.el,rt,ct):ct()}else rt()},bi=(G,X)=>{for(var Ce;G!==X;)Ce=Ae(G),S(G),G=Ce;S(X)},sn=(G,X,Ce)=>{G.type.__hmrId&&Ta(G);var{bum:$e,scope:ze,update:rt,subTree:mt,um:ot}=G;$e&&d.invokeArrayFns($e),ze.stop(),rt&&(rt.active=!1,qt(mt,G,X,Ce)),ot&&Ar(ot,X),Ar(()=>{G.isUnmounted=!0},X),X&&X.pendingBranch&&!X.isUnmounted&&G.asyncDep&&!G.asyncResolved&&G.suspenseId===X.pendingId&&(X.deps--,X.deps===0&&X.resolve()),oo(G)},Tn=function(G,X,Ce){for(var $e=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,ze=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,rt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,mt=rt;mt<G.length;mt++)qt(G[mt],X,Ce,$e,ze)},gn=G=>G.shapeFlag&6?gn(G.component.subTree):G.shapeFlag&128?G.suspense.next():Ae(G.anchor||G.el),Xi=(G,X,Ce)=>{G==null?X._vnode&&qt(X._vnode,null,null,!0):ft(X._vnode||null,G,X,null,null,null,Ce),lr(),Er(),X._vnode=G},yi={p:ft,um:qt,m:Yn,r:bn,mt:Ge,mc:j,pc:Bt,pbc:ye,n:gn,o:i},zr,ua;return a&&([zr,ua]=a(yi)),{render:Xi,hydrate:zr,createApp:Fo(Xi,zr)}}function Yi(i,a){var{effect:f,update:p}=i;f.allowRecurse=p.allowRecurse=a}function Ea(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=i.children,S=a.children;if(d.isArray(p)&&d.isArray(S))for(var w=0;w<p.length;w++){var N=p[w],V=S[w];V.shapeFlag&1&&!V.dynamicChildren&&((V.patchFlag<=0||V.patchFlag===32)&&(V=S[w]=Hr(S[w]),V.el=N.el),f||Ea(N,V)),V.type===xt&&(V.el=N.el),V.type===Yt&&!V.el&&(V.el=N.el)}}function La(i){var a=i.slice(),f=[0],p,S,w,N,V,F=i.length;for(p=0;p<F;p++){var q=i[p];if(q!==0){if(S=f[f.length-1],i[S]<q){a[p]=S,f.push(p);continue}for(w=0,N=f.length-1;w<N;)V=w+N>>1,i[f[V]]<q?w=V+1:N=V;q<i[f[w]]&&(w>0&&(a[p]=f[w-1]),f[w]=p)}}for(w=f.length,N=f[w-1];w-- >0;)f[w]=N,N=a[N];return f}var po=i=>i.__isTeleport,Ni=i=>i&&(i.disabled||i.disabled===""),ws=i=>typeof SVGElement!="undefined"&&i instanceof SVGElement,Uo=(i,a)=>{var f=i&&i.to;if(d.isString(f))if(a){var p=a(f);return p||pe('Failed to locate Teleport target with selector "'.concat(f,'". ')+"Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree."),p}else return pe("Current renderer does not support string target for Teleports. (missing querySelector renderer option)"),null;else return!f&&!Ni(i)&&pe("Invalid Teleport target: ".concat(f)),f},Ss={__isTeleport:!0,process(i,a,f,p,S,w,N,V,F,q){var{mc:be,pc:ae,pbc:ne,o:{insert:Ae,querySelector:De,createText:Xe,createComment:ft}}=q,Te=Ni(a.props),{shapeFlag:se,children:Ee,dynamicChildren:Le}=a;if(Rr&&(F=!1,Le=null),i==null){var Fe=a.el=ft("teleport start",f),it=a.anchor=ft("teleport end",f);Ae(Fe,f,p),Ae(it,f,p);var Tt=a.target=Uo(a.props,De),Qe=a.targetAnchor=Xe("",f);Tt?(Ae(Qe,Tt),N=N||ws(Tt)):Te||pe("Invalid Teleport target on mount:",Tt,"(".concat(typeof Tt,")"));var B=(tt,Ve)=>{se&16&&be(Ee,tt,Ve,S,w,N,V,F)};Te?B(f,it):Tt&&B(Tt,Qe)}else{a.el=i.el;var j=a.anchor=i.anchor,ie=a.target=i.target,ye=a.targetAnchor=i.targetAnchor,oe=Ni(i.props),ge=oe?f:ie,et=oe?j:ye;if(N=N||ws(ie),Le?(ne(i.dynamicChildren,Le,ge,S,w,N,V),Ea(i,a,!0)):F||ae(i,a,ge,et,S,w,N,V,!1),Te)oe||Za(a,f,j,q,1);else if((a.props&&a.props.to)!==(i.props&&i.props.to)){var Ge=a.target=Uo(a.props,De);Ge?Za(a,Ge,null,q,0):pe("Invalid Teleport target on update:",ie,"(".concat(typeof ie,")"))}else oe&&Za(a,ie,ye,q,1)}gt(a)},remove(i,a,f,p,S,w){var{um:N,o:{remove:V}}=S,{shapeFlag:F,children:q,anchor:be,targetAnchor:ae,target:ne,props:Ae}=i;if(ne&&V(ae),(w||!Ni(Ae))&&(V(be),F&16))for(var De=0;De<q.length;De++){var Xe=q[De];N(Xe,a,f,!0,!!Xe.dynamicChildren)}},move:Za,hydrate:Rl};function Za(i,a,f,p){var{o:{insert:S},m:w}=p,N=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;N===0&&S(i.targetAnchor,a,f);var{el:V,anchor:F,shapeFlag:q,children:be,props:ae}=i,ne=N===2;if(ne&&S(V,a,f),(!ne||Ni(ae))&&q&16)for(var Ae=0;Ae<be.length;Ae++)w(be[Ae],a,f,2);ne&&S(F,a,f)}function Rl(i,a,f,p,S,w,N,V){var{o:{nextSibling:F,parentNode:q,querySelector:be}}=N,ae=a.target=Uo(a.props,be);if(ae){var ne=ae._lpa||ae.firstChild;if(a.shapeFlag&16)if(Ni(a.props))a.anchor=V(F(i),a,q(i),f,p,S,w),a.targetAnchor=ne;else{a.anchor=F(i);for(var Ae=ne;Ae;)if(Ae=F(Ae),Ae&&Ae.nodeType===8&&Ae.data==="teleport anchor"){a.targetAnchor=Ae,ae._lpa=a.targetAnchor&&F(a.targetAnchor);break}V(ne,a,ae,f,p,S,w)}gt(a)}return a.anchor&&F(a.anchor)}var Ue=Ss;function gt(i){var a=i.ctx;if(a&&a.ut){for(var f=i.children[0].el;f!==i.targetAnchor;)f.nodeType===1&&f.setAttribute("data-v-owner",a.uid),f=f.nextSibling;a.ut()}}var ut=Symbol("Fragment"),xt=Symbol("Text"),Yt=Symbol("Comment"),Wn=Symbol("Static"),Mn=[],nr=null;function wa(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;Mn.push(nr=i?null:[])}function ki(){Mn.pop(),nr=Mn[Mn.length-1]||null}var $o=1;function Ws(i){$o+=i}function ac(i){return i.dynamicChildren=$o>0?nr||d.EMPTY_ARR:null,ki(),$o>0&&nr&&nr.push(i),i}function xl(i,a,f,p,S,w){return ac(Gn(i,a,f,p,S,w,!0))}function oa(i,a,f,p,S){return ac($n(i,a,f,p,S,!0))}function vr(i){return i?i.__v_isVNode===!0:!1}function ri(i,a){return a.shapeFlag&6&&xr.has(a.type)?(i.shapeFlag&=~256,a.shapeFlag&=~512,!1):i.type===a.type&&i.key===a.key}var Xa;function Cs(i){Xa=i}var Os=function(){for(var i=arguments.length,a=new Array(i),f=0;f<i;f++)a[f]=arguments[f];return Bl(...Xa?Xa(a,En):a)},As="__vInternal",Ho=i=>{var{key:a}=i;return a!=null?a:null},Fa=i=>{var{ref:a,ref_key:f,ref_for:p}=i;return a!=null?d.isString(a)||m.isRef(a)||d.isFunction(a)?{i:En,r:a,k:f,f:!!p}:a:null};function Gn(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,S=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,w=arguments.length>5&&arguments[5]!==void 0?arguments[5]:i===ut?0:1,N=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,V=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,F={__v_isVNode:!0,__v_skip:!0,type:i,props:a,key:a&&Ho(a),ref:a&&Fa(a),scopeId:ui,slotScopeIds:null,children:f,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:w,patchFlag:p,dynamicProps:S,dynamicChildren:null,appContext:null,ctx:En};return V?(Va(F,f),w&128&&i.normalize(F)):f&&(F.shapeFlag|=d.isString(f)?8:16),F.key!==F.key&&pe("VNode created with invalid key (NaN). VNode type:",F.type),$o>0&&!N&&nr&&(F.patchFlag>0||w&6)&&F.patchFlag!==32&&nr.push(F),F}var $n=Os;function Bl(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,S=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,w=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!i||i===ma)&&(i||pe("Invalid vnode type when creating vnode: ".concat(i,".")),i=Yt),vr(i)){var N=Ki(i,a,!0);return f&&Va(N,f),$o>0&&!w&&nr&&(N.shapeFlag&6?nr[nr.indexOf(i)]=N:nr.push(N)),N.patchFlag|=-2,N}if(Ll(i)&&(i=i.__vccOpts),a){a=qi(a);var{class:V,style:F}=a;V&&!d.isString(V)&&(a.class=d.normalizeClass(V)),d.isObject(F)&&(m.isProxy(F)&&!d.isArray(F)&&(F=d.extend({},F)),a.style=d.normalizeStyle(F))}var q=d.isString(i)?1:Qo(i)?128:po(i)?64:d.isObject(i)?4:d.isFunction(i)?2:0;return q&4&&m.isProxy(i)&&(i=m.toRaw(i),pe("Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.",`
Component that was made reactive: `,i)),Gn(i,a,f,p,S,q,w,!0)}function qi(i){return i?m.isProxy(i)||As in i?d.extend({},i):i:null}function Ki(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:p,ref:S,patchFlag:w,children:N}=i,V=a?Fr(p||{},a):p,F={__v_isVNode:!0,__v_skip:!0,type:i.type,props:V,key:V&&Ho(V),ref:a&&a.ref?f&&S?d.isArray(S)?S.concat(Fa(a)):[S,Fa(a)]:Fa(a):S,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:w===-1&&d.isArray(N)?N.map(Ts):N,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:a&&i.type!==ut?w===-1?16:w|16:w,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:i.transition,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&Ki(i.ssContent),ssFallback:i.ssFallback&&Ki(i.ssFallback),el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce};return F}function Ts(i){var a=Ki(i);return d.isArray(i.children)&&(a.children=i.children.map(Ts)),a}function Is(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return $n(xt,null,i,a)}function jc(i,a){var f=$n(Wn,null,i);return f.staticCount=a,f}function Ji(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return a?(wa(),oa(Yt,null,i)):$n(Yt,null,i)}function mr(i){return i==null||typeof i=="boolean"?$n(Yt):d.isArray(i)?$n(ut,null,i.slice()):typeof i=="object"?Hr(i):$n(xt,null,String(i))}function Hr(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:Ki(i)}function Va(i,a){var f=0,{shapeFlag:p}=i;if(a==null)a=null;else if(d.isArray(a))f=16;else if(typeof a=="object")if(p&(1|64)){var S=a.default;S&&(S._c&&(S._d=!1),Va(i,S()),S._c&&(S._d=!0));return}else{f=32;var w=a._;!w&&!(As in a)?a._ctx=En:w===3&&En&&(En.slots._===1?a._=1:(a._=2,i.patchFlag|=1024))}else d.isFunction(a)?(a={default:a,_ctx:En},f=32):(a=String(a),p&64?(f=16,a=[Is(a)]):f=8);i.children=a,i.shapeFlag|=f}function Fr(){for(var i={},a=0;a<arguments.length;a++){var f=a<0||arguments.length<=a?void 0:arguments[a];for(var p in f)if(p==="class")i.class!==f.class&&(i.class=d.normalizeClass([i.class,f.class]));else if(p==="style")i.style=d.normalizeStyle([i.style,f.style]);else if(d.isOn(p)){var S=i[p],w=f[p];w&&S!==w&&!(d.isArray(S)&&S.includes(w))&&(i[p]=S?[].concat(S,w):w)}else p!==""&&(i[p]=f[p])}return i}function jr(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;Jt(i,a,7,[f,p])}var Ml=Ja(),ul=0;function Bn(i,a,f){var p=i.type,S=(a?a.appContext:i.appContext)||Ml,w={uid:ul++,vnode:i,type:p,parent:a,appContext:S,root:null,next:null,subTree:null,effect:null,update:null,scope:new m.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:a?a.provides:Object.create(S.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Je(p,S),emitsOptions:Kr(p,S),emit:null,emitted:null,propsDefaults:d.EMPTY_OBJ,inheritAttrs:p.inheritAttrs,ctx:d.EMPTY_OBJ,data:d.EMPTY_OBJ,props:d.EMPTY_OBJ,attrs:d.EMPTY_OBJ,slots:d.EMPTY_OBJ,refs:d.EMPTY_OBJ,setupState:d.EMPTY_OBJ,setupContext:null,suspense:f,suspenseId:f?f.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return w.ctx=$s(w),w.root=a?a.root:w,w.emit=Zo.bind(null,w),i.ce&&i.ce(w),w}var Sn=null,mi=()=>Sn||En,_i=i=>{Sn=i,i.scope.on()},aa=()=>{Sn&&Sn.scope.off(),Sn=null},fl=d.makeMap("slot,component");function Ua(i,a){var f=a.isNativeTag||d.NO;(fl(i)||f(i))&&pe("Do not use built-in or reserved HTML elements as component id: "+i)}function Ri(i){return i.vnode.shapeFlag&4}C.isInSSRComponentSetup=!1;function jo(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;C.isInSSRComponentSetup=a;var{props:f,children:p}=i.vnode,S=Ri(i);je(i,f,S,a),ia(i,p);var w=S?dl(i,a):void 0;return C.isInSSRComponentSetup=!1,w}function dl(i,a){var f,p=i.type;{if(p.name&&Ua(p.name,i.appContext.config),p.components)for(var S=Object.keys(p.components),w=0;w<S.length;w++)Ua(S[w],i.appContext.config);if(p.directives)for(var N=Object.keys(p.directives),V=0;V<N.length;V++)il(N[V]);p.compilerOptions&&pl()&&pe('"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.')}i.accessCache=Object.create(null),i.proxy=m.markRaw(new Proxy(i.ctx,xa)),kl(i);var{setup:F}=p;if(F){var q=i.setupContext=F.length>1?Ps(i):null;_i(i),m.pauseTracking();var be=fn(F,i,0,[m.shallowReadonly(i.props),q]);if(m.resetTracking(),aa(),d.isPromise(be)){if(be.then(aa,aa),a)return be.then(ne=>{Qa(i,ne,a)}).catch(ne=>{cn(ne,i,0)});if(i.asyncDep=be,!i.suspense){var ae=(f=p.name)!==null&&f!==void 0?f:"Anonymous";pe("Component <".concat(ae,">: setup function returned a promise, but no ")+"<Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.")}}else Qa(i,be,a)}else Dl(i,a)}function Qa(i,a,f){d.isFunction(a)?i.type.__ssrInlineRender?i.ssrRender=a:i.render=a:d.isObject(a)?(vr(a)&&pe("setup() should not return VNodes directly - return a render function instead."),i.devtoolsRawSetupState=a,i.setupState=m.proxyRefs(a),ya(i)):a!==void 0&&pe("setup() should return an object. Received: ".concat(a===null?"null":typeof a)),Dl(i,f)}var es,hl;function sc(i){es=i,hl=a=>{a.render._rc&&(a.withProxy=new Proxy(a.ctx,sl))}}var pl=()=>!es;function Dl(i,a,f){var p=i.type;if(!i.render){if(!a&&es&&!p.render){var S=p.template||W(i).template;if(S){Or(i,"compile");var{isCustomElement:w,compilerOptions:N}=i.appContext.config,{delimiters:V,compilerOptions:F}=p,q=d.extend(d.extend({isCustomElement:w,delimiters:V},N),F);p.render=es(S,q),Pi(i,"compile")}}i.render=p.render||d.NOOP,hl&&hl(i)}_i(i),m.pauseTracking(),ll(i),m.resetTracking(),aa(),!p.render&&i.render===d.NOOP&&!a&&(!es&&p.template?pe('Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".'):pe("Component is missing template or render function."))}function lc(i){return new Proxy(i.attrs,{get(a,f){return ke(),m.track(i,"get","$attrs"),a[f]},set(){return pe("setupContext.attrs is readonly."),!1},deleteProperty(){return pe("setupContext.attrs is readonly."),!1}})}function Ps(i){var a=p=>{if(i.exposed&&pe("expose() should be called only once per setup()."),p!=null){var S=typeof p;S==="object"&&(d.isArray(p)?S="array":m.isRef(p)&&(S="ref")),S!=="object"&&pe("expose() should be passed a plain object, received ".concat(S,"."))}i.exposed=p||{}},f;return Object.freeze({get attrs(){return f||(f=lc(i))},get slots(){return m.shallowReadonly(i.slots)},get emit(){return function(p){for(var S=arguments.length,w=new Array(S>1?S-1:0),N=1;N<S;N++)w[N-1]=arguments[N];return i.emit(p,...w)}},expose:a})}function Ns(i){if(i.exposed)return i.exposeProxy||(i.exposeProxy=new Proxy(m.proxyRefs(m.markRaw(i.exposed)),{get(a,f){if(f in a)return a[f];if(f in Cr)return Cr[f](i)},has(a,f){return f in a||f in Cr}}))}var cc=/(?:^|[-_])(\w)/g,ts=i=>i.replace(cc,a=>a.toUpperCase()).replace(/[-_]/g,"");function Sa(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return d.isFunction(i)?i.displayName||i.name:i.name||a&&i.__name}function ks(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=Sa(a);if(!p&&a.__file){var S=a.__file.match(/([^/\\]+)\.\w+$/);S&&(p=S[1])}if(!p&&i&&i.parent){var w=N=>{for(var V in N)if(N[V]===a)return V};p=w(i.components||i.parent.type.components)||w(i.appContext.components)}return p?ts(p):f?"App":"Anonymous"}function Ll(i){return d.isFunction(i)&&"__vccOpts"in i}var Gs=(i,a)=>m.computed(i,a,C.isInSSRComponentSetup),gl=i=>pe("".concat(i,"() is a compiler-hint helper that is only usable inside ")+"<script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.");function uc(){return gl("defineProps"),null}function zc(){return gl("defineEmits"),null}function fc(i){gl("defineExpose")}function Wc(i,a){return gl("withDefaults"),null}function Gc(){return hc().slots}function dc(){return hc().attrs}function hc(){var i=mi();return i||pe("useContext() called without active instance."),i.setupContext||(i.setupContext=Ps(i))}function pc(i,a){var f=d.isArray(i)?i.reduce((w,N)=>(w[N]={},w),{}):i;for(var p in a){var S=f[p];S?d.isArray(S)||d.isFunction(S)?f[p]={type:S,default:a[p]}:S.default=a[p]:S===null?f[p]={default:a[p]}:pe('props default key "'.concat(p,'" has no corresponding declaration.'))}return f}function Yc(i,a){var f={},p=function(w){a.includes(w)||Object.defineProperty(f,w,{enumerable:!0,get:()=>i[w]})};for(var S in i)p(S);return f}function qc(i){var a=mi();a||pe("withAsyncContext called without active current instance. This is likely a bug.");var f=i();return aa(),d.isPromise(f)&&(f=f.catch(p=>{throw _i(a),p})),[f,()=>_i(a)]}function Fl(i,a,f){var p=arguments.length;return p===2?d.isObject(a)&&!d.isArray(a)?vr(a)?$n(i,null,[a]):$n(i,a):$n(i,null,a):(p>3?f=Array.prototype.slice.call(arguments,2):p===3&&vr(f)&&(f=[f]),$n(i,a,f))}var vl=Symbol("ssrContext"),Rs=()=>{{var i=Vn(vl);return i||pe("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),i}};function ii(i){return!!(i&&i.__v_isShallow)}function To(){if(typeof window=="undefined")return;var i={style:"color:#3ba776"},a={style:"color:#0b1bc9"},f={style:"color:#b62e24"},p={style:"color:#9d288c"},S={header(ae){return d.isObject(ae)?ae.__isVue?["div",i,"VueInstance"]:m.isRef(ae)?["div",{},["span",i,be(ae)],"<",V(ae.value),">"]:m.isReactive(ae)?["div",{},["span",i,ii(ae)?"ShallowReactive":"Reactive"],"<",V(ae),">".concat(m.isReadonly(ae)?" (readonly)":"")]:m.isReadonly(ae)?["div",{},["span",i,ii(ae)?"ShallowReadonly":"Readonly"],"<",V(ae),">"]:null:null},hasBody(ae){return ae&&ae.__isVue},body(ae){if(ae&&ae.__isVue)return["div",{},...w(ae.$)]}};function w(ae){var ne=[];ae.type.props&&ae.props&&ne.push(N("props",m.toRaw(ae.props))),ae.setupState!==d.EMPTY_OBJ&&ne.push(N("setup",ae.setupState)),ae.data!==d.EMPTY_OBJ&&ne.push(N("data",m.toRaw(ae.data)));var Ae=F(ae,"computed");Ae&&ne.push(N("computed",Ae));var De=F(ae,"inject");return De&&ne.push(N("injected",De)),ne.push(["div",{},["span",{style:p.style+";opacity:0.66"},"$ (internal): "],["object",{object:ae}]]),ne}function N(ae,ne){return ne=d.extend({},ne),Object.keys(ne).length?["div",{style:"line-height:1.25em;margin-bottom:0.6em"},["div",{style:"color:#476582"},ae],["div",{style:"padding-left:1.25em"},...Object.keys(ne).map(Ae=>["div",{},["span",p,Ae+": "],V(ne[Ae],!1)])]]:["span",{}]}function V(ae){var ne=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return typeof ae=="number"?["span",a,ae]:typeof ae=="string"?["span",f,JSON.stringify(ae)]:typeof ae=="boolean"?["span",p,ae]:d.isObject(ae)?["object",{object:ne?m.toRaw(ae):ae}]:["span",f,String(ae)]}function F(ae,ne){var Ae=ae.type;if(!d.isFunction(Ae)){var De={};for(var Xe in ae.ctx)q(Ae,Xe,ne)&&(De[Xe]=ae.ctx[Xe]);return De}}function q(ae,ne,Ae){var De=ae[Ae];if(d.isArray(De)&&De.includes(ne)||d.isObject(De)&&ne in De||ae.extends&&q(ae.extends,ne,Ae)||ae.mixins&&ae.mixins.some(Xe=>q(Xe,ne,Ae)))return!0}function be(ae){return ii(ae)?"ShallowRef":ae.effect?"ComputedRef":"Ref"}window.devtoolsFormatters?window.devtoolsFormatters.push(S):window.devtoolsFormatters=[S]}function Vl(i,a,f,p){var S=f[p];if(S&&zo(S,i))return S;var w=a();return w.memo=i.slice(),f[p]=w}function zo(i,a){var f=i.memo;if(f.length!=a.length)return!1;for(var p=0;p<f.length;p++)if(d.hasChanged(f[p],a[p]))return!1;return $o>0&&nr&&nr.push(i),!0}var ml="3.2.47",ns={createComponentInstance:Bn,setupComponent:jo,renderComponentRoot:bo,setCurrentRenderingInstance:Bo,isVNode:vr,normalizeVNode:mr},Kc=ns,Ys=null,sa=null;function qs(i,a){return i==="input"?new R.UniInputElement(i,a):i==="textarea"?new R.UniTextAreaElement(i,a):new R.UniElement(i,a)}function Wo(i,a){return new R.UniTextNode(i,a)}function Ks(i,a){return new R.UniCommentNode(i,a)}var Zi,gc={insert:(i,a,f)=>{a.insertBefore(i,f||null)},remove:i=>{var a=i.parentNode;a&&a.removeChild(i)},createElement:(i,a)=>qs(i,a),createText:(i,a)=>Wo(i,a),createComment:(i,a)=>Ks(i,a),setText:(i,a)=>{i.nodeValue=a},setElementText:(i,a)=>{i.textContent=a},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,setScopeId(i,a){i.setAttribute(a,"")},cloneNode(i){var a=i.cloneNode(!0);return"_value"in i&&(a._value=i._value),a},insertStaticContent(i,a,f){var p=Zi||(Zi=qs("div"));p.innerHTML=i;for(var S=p.firstChild,w=S,N=w;w;)N=w,gc.insert(w,a,f),w=p.firstChild;return[S,N]}};function Ul(i,a){a==null&&(a=""),i.setAttribute("class",a)}function Jc(i,a,f){if(!f)i.removeAttribute("style");else if(d.isString(f))a!==f&&i.setAttribute("style",f);else{var p={},S=a&&!d.isString(a);if(S){for(var w in a)f[w]==null&&(p[w]="");for(var N in f){var V=f[N];V!==a[N]&&(p[N]=V)}}else for(var F in f)p[F]=f[F];Object.keys(p).length&&i.setAttribute("style",p)}}function vc(i,a,f){f==null?i.removeAttribute(a):i.setAttribute(a,f)}function Js(i,a,f,p){i.addEventListener(a,f,p)}function mc(i,a,f,p){i.removeEventListener(a,f,p)}function _c(i,a,f,p){var S=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,w=i._vei||(i._vei={}),N=w[a];if(p&&N)N.value=p;else{var[V,F]=$l(a);if(p){var q=w[a]=Zs(p,S);Js(i,V,q,F)}else N&&(mc(i,V,N,F),w[a]=void 0)}}var bc=/(?:Once|Passive|Capture)$/;function $l(i){var a;if(bc.test(i)){a={};for(var f;f=i.match(bc);)i=i.slice(0,i.length-f[0].length),a[f[0].toLowerCase()]=!0}return[d.hyphenate(i.slice(2)),a]}function Zs(i,a){var f=S=>{Jt(f.value,a,5,[S])};f.value=i;var p=new Set;return d.isArray(f.value)?f.value.forEach(S=>{S.modifiers&&S.modifiers.forEach(w=>{p.add(w)})}):(f.value.modifiers&&f.value.modifiers.forEach(S=>{p.add(S)}),yc(f,a)),f.modifiers=[...p],f}function yc(i,a){if(!!a){var{$wxsModules:f}=a;if(!!f){var p=i.value.toString();!f.find(S=>p.indexOf("."+S+".")>-1)||(i.wxsEvent=i.value())}}}var Zc=function(i,a,f,p){var S=arguments.length>6?arguments[6]:void 0;switch(a){case"class":Ul(i,p);break;case"style":Jc(i,f,p);break;default:if(d.isOn(a))d.isModelListener(a)||_c(i,a,f,p,S);else{if(d.isObject(p)){var w=f===p;if(p=R.JSON_PROTOCOL+JSON.stringify(p),w&&i.getAttribute(a)===p)return}else if(f===p)return;vc(i,a,p)}break}};function Xc(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var a=mi();if(!a)return pe("useCssModule must be called inside setup()"),d.EMPTY_OBJ;var f=a.type.__cssModules;if(!f)return pe("Current instance does not have CSS modules injected."),d.EMPTY_OBJ;var p=f[i];return p||(pe('Current instance does not have CSS module named "'.concat(i,'".')),d.EMPTY_OBJ)}}function Qc(i){var a=mi();if(!a){pe("useCssVars is called without current active component instance.");return}var f=()=>Hl(a.subTree,i(a.proxy));fo(()=>Xr(f,{flush:"post"})),Qn(f)}function Hl(i,a){if(i.shapeFlag&128){var f=i.suspense;i=f.activeBranch,f.pendingBranch&&!f.isHydrating&&f.effects.push(()=>{Hl(f.activeBranch,a)})}for(;i.component;)i=i.component.subTree;if(i.shapeFlag&1&&i.el)_l(i.el,a);else if(i.type===ut)i.children.forEach(w=>Hl(w,a));else if(i.type===Wn)for(var{el:p,anchor:S}=i;p&&(_l(p,a),p!==S);)p=p.nextSibling}function _l(i,a){if(i.nodeType===1)for(var f in a)i.setAttribute("--".concat(f),a[f])}var $a="transition",Xs="animation",jl=(i,a)=>{var{slots:f}=a;return Fl(Co,wc(i),f)};jl.displayName="Transition";var Ec={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},pn=jl.props=d.extend({},Co.props,Ec),xi=function(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];d.isArray(i)?i.forEach(f=>f(...a)):i&&i(...a)},Io=i=>i?d.isArray(i)?i.some(a=>a.length>1):i.length>1:!1;function wc(i){var a={};for(var f in i)f in Ec||(a[f]=i[f]);if(i.css===!1)return a;var{name:p="v",type:S,duration:w,enterFromClass:N="".concat(p,"-enter-from"),enterActiveClass:V="".concat(p,"-enter-active"),enterToClass:F="".concat(p,"-enter-to"),appearFromClass:q=N,appearActiveClass:be=V,appearToClass:ae=F,leaveFromClass:ne="".concat(p,"-leave-from"),leaveActiveClass:Ae="".concat(p,"-leave-active"),leaveToClass:De="".concat(p,"-leave-to")}=i,Xe=bl(w),ft=Xe&&Xe[0],Te=Xe&&Xe[1],{onBeforeEnter:se,onEnter:Ee,onEnterCancelled:Le,onLeave:Fe,onLeaveCancelled:it,onBeforeAppear:Tt=se,onAppear:Qe=Ee,onAppearCancelled:B=Le}=a,j=(oe,ge,et)=>{la(oe,ge?ae:F),la(oe,ge?be:V),et&&et()},ie=(oe,ge)=>{la(oe,De),la(oe,Ae),ge&&ge()},ye=oe=>(ge,et)=>{var Ge=oe?Qe:Ee,tt=()=>j(ge,oe,et);xi(Ge,[ge,tt]),Ha(()=>{la(ge,oe?q:N),Po(ge,oe?ae:F),Io(Ge)||pr(ge,S,ft,tt)})};return d.extend(a,{onBeforeEnter(oe){xi(se,[oe]),Po(oe,N),Po(oe,V)},onBeforeAppear(oe){xi(Tt,[oe]),Po(oe,q),Po(oe,be)},onEnter:ye(!1),onAppear:ye(!0),onLeave(oe,ge){var et=()=>ie(oe,ge);Po(oe,ne),Sc(),Po(oe,Ae),Ha(()=>{la(oe,ne),Po(oe,De),Io(Fe)||pr(oe,S,Te,et)}),xi(Fe,[oe,et])},onEnterCancelled(oe){j(oe,!1),xi(Le,[oe])},onAppearCancelled(oe){j(oe,!0),xi(B,[oe])},onLeaveCancelled(oe){ie(oe),xi(it,[oe])}})}function bl(i){if(i==null)return null;if(d.isObject(i))return[Qs(i.enter),Qs(i.leave)];var a=Qs(i);return[a,a]}function Qs(i){var a=d.toNumber(i);return yl(a),a}function yl(i){typeof i!="number"?pe("<transition> explicit duration is not a valid number - "+"got ".concat(JSON.stringify(i),".")):isNaN(i)&&pe("<transition> explicit duration is NaN - the duration expression might be incorrect.")}function Po(i,a){a.split(/\s+/).forEach(f=>f&&i.classList.add(f)),(i._vtc||(i._vtc=new Set)).add(a)}function la(i,a){a.split(/\s+/).forEach(p=>p&&i.classList.remove(p));var{_vtc:f}=i;f&&(f.delete(a),f.size||(i._vtc=void 0))}function Ha(i){requestAnimationFrame(()=>{requestAnimationFrame(i)})}var el=0;function pr(i,a,f,p){var S=i._endId=++el,w=()=>{S===i._endId&&p()};if(f)return setTimeout(w,f);var{type:N,timeout:V,propCount:F}=xs(i,a);if(!N)return p();var q=N+"end",be=0,ae=()=>{i.removeEventListener(q,ne),w()},ne=Ae=>{Ae.target===i&&++be>=F&&ae()};setTimeout(()=>{be<F&&ae()},V+1),i.addEventListener(q,ne)}function xs(i,a){var f=window.getComputedStyle(i),p=De=>(f[De]||"").split(", "),S=p($a+"Delay"),w=p($a+"Duration"),N=ja(S,w),V=p(Xs+"Delay"),F=p(Xs+"Duration"),q=ja(V,F),be=null,ae=0,ne=0;a===$a?N>0&&(be=$a,ae=N,ne=w.length):a===Xs?q>0&&(be=Xs,ae=q,ne=F.length):(ae=Math.max(N,q),be=ae>0?N>q?$a:Xs:null,ne=be?be===$a?w.length:F.length:0);var Ae=be===$a&&/\b(transform|all)(,|$)/.test(f[$a+"Property"]);return{type:be,timeout:ae,propCount:ne,hasTransform:Ae}}function ja(i,a){for(;i.length<a.length;)i=i.concat(i);return Math.max(...a.map((f,p)=>rs(f)+rs(i[p])))}function rs(i){return Number(i.slice(0,-1).replace(",","."))*1e3}function Sc(){return document.body.offsetHeight}var Ca=new WeakMap,El=new WeakMap,ca={name:"TransitionGroup",props:d.extend({},pn,{tag:String,moveClass:String}),setup(i,a){var{slots:f}=a,p=mi(),S=dr(),w,N;return Qn(()=>{if(!!w.length){var V=i.moveClass||"".concat(i.name||"v","-move");if(!!_(w[0].el,p.vnode.el,V)){w.forEach(o),w.forEach(c);var F=w.filter(h);Sc(),F.forEach(q=>{var be=q.el,ae=be.style;Po(be,V),ae.transform=ae.webkitTransform=ae.transitionDuration="";var ne=be._moveCb=Ae=>{Ae&&Ae.target!==be||(!Ae||/transform$/.test(Ae.propertyName))&&(be.removeEventListener("transitionend",ne),be._moveCb=null,la(be,V))};be.addEventListener("transitionend",ne)})}}}),()=>{var V=m.toRaw(i),F=wc(V),q=V.tag||ut;w=N,N=f.default?ve(f.default()):[];for(var be=0;be<N.length;be++){var ae=N[be];ae.key!=null?Z(ae,pi(ae,F,S,p)):pe("<TransitionGroup> children must be keyed.")}if(w)for(var ne=0;ne<w.length;ne++){var Ae=w[ne];Z(Ae,pi(Ae,F,S,p)),Ca.set(Ae,Ae.el.getBoundingClientRect())}return $n(q,null,N)}}},za=i=>delete i.mode;ca.props;var oi=ca;function o(i){var a=i.el;a._moveCb&&a._moveCb(),a._enterCb&&a._enterCb()}function c(i){El.set(i,i.el.getBoundingClientRect())}function h(i){var a=Ca.get(i),f=El.get(i),p=a.left-f.left,S=a.top-f.top;if(p||S){var w=i.el.style;return w.transform=w.webkitTransform="translate(".concat(p,"px,").concat(S,"px)"),w.transitionDuration="0s",i}}function _(i,a,f){var p=i.cloneNode();i._vtc&&i._vtc.forEach(N=>{N.split(/\s+/).forEach(V=>V&&p.classList.remove(V))}),f.split(/\s+/).forEach(N=>N&&p.classList.add(N)),p.style.display="none";var S=a.nodeType===1?a:a.parentNode;S.appendChild(p);var{hasTransform:w}=xs(p);return S.removeChild(p),w}var I=i=>{var a=i.props["onUpdate:modelValue"];return d.isArray(a)?f=>d.invokeArrayFns(a,f):a},A={created(i,a,f){var{value:p,modifiers:{trim:S,number:w}}=a;i.value=p==null?"":p,i._assign=I(f),Js(i,"input",N=>{var V=N.detail.value,F=i.pageNode;i.pageNode=null,i.value=V,i.pageNode=F,S?V=V.trim():w&&(V=d.toNumber(V)),i._assign(V)})},beforeUpdate(i,a,f){var{value:p}=a;i._assign=I(f);var S=p==null?"":p;i.value!==S&&(i.value=S)}},x=A,z=["ctrl","shift","alt","meta"],$={stop:i=>i.stopPropagation(),prevent:i=>i.preventDefault(),self:i=>i.target!==i.currentTarget,ctrl:i=>!i.ctrlKey,shift:i=>!i.shiftKey,alt:i=>!i.altKey,meta:i=>!i.metaKey,left:i=>"button"in i&&i.button!==0,middle:i=>"button"in i&&i.button!==1,right:i=>"button"in i&&i.button!==2,exact:(i,a)=>z.some(f=>i["".concat(f,"Key")]&&!a.includes(f))},te=(i,a)=>{var f=function(p){for(var S=0;S<a.length;S++){var w=$[a[S]];if(w&&w(p,a))return}for(var N=arguments.length,V=new Array(N>1?N-1:0),F=1;F<N;F++)V[F-1]=arguments[F];return i(p,...V)};return f.modifiers=a,f},Ie={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},fe=(i,a)=>f=>{if("key"in f){var p=d.hyphenate(f.key);if(a.some(S=>S===p||Ie[S]===p))return i(f)}},ue={beforeMount(i,a){var{value:f}=a;He(i,f)},updated(i,a){var{value:f,oldValue:p}=a;!f!=!p&&He(i,f)},beforeUnmount(i,a){var{value:f}=a;He(i,f)}};function He(i,a){i.setAttribute(".vShow",!!a)}var Ze=d.extend({patchProp:Zc,forcePatchProp:R.forcePatchProp},gc),vt;function yt(){return vt||(vt=zs(Ze))}var Ne=function(){yt().render(...arguments)},_e=function(){var i=yt().createApp(...arguments);nt(i);var{mount:a}=i;return i.mount=f=>(d.isString(f)&&(f==="#app"&&Ko(i,ml),f=Ks(f)),f&&a(f,!1,!1)),i},Me=_e;function nt(i){Object.defineProperty(i.config,"isNativeTag",{value:a=>d.isHTMLTag(a)||d.isSVGTag(a),writable:!1})}function qe(){}function at(){}function It(i){return d.isObject(i)?R.JSON_PROTOCOL+JSON.stringify(i):i}var st=i=>It(i);return Object.defineProperty(C,"camelize",{enumerable:!0,get:function(){return d.camelize}}),Object.defineProperty(C,"capitalize",{enumerable:!0,get:function(){return d.capitalize}}),Object.defineProperty(C,"normalizeClass",{enumerable:!0,get:function(){return d.normalizeClass}}),Object.defineProperty(C,"normalizeProps",{enumerable:!0,get:function(){return d.normalizeProps}}),Object.defineProperty(C,"normalizeStyle",{enumerable:!0,get:function(){return d.normalizeStyle}}),Object.defineProperty(C,"toDisplayString",{enumerable:!0,get:function(){return d.toDisplayString}}),Object.defineProperty(C,"toHandlerKey",{enumerable:!0,get:function(){return d.toHandlerKey}}),Object.defineProperty(C,"EffectScope",{enumerable:!0,get:function(){return m.EffectScope}}),Object.defineProperty(C,"ReactiveEffect",{enumerable:!0,get:function(){return m.ReactiveEffect}}),Object.defineProperty(C,"customRef",{enumerable:!0,get:function(){return m.customRef}}),Object.defineProperty(C,"effect",{enumerable:!0,get:function(){return m.effect}}),Object.defineProperty(C,"effectScope",{enumerable:!0,get:function(){return m.effectScope}}),Object.defineProperty(C,"getCurrentScope",{enumerable:!0,get:function(){return m.getCurrentScope}}),Object.defineProperty(C,"isProxy",{enumerable:!0,get:function(){return m.isProxy}}),Object.defineProperty(C,"isReactive",{enumerable:!0,get:function(){return m.isReactive}}),Object.defineProperty(C,"isReadonly",{enumerable:!0,get:function(){return m.isReadonly}}),Object.defineProperty(C,"isRef",{enumerable:!0,get:function(){return m.isRef}}),Object.defineProperty(C,"isShallow",{enumerable:!0,get:function(){return m.isShallow}}),Object.defineProperty(C,"markRaw",{enumerable:!0,get:function(){return m.markRaw}}),Object.defineProperty(C,"onScopeDispose",{enumerable:!0,get:function(){return m.onScopeDispose}}),Object.defineProperty(C,"proxyRefs",{enumerable:!0,get:function(){return m.proxyRefs}}),Object.defineProperty(C,"reactive",{enumerable:!0,get:function(){return m.reactive}}),Object.defineProperty(C,"readonly",{enumerable:!0,get:function(){return m.readonly}}),Object.defineProperty(C,"ref",{enumerable:!0,get:function(){return m.ref}}),Object.defineProperty(C,"shallowReactive",{enumerable:!0,get:function(){return m.shallowReactive}}),Object.defineProperty(C,"shallowReadonly",{enumerable:!0,get:function(){return m.shallowReadonly}}),Object.defineProperty(C,"shallowRef",{enumerable:!0,get:function(){return m.shallowRef}}),Object.defineProperty(C,"stop",{enumerable:!0,get:function(){return m.stop}}),Object.defineProperty(C,"toRaw",{enumerable:!0,get:function(){return m.toRaw}}),Object.defineProperty(C,"toRef",{enumerable:!0,get:function(){return m.toRef}}),Object.defineProperty(C,"toRefs",{enumerable:!0,get:function(){return m.toRefs}}),Object.defineProperty(C,"triggerRef",{enumerable:!0,get:function(){return m.triggerRef}}),Object.defineProperty(C,"unref",{enumerable:!0,get:function(){return m.unref}}),C.BaseTransition=Co,C.BaseTransitionPropsValidators=lo,C.Comment=Yt,C.Fragment=ut,C.KeepAlive=xe,C.Static=Wn,C.Suspense=So,C.Teleport=Ue,C.Text=xt,C.Transition=jl,C.TransitionGroup=oi,C.assertNumber=re,C.callWithAsyncErrorHandling=Jt,C.callWithErrorHandling=fn,C.cloneVNode=Ki,C.compatUtils=sa,C.computed=Gs,C.createApp=_e,C.createBlock=oa,C.createComment=Ks,C.createCommentVNode=Ji,C.createElement=qs,C.createElementBlock=xl,C.createElementVNode=Gn,C.createHydrationRenderer=ni,C.createPropsRestProxy=Yc,C.createRenderer=zs,C.createSSRApp=Me,C.createSlots=al,C.createStaticVNode=jc,C.createTextNode=Wo,C.createTextVNode=Is,C.createVNode=$n,C.createVueApp=_e,C.defineAsyncComponent=Ot,C.defineComponent=le,C.defineEmits=zc,C.defineExpose=fc,C.defineProps=uc,C.getCurrentInstance=mi,C.getTransitionRawChildren=ve,C.guardReactiveProps=qi,C.h=Fl,C.handleError=cn,C.initCustomFormatter=To,C.inject=Vn,C.injectHook=gr,C.isMemoSame=zo,C.isRuntimeOnly=pl,C.isVNode=vr,C.mergeDefaults=pc,C.mergeProps=Fr,C.nextTick=kn,C.onActivated=zt,C.onBeforeActivate=qe,C.onBeforeDeactivate=at,C.onBeforeMount=uo,C.onBeforeUnmount=Dr,C.onBeforeUpdate=ra,C.onDeactivated=An,C.onErrorCaptured=Us,C.onMounted=fo,C.onRenderTracked=Vs,C.onRenderTriggered=Lr,C.onServerPrefetch=Na,C.onUnmounted=qa,C.onUpdated=Qn,C.openBlock=wa,C.popScopeId=Jn,C.provide=or,C.pushScopeId=Ya,C.queuePostFlushCb=Fi,C.registerRuntimeCompiler=sc,C.render=Ne,C.renderList=Ra,C.renderSlot=_a,C.resolveComponent=zn,C.resolveDirective=ho,C.resolveDynamicComponent=gs,C.resolveFilter=Ys,C.resolveTransitionHooks=pi,C.setBlockTracking=Ws,C.setDevtoolsHook=Kn,C.setTransitionHooks=Z,C.ssrContextKey=vl,C.ssrUtils=Kc,C.toHandlers=ms,C.transformVNodeArgs=Cs,C.useAttrs=dc,C.useCssModule=Xc,C.useCssVars=Qc,C.useSSRContext=Rs,C.useSlots=Gc,C.useTransitionState=dr,C.vModelDynamic=x,C.vModelText=A,C.vShow=ue,C.version=ml,C.warn=pe,C.watch=Ci,C.watchEffect=Xr,C.watchPostEffect=hi,C.watchSyncEffect=na,C.withAsyncContext=qc,C.withCtx=ur,C.withDefaults=Wc,C.withDirectives=Oo,C.withKeys=fe,C.withMemo=Vl,C.withModifiers=te,C.withScopeId=Jr,C.wp=st,Object.defineProperty(C,"__esModule",{value:!0}),C}({},b,T,l);return k.__TYPE__="vue",k}function Ov(v,l,b){let T=b.Vue,k=b.setTimeout,C=b.clearTimeout,d=b.setInterval,m=b.clearInterval,R=b.__uniConfig,We=b.__uniRoutes,Pt=b.VueShared,en=b.UniShared;var pe=function(K,re,Dn){"use strict";var fn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Jt=function(){let e=new Uint8Array(256);for(var t=0;t<fn.length;t++)e[fn.charCodeAt(t)]=t;return e}();function cn(e){var t=new Uint8Array(e),n,r=t.length,s="";for(n=0;n<r;n+=3)s+=fn[t[n]>>2],s+=fn[(t[n]&3)<<4|t[n+1]>>4],s+=fn[(t[n+1]&15)<<2|t[n+2]>>6],s+=fn[t[n+2]&63];return r%3===2?s=s.substring(0,s.length-1)+"=":r%3===1&&(s=s.substring(0,s.length-2)+"=="),s}function Ir(e){var t=e.length*.75,n=e.length,r,s=0,u,g,E,U;e[e.length-1]==="="&&(t--,e[e.length-2]==="="&&t--);var P=new ArrayBuffer(t),L=new Uint8Array(P);for(r=0;r<n;r+=4)u=Jt[e.charCodeAt(r)],g=Jt[e.charCodeAt(r+1)],E=Jt[e.charCodeAt(r+2)],U=Jt[e.charCodeAt(r+3)],L[s++]=u<<2|g>>4,L[s++]=(g&15)<<4|E>>2,L[s++]=(E&3)<<6|U&63;return P}let wi=["original","compressed"],qn=["album","camera"],hn=["GET","OPTIONS","HEAD","POST","PUT","DELETE","TRACE","CONNECT","PATCH"];function Vt(e,t){return!e||t.indexOf(e)===-1?t[0]:e}function Nn(e,t){return!K.isArray(e)||e.length===0||e.find(n=>t.indexOf(n)===-1)?t:e}function yn(e,t){console.warn(`${e}: ${t}`)}function xn(e,t,n,r){r||(r=yn);for(let s in n){let u=Ke(s,t[s],n[s],!K.hasOwn(t,s));K.isString(u)&&r(e,u)}}function Pr(e,t,n,r){if(!n)return;if(!K.isArray(n))return xn(e,t[0]||Object.create(null),n,r);let s=n.length,u=t.length;for(let g=0;g<s;g++){let E=n[g],U=Object.create(null);u>g&&(U[E.name]=t[g]),xn(e,U,{[E.name]:E},r)}}function Ke(e,t,n,r){K.isPlainObject(n)||(n={type:n});let{type:s,required:u,validator:g}=n;if(u&&r)return'Missing required args: "'+e+'"';if(!(t==null&&!u)){if(s!=null){let E=!1,U=K.isArray(s)?s:[s],P=[];for(let L=0;L<U.length&&!E;L++){let{valid:Oe,expectedType:Pe}=St(t,U[L]);P.push(Pe||""),E=Oe}if(!E)return tn(e,t,P)}if(g)return g(t)}}let dt=K.makeMap("String,Number,Boolean,Function,Symbol");function St(e,t){let n,r=kn(t);if(dt(r)){let s=typeof e;n=s===r.toLowerCase(),!n&&s==="object"&&(n=e instanceof t)}else r==="Object"?n=K.isObject(e):r==="Array"?n=K.isArray(e):n=e instanceof t||K.toRawType(e)===kn(t);return{valid:n,expectedType:r}}function tn(e,t,n){let r=`Invalid args: type check failed for args "${e}". Expected ${n.map(K.capitalize).join(", ")}`,s=n[0],u=K.toRawType(t),g=Zt(t,s),E=Zt(t,u);return n.length===1&&Ln(s)&&!Nr(s,u)&&(r+=` with value ${g}`),r+=`, got ${u} `,Ln(u)&&(r+=`with value ${E}.`),r}function kn(e){let t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function Zt(e,t){return t==="String"?`"${e}"`:t==="Number"?`${Number(e)}`:`${e}`}function Ln(e){return["string","number","boolean"].some(n=>e.toLowerCase()===n)}function Nr(...e){return e.some(t=>t.toLowerCase()==="boolean")}function Ur(e){return function(){try{return e.apply(e,arguments)}catch(t){console.error(t)}}}let Fi=1,lr={};function Er(e,t,n,r=!1){return lr[e]={name:t,keepAlive:r,callback:n},e}function Vi(e,t,n){if(typeof e=="number"){let r=lr[e];if(r)return r.keepAlive||delete lr[e],r.callback(t,n)}return t}function Go(e){for(let t in lr)if(lr[t].name===e)return!0;return!1}function Yo(e,t){for(let n in lr){let r=lr[n];r.callback===t&&r.name===e&&delete lr[n]}}function kr(e){_t.off("api."+e)}function Rr(e){_t.on("api."+e,t=>{for(let n in lr){let r=lr[n];r.name===e&&r.callback(t)}})}function xr(e,t){return Er(Fi++,e,t,!0)}let Ui="success",Yr="fail",Ta="complete";function $i(e){let t={};for(let n in e){let r=e[n];K.isFunction(r)&&(t[n]=Ur(r),delete e[n])}return t}function mo(e,t){return!e||e.indexOf(":fail")===-1?t+":ok":t+e.substring(e.indexOf(":fail"))}function Ia(e,t={},{beforeAll:n,beforeSuccess:r}={}){K.isPlainObject(t)||(t={});let{success:s,fail:u,complete:g}=$i(t),E=K.isFunction(s),U=K.isFunction(u),P=K.isFunction(g),L=Fi++;return Er(L,e,Oe=>{Oe=Oe||{},Oe.errMsg=mo(Oe.errMsg,e),K.isFunction(n)&&n(Oe),Oe.errMsg===e+":ok"?(K.isFunction(r)&&r(Oe,t),E&&s(Oe)):U&&u(Oe),P&&g(Oe)}),L}let no="success",qo="fail",si="complete",Pn={},cr={};function li(e,t){return function(n){return e(n,t)||n}}function Kn(e,t,n){let r=!1;for(let s=0;s<e.length;s++){let u=e[s];if(r)r=Promise.resolve(li(u,n));else{let g=u(t,n);if(K.isPromise(g)&&(r=Promise.resolve(g)),g===!1)return{then(){},catch(){}}}}return r||{then(s){return s(t)},catch(){}}}function Ko(e,t={}){return[no,qo,si].forEach(n=>{let r=e[n];if(!K.isArray(r))return;let s=t[n];t[n]=function(g){Kn(r,g,t).then(E=>K.isFunction(s)&&s(E)||E)}}),t}function xo(e,t){let n=[];K.isArray(Pn.returnValue)&&n.push(...Pn.returnValue);let r=cr[e];return r&&K.isArray(r.returnValue)&&n.push(...r.returnValue),n.forEach(s=>{t=s(t)||t}),t}function ro(e){let t=Object.create(null);Object.keys(Pn).forEach(r=>{r!=="returnValue"&&(t[r]=Pn[r].slice())});let n=cr[e];return n&&Object.keys(n).forEach(r=>{r!=="returnValue"&&(t[r]=(t[r]||[]).concat(n[r]))}),t}function io(e,t,n,r){let s=ro(e);return s&&Object.keys(s).length?K.isArray(s.invoke)?Kn(s.invoke,n).then(g=>t(Ko(ro(e),g),...r)):t(Ko(s,n),...r):t(n,...r)}function qr(e){return!!(K.isPlainObject(e)&&[Ui,Yr,Ta].find(t=>K.isFunction(e[t])))}function oo(e){return e}function Fn(e,t){return(n={},...r)=>qr(n)?xo(e,io(e,t,n,r)):xo(e,new Promise((s,u)=>{io(e,t,K.extend(n,{success:s,fail:u}),r)}))}function wr(e,t){let n=e[0];if(!t||!K.isPlainObject(t.formatArgs)&&K.isPlainObject(n))return;let r=t.formatArgs,s=Object.keys(r);for(let u=0;u<s.length;u++){let g=s[u],E=r[g];if(K.isFunction(E)){let U=E(e[0][g],n);if(K.isString(U))return U}else K.hasOwn(n,g)||(n[g]=E)}}function ci(e,t,n){return Vi(e,K.extend(n||{},{errMsg:t+":ok"}))}function Jo(e,t,n,r){return Vi(e,K.extend({errMsg:t+":fail"+(n?" "+n:"")},r))}function _o(e,t,n,r){if(r&&r.beforeInvoke){let u=r.beforeInvoke(t);if(K.isString(u))return u}let s=wr(t,r);if(s)return s}function Zo(e){if(!K.isFunction(e))throw new Error('Invalid args: type check failed for args "callback". Expected Function')}function Kr(e,t,n){return r=>{Zo(r);let s=_o(e,[r],void 0,n);if(s)throw new Error(s);let u=!Go(e);xr(e,r),u&&(Rr(e),t())}}function On(e,t,n){return r=>{Zo(r);let s=_o(e,[r],void 0,n);if(s)throw new Error(s);e=e.replace("off","on"),Yo(e,r),Go(e)||(kr(e),t())}}function En(e){return!e||K.isString(e)?e:e.stack?(console.error(e.message+re.LINEFEED+e.stack),e.message):e}function ui(e,t,n,r){return s=>{let u=Ia(e,s,r),g=_o(e,[s],n,r);return g?Jo(u,e,g):t(s,{resolve:E=>ci(u,e,E),reject:(E,U)=>Jo(u,e,En(E),U)})}}function Bo(e,t,n,r){return(...s)=>{let u=_o(e,s,n,r);if(u)throw new Error(u);return t.apply(null,s)}}function Ya(e,t,n,r){return ui(e,t,n,r)}function Jn(e,t,n){return Kr(e,t,n)}function Jr(e,t,n){return On(e,t,n)}function ur(e,t,n,r){return Fn(e,ui(e,t,void 0,r))}function Dt(e,t,n,r){return Bo(e,t,void 0,r)}function ke(e,t,n,r){return Fn(e,Ya(e,t,void 0,r))}let bo="base64ToArrayBuffer",yo=[{name:"base64",type:String,required:!0}],Eo="arrayBufferToBase64",pa=[{name:"arrayBuffer",type:[ArrayBuffer,Uint8Array],required:!0}],Xo=Dt(bo,e=>Ir(e),yo),Hi=Dt(Eo,e=>cn(e),pa);function wo(){if(typeof __SYSTEM_INFO__!="undefined")return window.__SYSTEM_INFO__;let{resolutionWidth:e}=l.screen.getCurrentSize()||{resolutionWidth:0};return{platform:(l.os.name||"").toLowerCase(),pixelRatio:l.screen.scale,windowWidth:Math.round(e)}}function Zr(e,t,n){e.$page.meta.isNVue?Qo(e,t,n):fi(e,t,n)}function fi(e,t,n){_t.invokeViewMethod("requestComponentInfo",{reqs:t.map(r=>(r.component&&(r.component=r.component.$el.nodeId),r))},e.$page.id,n)}function Qo(e,t,n){let r=an(t),s=new Array(r.length);So(r,e.$el,s),di(e.$requireNativePlugin("dom"),s,0,[],u=>{n(u)})}function an(e){let t=[];for(let n=0;n<e.length;n++){let r=e[n].selector;r.indexOf("#")===0&&t.push(r.substring(1))}return t}function So(e,t,n){let r=t.children;if(!K.isArray(r))return!1;for(let s=0;s<r.length;s++){let u=r[s];if(u.attr){let g=e.indexOf(u.attr.id);if(g>=0&&(n[g]={id:e[g],ref:u.ref,dataset:re.parseNVueDataset(u.attr)},e.length===1))break}u.children&&So(e,u,n)}}function di(e,t,n,r,s){let u=t[n];e.getComponentRect(u.ref,g=>{g.size.id=u.id,g.size.dataset=u.dataset,r.push(g.size),n+=1,n<t.length?di(e,t,n,r,s):s(r)})}function ga(e,t){_t.invokeViewMethod("setPageMeta",t,e.$page.id)}let mn=e=>e!==null&&typeof e=="object",Br=["{","}"];class fr{constructor(){this._caches=Object.create(null)}interpolate(t,n,r=Br){if(!n)return[t];let s=this._caches[t];return s||(s=ta(t,r),this._caches[t]=s),ao(s,n)}}let ea=/^(?:\d)+/,Pa=/^(?:\w)+/;function ta(e,[t,n]){let r=[],s=0,u="";for(;s<e.length;){let g=e[s++];if(g===t){u&&r.push({type:"text",value:u}),u="";let E="";for(g=e[s++];g!==void 0&&g!==n;)E+=g,g=e[s++];let U=g===n,P=ea.test(E)?"list":U&&Pa.test(E)?"named":"unknown";r.push({value:E,type:P})}else u+=g}return u&&r.push({type:"text",value:u}),r}function ao(e,t){let n=[],r=0,s=Array.isArray(t)?"list":mn(t)?"named":"unknown";if(s==="unknown")return n;for(;r<e.length;){let u=e[r];switch(u.type){case"text":n.push(u.value);break;case"list":n.push(t[parseInt(u.value,10)]);break;case"named":s==="named"&&n.push(t[u.value]);break;case"unknown":break}r++}return n}let Zn="zh-Hans",or="zh-Hant",Vn="en",Xr="fr",hi="es",na=Object.prototype.hasOwnProperty,Si=(e,t)=>na.call(e,t),Ci=new fr;function so(e,t){return!!t.find(n=>e.indexOf(n)!==-1)}function va(e,t){return t.find(n=>e.indexOf(n)===0)}function Oi(e,t){if(!e)return;if(e=e.trim().replace(/_/g,"-"),t&&t[e])return e;if(e=e.toLowerCase(),e==="chinese")return Zn;if(e.indexOf("zh")===0)return e.indexOf("-hans")>-1?Zn:e.indexOf("-hant")>-1||so(e,["-tw","-hk","-mo","-cht"])?or:Zn;let n=[Vn,Xr,hi];t&&Object.keys(t).length>0&&(n=Object.keys(t));let r=va(e,n);if(r)return r}class ji{constructor({locale:t,fallbackLocale:n,messages:r,watcher:s,formater:u}){this.locale=Vn,this.fallbackLocale=Vn,this.message={},this.messages={},this.watchers=[],n&&(this.fallbackLocale=n),this.formater=u||Ci,this.messages=r||{},this.setLocale(t||Vn),s&&this.watchLocale(s)}setLocale(t){let n=this.locale;this.locale=Oi(t,this.messages)||this.fallbackLocale,this.messages[this.locale]||(this.messages[this.locale]={}),this.message=this.messages[this.locale],n!==this.locale&&this.watchers.forEach(r=>{r(this.locale,n)})}getLocale(){return this.locale}watchLocale(t){let n=this.watchers.push(t)-1;return()=>{this.watchers.splice(n,1)}}add(t,n,r=!0){let s=this.messages[t];s?r?Object.assign(s,n):Object.keys(n).forEach(u=>{Si(s,u)||(s[u]=n[u])}):this.messages[t]=n}f(t,n,r){return this.formater.interpolate(t,n,r).join("")}t(t,n,r){let s=this.message;return typeof n=="string"?(n=Oi(n,this.messages),n&&(s=this.messages[n])):r=n,Si(s,t)?this.formater.interpolate(s[t],r).join(""):(console.warn(`Cannot translate the value of keypath ${t}. Use the value of keypath as default.`),t)}}function dr(e,t){e.$watchLocale?e.$watchLocale(n=>{t.setLocale(n)}):e.$watch(()=>e.$locale,n=>{t.setLocale(n)})}function Sr(){return typeof O!="undefined"&&O.getLocale?O.getLocale():typeof global!="undefined"&&global.getLocale?global.getLocale():Vn}function lo(e,t={},n,r){typeof e!="string"&&([e,t]=[t,e]),typeof e!="string"&&(e=Sr()),typeof n!="string"&&(n=typeof R!="undefined"&&R.fallbackLocale||Vn);let s=new ji({locale:e,fallbackLocale:n,messages:t,watcher:r}),u=(g,E)=>{if(typeof Nt!="function")u=function(U,P){return s.t(U,P)};else{let U=!1;u=function(P,L){let Oe=Nt().$vm;return Oe&&(Oe.$locale,U||(U=!0,dr(Oe,s))),s.t(P,L)}}return u(g,E)};return{i18n:s,f(g,E,U){return s.f(g,E,U)},t(g,E){return u(g,E)},add(g,E,U=!0){return s.add(g,E,U)},watch(g){return s.watchLocale(g)},getLocale(){return s.getLocale()},setLocale(g){return s.setLocale(g)}}}function Mo(e,t){return e.indexOf(t[0])>-1}let Co=re.once(()=>typeof R!="undefined"&&R.locales&&!!Object.keys(R.locales).length),Ai;function pi(){let e=O.getLocale(),t=R.locales;return t[e]||t[R.fallbackLocale]||t.en||{}}function Do(e){return Mo(e,re.I18N_JSON_DELIMITERS)?le().f(e,pi(),re.I18N_JSON_DELIMITERS):e}function D(e,t){if(t.length===1){if(e){let r=E=>K.isString(E)&&Mo(E,re.I18N_JSON_DELIMITERS),s=t[0],u=[];if(K.isArray(e)&&(u=e.filter(E=>r(E[s]))).length)return u;let g=e[t[0]];if(r(g))return e}return}let n=t.shift();return D(e&&e[n],t)}function Z(e,t){return t.map(n=>ve(e,n))}function ve(e,t){let n=D(e,t);if(!n)return!1;let r=t[t.length-1];if(K.isArray(n))n.forEach(s=>ve(s,[r]));else{let s=n[r];Object.defineProperty(n,r,{get(){return Do(s)},set(u){s=u}})}return!0}function le(){if(!Ai){let e;if(typeof Nt=="function"?e=v.requireModule("plus").getLanguage():e=l.webview.currentWebview().getStyle().locale,Ai=lo(e),Co()){let t=Object.keys(R.locales||{});t.length&&t.forEach(n=>Ai.add(n,R.locales[n])),Ai.setLocale(e)}}return Ai}function de(e,t,n){return t.reduce((r,s,u)=>(r[e+s]=n[u],r),{})}let Ot=re.once(()=>{let e="uni.app.",t=["quit"];le().add(Vn,de(e,t,["Press back button again to exit"]),!1),le().add(hi,de(e,t,["Pulse otra vez para salir"]),!1),le().add(Xr,de(e,t,["Appuyez \xE0 nouveau pour quitter l'application"]),!1),le().add(Zn,de(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u5E94\u7528"]),!1),le().add(or,de(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u61C9\u7528"]),!1)}),J=re.once(()=>{let e="uni.showActionSheet.",t=["cancel"];le().add(Vn,de(e,t,["Cancel"]),!1),le().add(hi,de(e,t,["Cancelar"]),!1),le().add(Xr,de(e,t,["Annuler"]),!1),le().add(Zn,de(e,t,["\u53D6\u6D88"]),!1),le().add(or,de(e,t,["\u53D6\u6D88"]),!1)}),Y=re.once(()=>{let e="uni.showModal.",t=["cancel","confirm"];le().add(Vn,de(e,t,["Cancel","OK"]),!1),le().add(hi,de(e,t,["Cancelar","OK"]),!1),le().add(Xr,de(e,t,["Annuler","OK"]),!1),le().add(Zn,de(e,t,["\u53D6\u6D88","\u786E\u5B9A"]),!1),le().add(or,de(e,t,["\u53D6\u6D88","\u78BA\u5B9A"]),!1)}),ce=re.once(()=>{let e="uni.chooseImage.",t=["cancel","sourceType.album","sourceType.camera"];le().add(Vn,de(e,t,["Cancel","Album","Camera"]),!1),le().add(hi,de(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),le().add(Xr,de(e,t,["Annuler","Album","Cam\xE9ra"]),!1),le().add(Zn,de(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),le().add(or,de(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),xe=re.once(()=>{let e="uni.chooseVideo.",t=["cancel","sourceType.album","sourceType.camera"];le().add(Vn,de(e,t,["Cancel","Album","Camera"]),!1),le().add(hi,de(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),le().add(Xr,de(e,t,["Annuler","Album","Cam\xE9ra"]),!1),le().add(Zn,de(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),le().add(or,de(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),lt=re.once(()=>{let e="uni.previewImage.",t=["cancel","button.save","save.success","save.fail"];le().add(Vn,de(e,t,["Cancel","Save Image","Saved successfully","Save failed"]),!1),le().add(hi,de(e,t,["Cancelar","Guardar imagen","Guardado exitosamente","Error al guardar"]),!1),le().add(Xr,de(e,t,["Annuler","Guardar imagen","Enregistr\xE9 avec succ\xE8s","\xC9chec de la sauvegarde"]),!1),le().add(Zn,de(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u56FE\u50CF","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u6210\u529F","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u5931\u8D25"]),!1),le().add(or,de(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u5716\u50CF","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u6210\u529F","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u5931\u6557"]),!1)}),zt=re.once(()=>{let e="uni.setClipboardData.",t=["success","fail"];le().add(Vn,de(e,t,["Content copied","Copy failed, please copy manually"]),!1),le().add(hi,de(e,t,["Contenido copiado","Error al copiar, copie manualmente"]),!1),le().add(Xr,de(e,t,["Contenu copi\xE9","\xC9chec de la copie, copiez manuellement"]),!1),le().add(Zn,de(e,t,["\u5185\u5BB9\u5DF2\u590D\u5236","\u590D\u5236\u5931\u8D25\uFF0C\u8BF7\u624B\u52A8\u590D\u5236"]),!1),le().add(or,de(e,t,["\u5167\u5BB9\u5DF2\u5FA9\u5236","\u5FA9\u5236\u5931\u6557\uFF0C\u8ACB\u624B\u52D5\u5FA9\u88FD"]),!1)}),An=re.once(()=>{let e="uni.scanCode.",t=["title","album","fail","flash.on","flash.off"];le().add(Vn,de(e,t,["Scan code","Album","Recognition failure","Tap to turn light on","Tap to turn light off"]),!1),le().add(hi,de(e,t,["C\xF3digo de escaneo","\xC1lbum","\xC9chec de la reconnaissance","Toque para encender la luz","Toque para apagar la luz"]),!1),le().add(Xr,de(e,t,["Code d\u2019analyse","Album","Fallo de reconocimiento","Appuyez pour activer l'\xE9clairage","Appuyez pour d\xE9sactiver l'\xE9clairage"]),!1),le().add(Zn,de(e,t,["\u626B\u7801","\u76F8\u518C","\u8BC6\u522B\u5931\u8D25","\u8F7B\u89E6\u7167\u4EAE","\u8F7B\u89E6\u5173\u95ED"]),!1),le().add(or,de(e,t,["\u6383\u78BC","\u76F8\u518A","\u8B58\u5225\u5931\u6557","\u8F15\u89F8\u7167\u4EAE","\u8F15\u89F8\u95DC\u9589"]),!1)}),Xn=re.once(()=>{let e="uni.startSoterAuthentication.",t=["authContent"];le().add(Vn,de(e,t,["Fingerprint recognition"]),!1),le().add(hi,de(e,t,["Reconocimiento de huellas dactilares"]),!1),le().add(Xr,de(e,t,["Reconnaissance de l'empreinte digitale"]),!1),le().add(Zn,de(e,t,["\u6307\u7EB9\u8BC6\u522B\u4E2D..."]),!1),le().add(or,de(e,t,["\u6307\u7D0B\u8B58\u5225\u4E2D..."]),!1)});function Qr(e){if(Co())return Z(e,[["titleText"],["searchInput","placeholder"],["buttons","text"]])}function Mr(e){if(Co()){let t="caption";return Z(e,[["contentdown",t],["contentover",t],["contentrefresh",t]])}}function co(e){let t=new re.Emitter;return{on(n,r){return t.on(n,r)},once(n,r){return t.once(n,r)},off(n,r){return t.off(n,r)},emit(n,...r){return t.emit(n,...r)},subscribe(n,r,s=!1){t[s?"once":"on"](`${e}.${n}`,r)},unsubscribe(n,r){t.off(`${e}.${n}`,r)},subscribeHandler(n,r,s){t.emit(`${e}.${n}`,r,s)}}}let gr="invokeViewApi",gi="invokeServiceApi";function uo(e){return e=e+"",e.indexOf("rpx")!==-1||e.indexOf("upx")!==-1}function fo(e,t=!1){if(t)return ra(e);if(K.isString(e)){let n=parseInt(e)||0;return uo(e)?O.upx2px(n):n}return e}function ra(e){return uo(e)?e.replace(/(\d+(\.\d+)?)[ru]px/g,(t,n)=>O.upx2px(parseFloat(n))+"px"):e}function Qn(e){let t=re.resolveComponentInstance(e);if(t.$page)return t.$page.id;if(!t.$)return;let n=t.$.root.proxy;if(n&&n.$page)return n.$page.id}function Dr(){let e=jn(),t=e.length;if(t)return e[t-1]}function qa(){let e=Dr();if(e)return e.$page.meta}function Na(){let e=qa();return e?e.id:-1}function Lr(){let e=Dr();if(e)return e.$vm}let Vs=["navigationBar","pullToRefresh"];function Us(){return JSON.parse(JSON.stringify(R.globalStyle||{}))}function il(e,t){let n=Us(),r=K.extend({id:t},n,e);Vs.forEach(u=>{r[u]=K.extend({},n[u],e[u])});let{navigationBar:s}=r;return s.titleText&&s.titleImage&&(s.titleText=""),r}function Oo(e){return JSON.parse(fo(JSON.stringify(e),!0))}function Ti(e){return e.offset&&(e.offset=fo(e.offset)),e.height&&(e.height=fo(e.height)),e.range&&(e.range=fo(e.range)),e}function ka(e,t,n,r,s,u){let{id:g,route:E}=r,U=re.normalizeStyles(r.navigationBar,R.themeConfig,u).titleColor;return{id:g,path:re.addLeadingSlash(E),route:E,fullPath:t,options:n,meta:r,openType:e,eventChannel:s,statusBarStyle:U==="#ffffff"?"light":"dark"}}function Nl(e,t,n){let r=e.$[t];!K.isArray(r)||n.__weh&&K.remove(r,n.__weh)}function zn(e,t,n){if(K.isString(e))n=t,t=e,e=Lr();else if(typeof e=="number"){let s=jn().find(u=>u.$page.id===e);s?e=s.$vm:e=Lr()}if(!e)return;if(e.__call_hook)return e.__call_hook(t,n);let r=e.$[t];return r&&re.invokeArrayFns(r,n)}function ma(e){if(e.indexOf("/")===0)return e;let t="",n=jn();return n.length&&(t=n[n.length-1].$page.route),gs(t,e)}function gs(e,t){if(t.indexOf("/")===0)return t;if(t.indexOf("./")===0)return gs(e,t.slice(2));let n=t.split("/"),r=n.length,s=0;for(;s<r&&n[s]==="..";s++);n.splice(0,s),t=n.join("/");let u=e.length>0?e.split("/"):[];return u.splice(u.length-s-1,s+1),re.addLeadingSlash(u.concat(n).join("/"))}function ho(e,t=!1){return t?We.find(n=>n.path===e||n.alias===e):We.find(n=>n.path===e)}function Ka(e){let t=ho(e);if(t)return t.meta}function ol(e,t,n){let r=ho(re.addLeadingSlash(t));if(r){let{meta:u}=r;delete u.tabBarIndex,u.isQuit=u.isTabBar=!1}let s=ho(re.addLeadingSlash(n));if(s){let{meta:u}=s;u.tabBarIndex=e,u.isQuit=u.isTabBar=!0;let g=R.tabBar;g&&g.list&&g.list[e]&&(g.list[e].pagePath=re.removeLeadingSlash(n))}}let Ra,al,_a;function vs(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function ms(){return Ra.webview.currentWebview().id}let zi,Cr,ba={};function Lo(e){let t=e.data&&e.data.__message;if(!t||!t.__page)return;let n=t.__page,r=ba[n];r&&r(t),t.keep||delete ba[n]}function xa(e,t){vs()==="v8"?_a?(zi&&zi.close(),zi=new _a(ms()),zi.onmessage=Lo):Cr||(Cr=al.requireModule("globalEvent"),Cr.addEventListener("plusMessage",Lo)):window.__plusMessage=Lo,ba[e]=t}class sl{constructor(t){this.webview=t}sendMessage(t){let n=JSON.parse(JSON.stringify({__message:{data:t}})),r=this.webview.id;_a?new _a(r).postMessage(n):Ra.webview.postMessageToUniNView&&Ra.webview.postMessageToUniNView(n,r)}close(){this.webview.close()}}function $s({context:e={},url:t,data:n={},style:r={},onMessage:s,onClose:u}){let g=R.darkmode;Ra=e.plus||l,al=e.weex||(typeof v=="object"?v:null),_a=e.BroadcastChannel||(typeof BroadcastChannel=="object"?BroadcastChannel:null);let E={autoBackButton:!0,titleSize:"17px"},U=`page${Date.now()}`;r=K.extend({},r),r.titleNView!==!1&&r.titleNView!=="none"&&(r.titleNView=K.extend(E,r.titleNView));let P={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${t}.js`,defaultFontSize:16,viewport:Ra.screen.resolutionWidth}};r=K.extend(P,r);let L=Ra.webview.create("",U,r,{extras:{from:ms(),runtime:vs(),data:K.extend({},n,{darkmode:g}),useGlobalEvent:!_a}});return L.addEventListener("close",u),xa(U,Oe=>{K.isFunction(s)&&s(Oe.data),Oe.keep||L.close("auto")}),L.show(r.animationType,r.animationDuration),new sl(L)}let kl=(e,t)=>_t.emit("api."+e,t),ya=1;function _s(){return Na()+"."+gr}let Hs=(e,t,n,r)=>{let{subscribe:s,publishHandler:u}=_t,g=r?ya++:0;r&&s(gr+"."+g,r,!0),u(_s(),{id:g,name:e,args:t},n)},ll=(e,t,n,r)=>{let{subscribe:s,unsubscribe:u,publishHandler:g}=_t,E=ya++,U=gr+"."+E;return s(U,n),g(_s(),{id:E,name:e,args:t},r),()=>{u(U)}},js=Object.create(null);function y(){_t.subscribe(gi,W)}function M(e,t){js[e]||(js[e]=t)}function W({id:e,name:t,args:n},r){let s=g=>{e&&_t.publishHandler(gi+"."+e,g,r)},u=js[t];u?u(n,s):s({})}let H=K.extend(co("view"),{invokeOnCallback:kl,invokeViewMethod:Hs,invokeViewMethodKeepAlive:ll});function Q(){let{on:e}=_t;e(re.ON_RESIZE,ee),e(re.ON_APP_ENTER_FOREGROUND,he),e(re.ON_APP_ENTER_BACKGROUND,me)}function ee(e){zn(Dr(),re.ON_RESIZE,e),_t.invokeOnCallback("onWindowResize",e)}function he(e){let t=Dr();zn(Nt(),re.ON_SHOW,e),zn(t,re.ON_SHOW)}function me(){zn(Nt(),re.ON_HIDE),zn(Dr(),re.ON_HIDE)}let we=[re.ON_PAGE_SCROLL,re.ON_REACH_BOTTOM];function Be(){we.forEach(e=>_t.subscribe(e,Se(e)))}function Se(e){return(t,n)=>{zn(parseInt(n),e,t)}}function je(){Q(),Be()}function bt(e){e.$vm=e,e.$mpType="app";let t=Dn.ref(le().getLocale());Object.defineProperty(e,"$locale",{get(){return t.value},set(n){t.value=n}})}function Ct(e,t){e.route=t.route,e.$vm=e,e.$page=t,e.$mpType="page",t.meta.isTabBar&&(e.$.__isTabBar=!0,e.$.__isActive=!0)}function Wt(){return{path:"",query:{},scene:1001,referrerInfo:{appId:"",extraData:{}}}}function Et(e,t){let n=e.$options||{};n.globalData=K.extend(n.globalData||{},t),Object.defineProperty(e,"globalData",{get(){return n.globalData},set(r){n.globalData=r}})}function Je(e){if(e.indexOf("//")===0)return"https:"+e;if(re.SCHEME_RE.test(e)||re.DATA_RE.test(e))return e;if(_n(e))return"file://"+Mt(e);let t="file://"+Mt("_www");if(e.indexOf("/")===0)return e.startsWith("/storage/")||e.startsWith("/sdcard/")||e.includes("/Containers/Data/Application/")?"file://"+e:t+e;if(e.indexOf("../")===0||e.indexOf("./")===0){if(typeof __id__=="string")return t+gs(re.addLeadingSlash(__id__),e);{let n=Dr();if(n)return t+gs(re.addLeadingSlash(n.route),e)}}return e}let Mt=re.cacheStringFunction(e=>l.io.convertLocalFileSystemURL(e).replace(/^\/?apps\//,"/android_asset/apps/").replace(/\/$/,""));function _n(e){return e.indexOf("_www")===0||e.indexOf("_doc")===0||e.indexOf("_documents")===0||e.indexOf("_downloads")===0}let wn="success",At="fail",ar=[wn,At,"complete"];function Kt(e,t,n,r){if(!e)return;if(typeof n=="undefined")return e[t]();let[,s]=Ba(n,r);return Object.keys(s).length?e[t](bs(t,s)):e[t]()}function Gt(e,t,n,r){if(!e)return;let[s,u]=Ba(n,r);return Object.keys(u).length?e[t](s,bs(t,u)):e[t](s)}function Rn(e,t){let n=er(e,t.$el);return n||console.error("Can not find `"+e+"`")}function er(e,t){if(!e||!t)return;if(t.attr&&t.attr.id===e)return t;let n=t.children;if(!!n)for(let r=0,s=n.length;r<s;r++){let u=er(e,n[r]);if(u)return u}}function Ba(e={},t){let n=Object.create(null),r=function(u){let g=e[u];K.isFunction(g)&&(n[u]=g,delete e[u])};return ar.forEach(r),t&&t.forEach(r),[e,n]}function bs(e,t){return function(r){let s=r.type;delete r.type;let u=t[s];if(s===wn?r.errMsg=`${e}:ok`:s===At&&(r.errMsg=e+":fail "+(r.msg?" "+r.msg:"")),delete r.code,delete r.msg,K.isFunction(u)&&u(r),s===wn||s===At){let g=t.complete;K.isFunction(g)&&g(r)}}}let Ma;function Ao(){return Ma}function ys(e){let t=e.$;Object.defineProperty(t.ctx,"$children",{get(){return tr().map(r=>r.$vm)}});let n=t.appContext;Ma=K.extend(n.app,{mountPage(r,s,u){let g=Dn.createVNode(r,s);g.appContext=n,g.__page_container__=u,Dn.render(g,u);let E=g.component.proxy;return E.__page_container__=u,E},unmountPage:r=>{let{__page_container__:s}=r;s&&(s.isUnmounted=!0,Dn.render(null,s))}})}let ei=[];function Da(e){if(!e.$page.meta.isNVue)return ei.push(e);let n=ei.findIndex(r=>r.$page.id===e.$page.id);n>-1?ei.splice(n,1,e):ei.push(e)}function ia(e){return ei.find(t=>t.$page.id===e)}function tr(){return ei}function Ja(){let e=[];return ei.forEach(t=>{t.$.__isTabBar?t.$.__isActive&&e.push(t):e.push(t)}),e}function cl(){let e=Dr();!e||Fo(e)}function Fo(e){let t=ei.findIndex(n=>n===e);t!==-1&&(e.$page.meta.isNVue||Ao().unmountPage(e),ei.splice(t,1))}let Wi={play(e){return Kt(e,"play")},pause(e){return Kt(e,"pause")},seek(e,t){return Gt(e,"seek",t.position)},stop(e){return Kt(e,"stop")},sendDanmu(e,t){return Gt(e,"sendDanmu",t)},playbackRate(e,t){return Gt(e,"playbackRate",t.rate)},requestFullScreen(e,t={}){return Gt(e,"requestFullScreen",t)},exitFullScreen(e){return Kt(e,"exitFullScreen")},showStatusBar(e){return Kt(e,"showStatusBar")},hideStatusBar(e){return Kt(e,"hideStatusBar")}};function Un(e,t,n,r){let s=ia(t);if(s==null?void 0:s.$page.meta.isNVue){let u=s.$vm;return Wi[n](Rn(e,u),r)}_t.invokeViewMethod("video."+e,{videoId:e,type:n,data:r},t)}let Gi={getCenterLocation(e,t){return Kt(e,"getCenterLocation",t)},moveToLocation(e,t){return Gt(e,"moveToLocation",t)},translateMarker(e,t){return Gt(e,"translateMarker",t,["animationEnd"])},includePoints(e,t){return Gt(e,"includePoints",t)},getRegion(e,t){return Kt(e,"getRegion",t)},getScale(e,t){return Kt(e,"getScale",t)},addCustomLayer(e,t){return Gt(e,"addCustomLayer",t)},removeCustomLayer(e,t){return Gt(e,"removeCustomLayer",t)},addGroundOverlay(e,t){return Gt(e,"addGroundOverlay",t)},removeGroundOverlay(e,t){return Gt(e,"removeGroundOverlay",t)},updateGroundOverlay(e,t){return Gt(e,"updateGroundOverlay",t)},initMarkerCluster(e,t){return Gt(e,"initMarkerCluster",t)},addMarkers(e,t){return Gt(e,"addMarkers",t)},removeMarkers(e,t){return Gt(e,"removeMarkers",t)},moveAlong(e,t){return Gt(e,"moveAlong",t)},setLocMarkerIcon(e,t){return Gt(e,"setLocMarkerIcon",t)},openMapApp(e,t){return Gt(e,"openMapApp",t)},on(e,t){return e.on(t.name,t.callback)}};function vi(e,t,n,r,s){let u=ia(t);if(u==null?void 0:u.$page.meta.isNVue){let g=u.$vm;return Gi[n](Rn(e,g),r)}_t.invokeViewMethod("map."+e,{type:n,data:r},t,s)}function Ii(e){return`IntersectionObserver.${e}`}function ti({reqId:e,component:t,options:n,callback:r},s){let u=Ii(e);_t.invokeViewMethod("addIntersectionObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:u},s),_t.subscribe(u,r)}function $r({reqId:e,component:t},n){_t.invokeViewMethod("removeIntersectionObserver",{reqId:e,component:t.$el.nodeId},n),_t.unsubscribe(Ii(e))}function Or(e){return`MediaQueryObserver.${e}`}function Pi({reqId:e,component:t,options:n,callback:r},s){let u=Or(e);_t.invokeViewMethod("addMediaQueryObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:u},s),_t.subscribe(u,r)}function Es({reqId:e,component:t},n){_t.invokeViewMethod("removeMediaQueryObserver",{reqId:e,component:t.$el.nodeId},n),_t.unsubscribe(Or(e))}let hr=200,Ar=["unknown","none","ethernet","wifi","2g","3g","4g","5g"],zs="_doc/uniapp_temp",ni=`${zs}_${Date.now()}`;function Vo(e){let t=e.split("/");return t[t.length-1]}function Yi(e){let t=e.split(".");return t.length>1?"."+t[t.length-1]:""}let Ea="backbutton";function La(){O.navigateBack({from:"backbutton",success(){}})}let po=Wt(),Ni=Wt();function ws(){return K.extend({},Ni)}function Uo(){return K.extend({},po)}function Ss({path:e,query:t,referrerInfo:n}){K.extend(po,{path:e,query:t?re.parseQuery(t):{},referrerInfo:n||{}})}function Za({path:e,query:t,referrerInfo:n}){return K.extend(Ni,{path:e,query:t?re.parseQuery(t):{},referrerInfo:n||{},channel:l.runtime.channel,launcher:l.runtime.launcher}),K.extend(po,Ni),K.extend({},Ni)}function Rl(){let e=v.requireModule("plus");if(e.getRedirectInfo){let{path:t,query:n,extraData:r,userAction:s,fromAppid:u}=e.getRedirectInfo()||{},g={appId:u,extraData:{}};return r&&(g.extraData=r),{path:t||"",query:n?"?"+n:"",referrerInfo:g,userAction:s}}}var Ue={};(function(e){var t=typeof Uint8Array!="undefined"&&typeof Uint16Array!="undefined"&&typeof Int32Array!="undefined";function n(u,g){return Object.prototype.hasOwnProperty.call(u,g)}e.assign=function(u){for(var g=Array.prototype.slice.call(arguments,1);g.length;){var E=g.shift();if(!!E){if(typeof E!="object")throw new TypeError(E+"must be non-object");for(var U in E)n(E,U)&&(u[U]=E[U])}}return u},e.shrinkBuf=function(u,g){return u.length===g?u:u.subarray?u.subarray(0,g):(u.length=g,u)};var r={arraySet:function(u,g,E,U,P){if(g.subarray&&u.subarray){u.set(g.subarray(E,E+U),P);return}for(var L=0;L<U;L++)u[P+L]=g[E+L]},flattenChunks:function(u){var g,E,U,P,L,Oe;for(U=0,g=0,E=u.length;g<E;g++)U+=u[g].length;for(Oe=new Uint8Array(U),P=0,g=0,E=u.length;g<E;g++)L=u[g],Oe.set(L,P),P+=L.length;return Oe}},s={arraySet:function(u,g,E,U,P){for(var L=0;L<U;L++)u[P+L]=g[E+L]},flattenChunks:function(u){return[].concat.apply([],u)}};e.setTyped=function(u){u?(e.Buf8=Uint8Array,e.Buf16=Uint16Array,e.Buf32=Int32Array,e.assign(e,r)):(e.Buf8=Array,e.Buf16=Array,e.Buf32=Array,e.assign(e,s))},e.setTyped(t)})(Ue);var gt={},ut={},xt={},Yt=Ue,Wn=4,Mn=0,nr=1,wa=2;function ki(e){for(var t=e.length;--t>=0;)e[t]=0}var $o=0,Ws=1,ac=2,xl=3,oa=258,vr=29,ri=256,Xa=ri+1+vr,Cs=30,Os=19,As=2*Xa+1,Ho=15,Fa=16,Gn=7,$n=256,Bl=16,qi=17,Ki=18,Ts=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Is=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],jc=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],Ji=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],mr=512,Hr=new Array((Xa+2)*2);ki(Hr);var Va=new Array(Cs*2);ki(Va);var Fr=new Array(mr);ki(Fr);var jr=new Array(oa-xl+1);ki(jr);var Ml=new Array(vr);ki(Ml);var ul=new Array(Cs);ki(ul);function Bn(e,t,n,r,s){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=s,this.has_stree=e&&e.length}var Sn,mi,_i;function aa(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function fl(e){return e<256?Fr[e]:Fr[256+(e>>>7)]}function Ua(e,t){e.pending_buf[e.pending++]=t&255,e.pending_buf[e.pending++]=t>>>8&255}function Ri(e,t,n){e.bi_valid>Fa-n?(e.bi_buf|=t<<e.bi_valid&65535,Ua(e,e.bi_buf),e.bi_buf=t>>Fa-e.bi_valid,e.bi_valid+=n-Fa):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function jo(e,t,n){Ri(e,n[t*2],n[t*2+1])}function dl(e,t){var n=0;do n|=e&1,e>>>=1,n<<=1;while(--t>0);return n>>>1}function Qa(e){e.bi_valid===16?(Ua(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=e.bi_buf&255,e.bi_buf>>=8,e.bi_valid-=8)}function es(e,t){var n=t.dyn_tree,r=t.max_code,s=t.stat_desc.static_tree,u=t.stat_desc.has_stree,g=t.stat_desc.extra_bits,E=t.stat_desc.extra_base,U=t.stat_desc.max_length,P,L,Oe,Pe,Re,ht,pt=0;for(Pe=0;Pe<=Ho;Pe++)e.bl_count[Pe]=0;for(n[e.heap[e.heap_max]*2+1]=0,P=e.heap_max+1;P<As;P++)L=e.heap[P],Pe=n[n[L*2+1]*2+1]+1,Pe>U&&(Pe=U,pt++),n[L*2+1]=Pe,!(L>r)&&(e.bl_count[Pe]++,Re=0,L>=E&&(Re=g[L-E]),ht=n[L*2],e.opt_len+=ht*(Pe+Re),u&&(e.static_len+=ht*(s[L*2+1]+Re)));if(pt!==0){do{for(Pe=U-1;e.bl_count[Pe]===0;)Pe--;e.bl_count[Pe]--,e.bl_count[Pe+1]+=2,e.bl_count[U]--,pt-=2}while(pt>0);for(Pe=U;Pe!==0;Pe--)for(L=e.bl_count[Pe];L!==0;)Oe=e.heap[--P],!(Oe>r)&&(n[Oe*2+1]!==Pe&&(e.opt_len+=(Pe-n[Oe*2+1])*n[Oe*2],n[Oe*2+1]=Pe),L--)}}function hl(e,t,n){var r=new Array(Ho+1),s=0,u,g;for(u=1;u<=Ho;u++)r[u]=s=s+n[u-1]<<1;for(g=0;g<=t;g++){var E=e[g*2+1];E!==0&&(e[g*2]=dl(r[E]++,E))}}function sc(){var e,t,n,r,s,u=new Array(Ho+1);for(n=0,r=0;r<vr-1;r++)for(Ml[r]=n,e=0;e<1<<Ts[r];e++)jr[n++]=r;for(jr[n-1]=r,s=0,r=0;r<16;r++)for(ul[r]=s,e=0;e<1<<Is[r];e++)Fr[s++]=r;for(s>>=7;r<Cs;r++)for(ul[r]=s<<7,e=0;e<1<<Is[r]-7;e++)Fr[256+s++]=r;for(t=0;t<=Ho;t++)u[t]=0;for(e=0;e<=143;)Hr[e*2+1]=8,e++,u[8]++;for(;e<=255;)Hr[e*2+1]=9,e++,u[9]++;for(;e<=279;)Hr[e*2+1]=7,e++,u[7]++;for(;e<=287;)Hr[e*2+1]=8,e++,u[8]++;for(hl(Hr,Xa+1,u),e=0;e<Cs;e++)Va[e*2+1]=5,Va[e*2]=dl(e,5);Sn=new Bn(Hr,Ts,ri+1,Xa,Ho),mi=new Bn(Va,Is,0,Cs,Ho),_i=new Bn(new Array(0),jc,0,Os,Gn)}function pl(e){var t;for(t=0;t<Xa;t++)e.dyn_ltree[t*2]=0;for(t=0;t<Cs;t++)e.dyn_dtree[t*2]=0;for(t=0;t<Os;t++)e.bl_tree[t*2]=0;e.dyn_ltree[$n*2]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function Dl(e){e.bi_valid>8?Ua(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function lc(e,t,n,r){Dl(e),r&&(Ua(e,n),Ua(e,~n)),Yt.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}function Ps(e,t,n,r){var s=t*2,u=n*2;return e[s]<e[u]||e[s]===e[u]&&r[t]<=r[n]}function Ns(e,t,n){for(var r=e.heap[n],s=n<<1;s<=e.heap_len&&(s<e.heap_len&&Ps(t,e.heap[s+1],e.heap[s],e.depth)&&s++,!Ps(t,r,e.heap[s],e.depth));)e.heap[n]=e.heap[s],n=s,s<<=1;e.heap[n]=r}function cc(e,t,n){var r,s,u=0,g,E;if(e.last_lit!==0)do r=e.pending_buf[e.d_buf+u*2]<<8|e.pending_buf[e.d_buf+u*2+1],s=e.pending_buf[e.l_buf+u],u++,r===0?jo(e,s,t):(g=jr[s],jo(e,g+ri+1,t),E=Ts[g],E!==0&&(s-=Ml[g],Ri(e,s,E)),r--,g=fl(r),jo(e,g,n),E=Is[g],E!==0&&(r-=ul[g],Ri(e,r,E)));while(u<e.last_lit);jo(e,$n,t)}function ts(e,t){var n=t.dyn_tree,r=t.stat_desc.static_tree,s=t.stat_desc.has_stree,u=t.stat_desc.elems,g,E,U=-1,P;for(e.heap_len=0,e.heap_max=As,g=0;g<u;g++)n[g*2]!==0?(e.heap[++e.heap_len]=U=g,e.depth[g]=0):n[g*2+1]=0;for(;e.heap_len<2;)P=e.heap[++e.heap_len]=U<2?++U:0,n[P*2]=1,e.depth[P]=0,e.opt_len--,s&&(e.static_len-=r[P*2+1]);for(t.max_code=U,g=e.heap_len>>1;g>=1;g--)Ns(e,n,g);P=u;do g=e.heap[1],e.heap[1]=e.heap[e.heap_len--],Ns(e,n,1),E=e.heap[1],e.heap[--e.heap_max]=g,e.heap[--e.heap_max]=E,n[P*2]=n[g*2]+n[E*2],e.depth[P]=(e.depth[g]>=e.depth[E]?e.depth[g]:e.depth[E])+1,n[g*2+1]=n[E*2+1]=P,e.heap[1]=P++,Ns(e,n,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],es(e,t),hl(n,U,e.bl_count)}function Sa(e,t,n){var r,s=-1,u,g=t[0*2+1],E=0,U=7,P=4;for(g===0&&(U=138,P=3),t[(n+1)*2+1]=65535,r=0;r<=n;r++)u=g,g=t[(r+1)*2+1],!(++E<U&&u===g)&&(E<P?e.bl_tree[u*2]+=E:u!==0?(u!==s&&e.bl_tree[u*2]++,e.bl_tree[Bl*2]++):E<=10?e.bl_tree[qi*2]++:e.bl_tree[Ki*2]++,E=0,s=u,g===0?(U=138,P=3):u===g?(U=6,P=3):(U=7,P=4))}function ks(e,t,n){var r,s=-1,u,g=t[0*2+1],E=0,U=7,P=4;for(g===0&&(U=138,P=3),r=0;r<=n;r++)if(u=g,g=t[(r+1)*2+1],!(++E<U&&u===g)){if(E<P)do jo(e,u,e.bl_tree);while(--E!==0);else u!==0?(u!==s&&(jo(e,u,e.bl_tree),E--),jo(e,Bl,e.bl_tree),Ri(e,E-3,2)):E<=10?(jo(e,qi,e.bl_tree),Ri(e,E-3,3)):(jo(e,Ki,e.bl_tree),Ri(e,E-11,7));E=0,s=u,g===0?(U=138,P=3):u===g?(U=6,P=3):(U=7,P=4)}}function Ll(e){var t;for(Sa(e,e.dyn_ltree,e.l_desc.max_code),Sa(e,e.dyn_dtree,e.d_desc.max_code),ts(e,e.bl_desc),t=Os-1;t>=3&&e.bl_tree[Ji[t]*2+1]===0;t--);return e.opt_len+=3*(t+1)+5+5+4,t}function Gs(e,t,n,r){var s;for(Ri(e,t-257,5),Ri(e,n-1,5),Ri(e,r-4,4),s=0;s<r;s++)Ri(e,e.bl_tree[Ji[s]*2+1],3);ks(e,e.dyn_ltree,t-1),ks(e,e.dyn_dtree,n-1)}function gl(e){var t=4093624447,n;for(n=0;n<=31;n++,t>>>=1)if(t&1&&e.dyn_ltree[n*2]!==0)return Mn;if(e.dyn_ltree[9*2]!==0||e.dyn_ltree[10*2]!==0||e.dyn_ltree[13*2]!==0)return nr;for(n=32;n<ri;n++)if(e.dyn_ltree[n*2]!==0)return nr;return Mn}var uc=!1;function zc(e){uc||(sc(),uc=!0),e.l_desc=new aa(e.dyn_ltree,Sn),e.d_desc=new aa(e.dyn_dtree,mi),e.bl_desc=new aa(e.bl_tree,_i),e.bi_buf=0,e.bi_valid=0,pl(e)}function fc(e,t,n,r){Ri(e,($o<<1)+(r?1:0),3),lc(e,t,n,!0)}function Wc(e){Ri(e,Ws<<1,3),jo(e,$n,Hr),Qa(e)}function Gc(e,t,n,r){var s,u,g=0;e.level>0?(e.strm.data_type===wa&&(e.strm.data_type=gl(e)),ts(e,e.l_desc),ts(e,e.d_desc),g=Ll(e),s=e.opt_len+3+7>>>3,u=e.static_len+3+7>>>3,u<=s&&(s=u)):s=u=n+5,n+4<=s&&t!==-1?fc(e,t,n,r):e.strategy===Wn||u===s?(Ri(e,(Ws<<1)+(r?1:0),3),cc(e,Hr,Va)):(Ri(e,(ac<<1)+(r?1:0),3),Gs(e,e.l_desc.max_code+1,e.d_desc.max_code+1,g+1),cc(e,e.dyn_ltree,e.dyn_dtree)),pl(e),r&&Dl(e)}function dc(e,t,n){return e.pending_buf[e.d_buf+e.last_lit*2]=t>>>8&255,e.pending_buf[e.d_buf+e.last_lit*2+1]=t&255,e.pending_buf[e.l_buf+e.last_lit]=n&255,e.last_lit++,t===0?e.dyn_ltree[n*2]++:(e.matches++,t--,e.dyn_ltree[(jr[n]+ri+1)*2]++,e.dyn_dtree[fl(t)*2]++),e.last_lit===e.lit_bufsize-1}xt._tr_init=zc,xt._tr_stored_block=fc,xt._tr_flush_block=Gc,xt._tr_tally=dc,xt._tr_align=Wc;function hc(e,t,n,r){for(var s=e&65535|0,u=e>>>16&65535|0,g=0;n!==0;){g=n>2e3?2e3:n,n-=g;do s=s+t[r++]|0,u=u+s|0;while(--g);s%=65521,u%=65521}return s|u<<16|0}var pc=hc;function Yc(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=e&1?3988292384^e>>>1:e>>>1;t[n]=e}return t}var qc=Yc();function Fl(e,t,n,r){var s=qc,u=r+n;e^=-1;for(var g=r;g<u;g++)e=e>>>8^s[(e^t[g])&255];return e^-1}var vl=Fl,Rs={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},ii=Ue,To=xt,Vl=pc,zo=vl,ml=Rs,ns=0,Kc=1,Ys=3,sa=4,qs=5,Wo=0,Ks=1,Zi=-2,gc=-3,Ul=-5,Jc=-1,vc=1,Js=2,mc=3,_c=4,bc=0,$l=2,Zs=8,yc=9,Zc=15,Xc=8,Qc=29,Hl=256,_l=Hl+1+Qc,$a=30,Xs=19,jl=2*_l+1,Ec=15,pn=3,xi=258,Io=xi+pn+1,wc=32,bl=42,Qs=69,yl=73,Po=91,la=103,Ha=113,el=666,pr=1,xs=2,ja=3,rs=4,Sc=3;function Ca(e,t){return e.msg=ml[t],t}function El(e){return(e<<1)-(e>4?9:0)}function ca(e){for(var t=e.length;--t>=0;)e[t]=0}function za(e){var t=e.state,n=t.pending;n>e.avail_out&&(n=e.avail_out),n!==0&&(ii.arraySet(e.output,t.pending_buf,t.pending_out,n,e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,t.pending===0&&(t.pending_out=0))}function oi(e,t){To._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,za(e.strm)}function o(e,t){e.pending_buf[e.pending++]=t}function c(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=t&255}function h(e,t,n,r){var s=e.avail_in;return s>r&&(s=r),s===0?0:(e.avail_in-=s,ii.arraySet(t,e.input,e.next_in,s,n),e.state.wrap===1?e.adler=Vl(e.adler,t,s,n):e.state.wrap===2&&(e.adler=zo(e.adler,t,s,n)),e.next_in+=s,e.total_in+=s,s)}function _(e,t){var n=e.max_chain_length,r=e.strstart,s,u,g=e.prev_length,E=e.nice_match,U=e.strstart>e.w_size-Io?e.strstart-(e.w_size-Io):0,P=e.window,L=e.w_mask,Oe=e.prev,Pe=e.strstart+xi,Re=P[r+g-1],ht=P[r+g];e.prev_length>=e.good_match&&(n>>=2),E>e.lookahead&&(E=e.lookahead);do if(s=t,!(P[s+g]!==ht||P[s+g-1]!==Re||P[s]!==P[r]||P[++s]!==P[r+1])){r+=2,s++;do;while(P[++r]===P[++s]&&P[++r]===P[++s]&&P[++r]===P[++s]&&P[++r]===P[++s]&&P[++r]===P[++s]&&P[++r]===P[++s]&&P[++r]===P[++s]&&P[++r]===P[++s]&&r<Pe);if(u=xi-(Pe-r),r=Pe-xi,u>g){if(e.match_start=t,g=u,u>=E)break;Re=P[r+g-1],ht=P[r+g]}}while((t=Oe[t&L])>U&&--n!==0);return g<=e.lookahead?g:e.lookahead}function I(e){var t=e.w_size,n,r,s,u,g;do{if(u=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-Io)){ii.arraySet(e.window,e.window,t,t,0),e.match_start-=t,e.strstart-=t,e.block_start-=t,r=e.hash_size,n=r;do s=e.head[--n],e.head[n]=s>=t?s-t:0;while(--r);r=t,n=r;do s=e.prev[--n],e.prev[n]=s>=t?s-t:0;while(--r);u+=t}if(e.strm.avail_in===0)break;if(r=h(e.strm,e.window,e.strstart+e.lookahead,u),e.lookahead+=r,e.lookahead+e.insert>=pn)for(g=e.strstart-e.insert,e.ins_h=e.window[g],e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+pn-1])&e.hash_mask,e.prev[g&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=g,g++,e.insert--,!(e.lookahead+e.insert<pn)););}while(e.lookahead<Io&&e.strm.avail_in!==0)}function A(e,t){var n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(I(e),e.lookahead===0&&t===ns)return pr;if(e.lookahead===0)break}e.strstart+=e.lookahead,e.lookahead=0;var r=e.block_start+n;if((e.strstart===0||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,oi(e,!1),e.strm.avail_out===0)||e.strstart-e.block_start>=e.w_size-Io&&(oi(e,!1),e.strm.avail_out===0))return pr}return e.insert=0,t===sa?(oi(e,!0),e.strm.avail_out===0?ja:rs):(e.strstart>e.block_start&&(oi(e,!1),e.strm.avail_out===0),pr)}function x(e,t){for(var n,r;;){if(e.lookahead<Io){if(I(e),e.lookahead<Io&&t===ns)return pr;if(e.lookahead===0)break}if(n=0,e.lookahead>=pn&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+pn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),n!==0&&e.strstart-n<=e.w_size-Io&&(e.match_length=_(e,n)),e.match_length>=pn)if(r=To._tr_tally(e,e.strstart-e.match_start,e.match_length-pn),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=pn){e.match_length--;do e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+pn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart;while(--e.match_length!==0);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else r=To._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(oi(e,!1),e.strm.avail_out===0))return pr}return e.insert=e.strstart<pn-1?e.strstart:pn-1,t===sa?(oi(e,!0),e.strm.avail_out===0?ja:rs):e.last_lit&&(oi(e,!1),e.strm.avail_out===0)?pr:xs}function z(e,t){for(var n,r,s;;){if(e.lookahead<Io){if(I(e),e.lookahead<Io&&t===ns)return pr;if(e.lookahead===0)break}if(n=0,e.lookahead>=pn&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+pn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=pn-1,n!==0&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-Io&&(e.match_length=_(e,n),e.match_length<=5&&(e.strategy===vc||e.match_length===pn&&e.strstart-e.match_start>4096)&&(e.match_length=pn-1)),e.prev_length>=pn&&e.match_length<=e.prev_length){s=e.strstart+e.lookahead-pn,r=To._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-pn),e.lookahead-=e.prev_length-1,e.prev_length-=2;do++e.strstart<=s&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+pn-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart);while(--e.prev_length!==0);if(e.match_available=0,e.match_length=pn-1,e.strstart++,r&&(oi(e,!1),e.strm.avail_out===0))return pr}else if(e.match_available){if(r=To._tr_tally(e,0,e.window[e.strstart-1]),r&&oi(e,!1),e.strstart++,e.lookahead--,e.strm.avail_out===0)return pr}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=To._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<pn-1?e.strstart:pn-1,t===sa?(oi(e,!0),e.strm.avail_out===0?ja:rs):e.last_lit&&(oi(e,!1),e.strm.avail_out===0)?pr:xs}function $(e,t){for(var n,r,s,u,g=e.window;;){if(e.lookahead<=xi){if(I(e),e.lookahead<=xi&&t===ns)return pr;if(e.lookahead===0)break}if(e.match_length=0,e.lookahead>=pn&&e.strstart>0&&(s=e.strstart-1,r=g[s],r===g[++s]&&r===g[++s]&&r===g[++s])){u=e.strstart+xi;do;while(r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&s<u);e.match_length=xi-(u-s),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=pn?(n=To._tr_tally(e,1,e.match_length-pn),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=To._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(oi(e,!1),e.strm.avail_out===0))return pr}return e.insert=0,t===sa?(oi(e,!0),e.strm.avail_out===0?ja:rs):e.last_lit&&(oi(e,!1),e.strm.avail_out===0)?pr:xs}function te(e,t){for(var n;;){if(e.lookahead===0&&(I(e),e.lookahead===0)){if(t===ns)return pr;break}if(e.match_length=0,n=To._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(oi(e,!1),e.strm.avail_out===0))return pr}return e.insert=0,t===sa?(oi(e,!0),e.strm.avail_out===0?ja:rs):e.last_lit&&(oi(e,!1),e.strm.avail_out===0)?pr:xs}function Ie(e,t,n,r,s){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=s}var fe;fe=[new Ie(0,0,0,0,A),new Ie(4,4,8,4,x),new Ie(4,5,16,8,x),new Ie(4,6,32,32,x),new Ie(4,4,16,16,z),new Ie(8,16,32,32,z),new Ie(8,16,128,128,z),new Ie(8,32,128,256,z),new Ie(32,128,258,1024,z),new Ie(32,258,258,4096,z)];function ue(e){e.window_size=2*e.w_size,ca(e.head),e.max_lazy_match=fe[e.level].max_lazy,e.good_match=fe[e.level].good_length,e.nice_match=fe[e.level].nice_length,e.max_chain_length=fe[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=pn-1,e.match_available=0,e.ins_h=0}function He(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Zs,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new ii.Buf16(jl*2),this.dyn_dtree=new ii.Buf16((2*$a+1)*2),this.bl_tree=new ii.Buf16((2*Xs+1)*2),ca(this.dyn_ltree),ca(this.dyn_dtree),ca(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new ii.Buf16(Ec+1),this.heap=new ii.Buf16(2*_l+1),ca(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new ii.Buf16(2*_l+1),ca(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function Ze(e){var t;return!e||!e.state?Ca(e,Zi):(e.total_in=e.total_out=0,e.data_type=$l,t=e.state,t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?bl:Ha,e.adler=t.wrap===2?0:1,t.last_flush=ns,To._tr_init(t),Wo)}function vt(e){var t=Ze(e);return t===Wo&&ue(e.state),t}function yt(e,t){return!e||!e.state||e.state.wrap!==2?Zi:(e.state.gzhead=t,Wo)}function Ne(e,t,n,r,s,u){if(!e)return Zi;var g=1;if(t===Jc&&(t=6),r<0?(g=0,r=-r):r>15&&(g=2,r-=16),s<1||s>yc||n!==Zs||r<8||r>15||t<0||t>9||u<0||u>_c)return Ca(e,Zi);r===8&&(r=9);var E=new He;return e.state=E,E.strm=e,E.wrap=g,E.gzhead=null,E.w_bits=r,E.w_size=1<<E.w_bits,E.w_mask=E.w_size-1,E.hash_bits=s+7,E.hash_size=1<<E.hash_bits,E.hash_mask=E.hash_size-1,E.hash_shift=~~((E.hash_bits+pn-1)/pn),E.window=new ii.Buf8(E.w_size*2),E.head=new ii.Buf16(E.hash_size),E.prev=new ii.Buf16(E.w_size),E.lit_bufsize=1<<s+6,E.pending_buf_size=E.lit_bufsize*4,E.pending_buf=new ii.Buf8(E.pending_buf_size),E.d_buf=1*E.lit_bufsize,E.l_buf=(1+2)*E.lit_bufsize,E.level=t,E.strategy=u,E.method=n,vt(e)}function _e(e,t){return Ne(e,t,Zs,Zc,Xc,bc)}function Me(e,t){var n,r,s,u;if(!e||!e.state||t>qs||t<0)return e?Ca(e,Zi):Zi;if(r=e.state,!e.output||!e.input&&e.avail_in!==0||r.status===el&&t!==sa)return Ca(e,e.avail_out===0?Ul:Zi);if(r.strm=e,n=r.last_flush,r.last_flush=t,r.status===bl)if(r.wrap===2)e.adler=0,o(r,31),o(r,139),o(r,8),r.gzhead?(o(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),o(r,r.gzhead.time&255),o(r,r.gzhead.time>>8&255),o(r,r.gzhead.time>>16&255),o(r,r.gzhead.time>>24&255),o(r,r.level===9?2:r.strategy>=Js||r.level<2?4:0),o(r,r.gzhead.os&255),r.gzhead.extra&&r.gzhead.extra.length&&(o(r,r.gzhead.extra.length&255),o(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=zo(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=Qs):(o(r,0),o(r,0),o(r,0),o(r,0),o(r,0),o(r,r.level===9?2:r.strategy>=Js||r.level<2?4:0),o(r,Sc),r.status=Ha);else{var g=Zs+(r.w_bits-8<<4)<<8,E=-1;r.strategy>=Js||r.level<2?E=0:r.level<6?E=1:r.level===6?E=2:E=3,g|=E<<6,r.strstart!==0&&(g|=wc),g+=31-g%31,r.status=Ha,c(r,g),r.strstart!==0&&(c(r,e.adler>>>16),c(r,e.adler&65535)),e.adler=1}if(r.status===Qs)if(r.gzhead.extra){for(s=r.pending;r.gzindex<(r.gzhead.extra.length&65535)&&!(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>s&&(e.adler=zo(e.adler,r.pending_buf,r.pending-s,s)),za(e),s=r.pending,r.pending===r.pending_buf_size));)o(r,r.gzhead.extra[r.gzindex]&255),r.gzindex++;r.gzhead.hcrc&&r.pending>s&&(e.adler=zo(e.adler,r.pending_buf,r.pending-s,s)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=yl)}else r.status=yl;if(r.status===yl)if(r.gzhead.name){s=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>s&&(e.adler=zo(e.adler,r.pending_buf,r.pending-s,s)),za(e),s=r.pending,r.pending===r.pending_buf_size)){u=1;break}r.gzindex<r.gzhead.name.length?u=r.gzhead.name.charCodeAt(r.gzindex++)&255:u=0,o(r,u)}while(u!==0);r.gzhead.hcrc&&r.pending>s&&(e.adler=zo(e.adler,r.pending_buf,r.pending-s,s)),u===0&&(r.gzindex=0,r.status=Po)}else r.status=Po;if(r.status===Po)if(r.gzhead.comment){s=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>s&&(e.adler=zo(e.adler,r.pending_buf,r.pending-s,s)),za(e),s=r.pending,r.pending===r.pending_buf_size)){u=1;break}r.gzindex<r.gzhead.comment.length?u=r.gzhead.comment.charCodeAt(r.gzindex++)&255:u=0,o(r,u)}while(u!==0);r.gzhead.hcrc&&r.pending>s&&(e.adler=zo(e.adler,r.pending_buf,r.pending-s,s)),u===0&&(r.status=la)}else r.status=la;if(r.status===la&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&za(e),r.pending+2<=r.pending_buf_size&&(o(r,e.adler&255),o(r,e.adler>>8&255),e.adler=0,r.status=Ha)):r.status=Ha),r.pending!==0){if(za(e),e.avail_out===0)return r.last_flush=-1,Wo}else if(e.avail_in===0&&El(t)<=El(n)&&t!==sa)return Ca(e,Ul);if(r.status===el&&e.avail_in!==0)return Ca(e,Ul);if(e.avail_in!==0||r.lookahead!==0||t!==ns&&r.status!==el){var U=r.strategy===Js?te(r,t):r.strategy===mc?$(r,t):fe[r.level].func(r,t);if((U===ja||U===rs)&&(r.status=el),U===pr||U===ja)return e.avail_out===0&&(r.last_flush=-1),Wo;if(U===xs&&(t===Kc?To._tr_align(r):t!==qs&&(To._tr_stored_block(r,0,0,!1),t===Ys&&(ca(r.head),r.lookahead===0&&(r.strstart=0,r.block_start=0,r.insert=0))),za(e),e.avail_out===0))return r.last_flush=-1,Wo}return t!==sa?Wo:r.wrap<=0?Ks:(r.wrap===2?(o(r,e.adler&255),o(r,e.adler>>8&255),o(r,e.adler>>16&255),o(r,e.adler>>24&255),o(r,e.total_in&255),o(r,e.total_in>>8&255),o(r,e.total_in>>16&255),o(r,e.total_in>>24&255)):(c(r,e.adler>>>16),c(r,e.adler&65535)),za(e),r.wrap>0&&(r.wrap=-r.wrap),r.pending!==0?Wo:Ks)}function nt(e){var t;return!e||!e.state?Zi:(t=e.state.status,t!==bl&&t!==Qs&&t!==yl&&t!==Po&&t!==la&&t!==Ha&&t!==el?Ca(e,Zi):(e.state=null,t===Ha?Ca(e,gc):Wo))}function qe(e,t){var n=t.length,r,s,u,g,E,U,P,L;if(!e||!e.state||(r=e.state,g=r.wrap,g===2||g===1&&r.status!==bl||r.lookahead))return Zi;for(g===1&&(e.adler=Vl(e.adler,t,n,0)),r.wrap=0,n>=r.w_size&&(g===0&&(ca(r.head),r.strstart=0,r.block_start=0,r.insert=0),L=new ii.Buf8(r.w_size),ii.arraySet(L,t,n-r.w_size,r.w_size,0),t=L,n=r.w_size),E=e.avail_in,U=e.next_in,P=e.input,e.avail_in=n,e.next_in=0,e.input=t,I(r);r.lookahead>=pn;){s=r.strstart,u=r.lookahead-(pn-1);do r.ins_h=(r.ins_h<<r.hash_shift^r.window[s+pn-1])&r.hash_mask,r.prev[s&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=s,s++;while(--u);r.strstart=s,r.lookahead=pn-1,I(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=pn-1,r.match_available=0,e.next_in=U,e.input=P,e.avail_in=E,r.wrap=g,Wo}ut.deflateInit=_e,ut.deflateInit2=Ne,ut.deflateReset=vt,ut.deflateResetKeep=Ze,ut.deflateSetHeader=yt,ut.deflate=Me,ut.deflateEnd=nt,ut.deflateSetDictionary=qe,ut.deflateInfo="pako deflate (from Nodeca project)";var at={},It=Ue,st=!0,i=!0;try{String.fromCharCode.apply(null,[0])}catch(e){st=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){i=!1}for(var a=new It.Buf8(256),f=0;f<256;f++)a[f]=f>=252?6:f>=248?5:f>=240?4:f>=224?3:f>=192?2:1;a[254]=a[254]=1,at.string2buf=function(e){var t,n,r,s,u,g=e.length,E=0;for(s=0;s<g;s++)n=e.charCodeAt(s),(n&64512)===55296&&s+1<g&&(r=e.charCodeAt(s+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),s++)),E+=n<128?1:n<2048?2:n<65536?3:4;for(t=new It.Buf8(E),u=0,s=0;u<E;s++)n=e.charCodeAt(s),(n&64512)===55296&&s+1<g&&(r=e.charCodeAt(s+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),s++)),n<128?t[u++]=n:n<2048?(t[u++]=192|n>>>6,t[u++]=128|n&63):n<65536?(t[u++]=224|n>>>12,t[u++]=128|n>>>6&63,t[u++]=128|n&63):(t[u++]=240|n>>>18,t[u++]=128|n>>>12&63,t[u++]=128|n>>>6&63,t[u++]=128|n&63);return t};function p(e,t){if(t<65534&&(e.subarray&&i||!e.subarray&&st))return String.fromCharCode.apply(null,It.shrinkBuf(e,t));for(var n="",r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n}at.buf2binstring=function(e){return p(e,e.length)},at.binstring2buf=function(e){for(var t=new It.Buf8(e.length),n=0,r=t.length;n<r;n++)t[n]=e.charCodeAt(n);return t},at.buf2string=function(e,t){var n,r,s,u,g=t||e.length,E=new Array(g*2);for(r=0,n=0;n<g;){if(s=e[n++],s<128){E[r++]=s;continue}if(u=a[s],u>4){E[r++]=65533,n+=u-1;continue}for(s&=u===2?31:u===3?15:7;u>1&&n<g;)s=s<<6|e[n++]&63,u--;if(u>1){E[r++]=65533;continue}s<65536?E[r++]=s:(s-=65536,E[r++]=55296|s>>10&1023,E[r++]=56320|s&1023)}return p(E,r)},at.utf8border=function(e,t){var n;for(t=t||e.length,t>e.length&&(t=e.length),n=t-1;n>=0&&(e[n]&192)===128;)n--;return n<0||n===0?t:n+a[e[n]]>t?n:t};function S(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var w=S,N=ut,V=Ue,F=at,q=Rs,be=w,ae=Object.prototype.toString,ne=0,Ae=4,De=0,Xe=1,ft=2,Te=-1,se=0,Ee=8;function Le(e){if(!(this instanceof Le))return new Le(e);this.options=V.assign({level:Te,method:Ee,chunkSize:16384,windowBits:15,memLevel:8,strategy:se,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new be,this.strm.avail_out=0;var n=N.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==De)throw new Error(q[n]);if(t.header&&N.deflateSetHeader(this.strm,t.header),t.dictionary){var r;if(typeof t.dictionary=="string"?r=F.string2buf(t.dictionary):ae.call(t.dictionary)==="[object ArrayBuffer]"?r=new Uint8Array(t.dictionary):r=t.dictionary,n=N.deflateSetDictionary(this.strm,r),n!==De)throw new Error(q[n]);this._dict_set=!0}}Le.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,s,u;if(this.ended)return!1;u=t===~~t?t:t===!0?Ae:ne,typeof e=="string"?n.input=F.string2buf(e):ae.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new V.Buf8(r),n.next_out=0,n.avail_out=r),s=N.deflate(n,u),s!==Xe&&s!==De)return this.onEnd(s),this.ended=!0,!1;(n.avail_out===0||n.avail_in===0&&(u===Ae||u===ft))&&(this.options.to==="string"?this.onData(F.buf2binstring(V.shrinkBuf(n.output,n.next_out))):this.onData(V.shrinkBuf(n.output,n.next_out)))}while((n.avail_in>0||n.avail_out===0)&&s!==Xe);return u===Ae?(s=N.deflateEnd(this.strm),this.onEnd(s),this.ended=!0,s===De):(u===ft&&(this.onEnd(De),n.avail_out=0),!0)},Le.prototype.onData=function(e){this.chunks.push(e)},Le.prototype.onEnd=function(e){e===De&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=V.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function Fe(e,t){var n=new Le(t);if(n.push(e,!0),n.err)throw n.msg||q[n.err];return n.result}function it(e,t){return t=t||{},t.raw=!0,Fe(e,t)}function Tt(e,t){return t=t||{},t.gzip=!0,Fe(e,t)}gt.Deflate=Le,gt.deflate=Fe,gt.deflateRaw=it,gt.gzip=Tt;var Qe={},B={},j=30,ie=12,ye=function(t,n){var r,s,u,g,E,U,P,L,Oe,Pe,Re,ht,pt,kt,Rt,dn,ln,jt,wt,vn,on,Xt,In,yr,Qt;r=t.state,s=t.next_in,yr=t.input,u=s+(t.avail_in-5),g=t.next_out,Qt=t.output,E=g-(n-t.avail_out),U=g+(t.avail_out-257),P=r.dmax,L=r.wsize,Oe=r.whave,Pe=r.wnext,Re=r.window,ht=r.hold,pt=r.bits,kt=r.lencode,Rt=r.distcode,dn=(1<<r.lenbits)-1,ln=(1<<r.distbits)-1;e:do{pt<15&&(ht+=yr[s++]<<pt,pt+=8,ht+=yr[s++]<<pt,pt+=8),jt=kt[ht&dn];t:for(;;){if(wt=jt>>>24,ht>>>=wt,pt-=wt,wt=jt>>>16&255,wt===0)Qt[g++]=jt&65535;else if(wt&16){vn=jt&65535,wt&=15,wt&&(pt<wt&&(ht+=yr[s++]<<pt,pt+=8),vn+=ht&(1<<wt)-1,ht>>>=wt,pt-=wt),pt<15&&(ht+=yr[s++]<<pt,pt+=8,ht+=yr[s++]<<pt,pt+=8),jt=Rt[ht&ln];n:for(;;){if(wt=jt>>>24,ht>>>=wt,pt-=wt,wt=jt>>>16&255,wt&16){if(on=jt&65535,wt&=15,pt<wt&&(ht+=yr[s++]<<pt,pt+=8,pt<wt&&(ht+=yr[s++]<<pt,pt+=8)),on+=ht&(1<<wt)-1,on>P){t.msg="invalid distance too far back",r.mode=j;break e}if(ht>>>=wt,pt-=wt,wt=g-E,on>wt){if(wt=on-wt,wt>Oe&&r.sane){t.msg="invalid distance too far back",r.mode=j;break e}if(Xt=0,In=Re,Pe===0){if(Xt+=L-wt,wt<vn){vn-=wt;do Qt[g++]=Re[Xt++];while(--wt);Xt=g-on,In=Qt}}else if(Pe<wt){if(Xt+=L+Pe-wt,wt-=Pe,wt<vn){vn-=wt;do Qt[g++]=Re[Xt++];while(--wt);if(Xt=0,Pe<vn){wt=Pe,vn-=wt;do Qt[g++]=Re[Xt++];while(--wt);Xt=g-on,In=Qt}}}else if(Xt+=Pe-wt,wt<vn){vn-=wt;do Qt[g++]=Re[Xt++];while(--wt);Xt=g-on,In=Qt}for(;vn>2;)Qt[g++]=In[Xt++],Qt[g++]=In[Xt++],Qt[g++]=In[Xt++],vn-=3;vn&&(Qt[g++]=In[Xt++],vn>1&&(Qt[g++]=In[Xt++]))}else{Xt=g-on;do Qt[g++]=Qt[Xt++],Qt[g++]=Qt[Xt++],Qt[g++]=Qt[Xt++],vn-=3;while(vn>2);vn&&(Qt[g++]=Qt[Xt++],vn>1&&(Qt[g++]=Qt[Xt++]))}}else if((wt&64)===0){jt=Rt[(jt&65535)+(ht&(1<<wt)-1)];continue n}else{t.msg="invalid distance code",r.mode=j;break e}break}}else if((wt&64)===0){jt=kt[(jt&65535)+(ht&(1<<wt)-1)];continue t}else if(wt&32){r.mode=ie;break e}else{t.msg="invalid literal/length code",r.mode=j;break e}break}}while(s<u&&g<U);vn=pt>>3,s-=vn,pt-=vn<<3,ht&=(1<<pt)-1,t.next_in=s,t.next_out=g,t.avail_in=s<u?5+(u-s):5-(s-u),t.avail_out=g<U?257+(U-g):257-(g-U),r.hold=ht,r.bits=pt},oe=Ue,ge=15,et=852,Ge=592,tt=0,Ve=1,Lt=2,Bt=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],Ut=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],un=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],Yn=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64],qt=function(t,n,r,s,u,g,E,U){var P=U.bits,L=0,Oe=0,Pe=0,Re=0,ht=0,pt=0,kt=0,Rt=0,dn=0,ln=0,jt,wt,vn,on,Xt,In=null,yr=0,Qt,hs=new oe.Buf16(ge+1),ef=new oe.Buf16(ge+1),tf=null,Wg=0,Gg,nf,rf;for(L=0;L<=ge;L++)hs[L]=0;for(Oe=0;Oe<s;Oe++)hs[n[r+Oe]]++;for(ht=P,Re=ge;Re>=1&&hs[Re]===0;Re--);if(ht>Re&&(ht=Re),Re===0)return u[g++]=1<<24|64<<16|0,u[g++]=1<<24|64<<16|0,U.bits=1,0;for(Pe=1;Pe<Re&&hs[Pe]===0;Pe++);for(ht<Pe&&(ht=Pe),Rt=1,L=1;L<=ge;L++)if(Rt<<=1,Rt-=hs[L],Rt<0)return-1;if(Rt>0&&(t===tt||Re!==1))return-1;for(ef[1]=0,L=1;L<ge;L++)ef[L+1]=ef[L]+hs[L];for(Oe=0;Oe<s;Oe++)n[r+Oe]!==0&&(E[ef[n[r+Oe]]++]=Oe);if(t===tt?(In=tf=E,Qt=19):t===Ve?(In=Bt,yr-=257,tf=Ut,Wg-=257,Qt=256):(In=un,tf=Yn,Qt=-1),ln=0,Oe=0,L=Pe,Xt=g,pt=ht,kt=0,vn=-1,dn=1<<ht,on=dn-1,t===Ve&&dn>et||t===Lt&&dn>Ge)return 1;for(;;){Gg=L-kt,E[Oe]<Qt?(nf=0,rf=E[Oe]):E[Oe]>Qt?(nf=tf[Wg+E[Oe]],rf=In[yr+E[Oe]]):(nf=32+64,rf=0),jt=1<<L-kt,wt=1<<pt,Pe=wt;do wt-=jt,u[Xt+(ln>>kt)+wt]=Gg<<24|nf<<16|rf|0;while(wt!==0);for(jt=1<<L-1;ln&jt;)jt>>=1;if(jt!==0?(ln&=jt-1,ln+=jt):ln=0,Oe++,--hs[L]===0){if(L===Re)break;L=n[r+E[Oe]]}if(L>ht&&(ln&on)!==vn){for(kt===0&&(kt=ht),Xt+=Pe,pt=L-kt,Rt=1<<pt;pt+kt<Re&&(Rt-=hs[pt+kt],!(Rt<=0));)pt++,Rt<<=1;if(dn+=1<<pt,t===Ve&&dn>et||t===Lt&&dn>Ge)return 1;vn=ln&on,u[vn]=ht<<24|pt<<16|Xt-g|0}}return ln!==0&&(u[Xt+ln]=L-kt<<24|64<<16|0),U.bits=ht,0},bn=Ue,bi=pc,sn=vl,Tn=ye,gn=qt,Xi=0,yi=1,zr=2,ua=4,G=5,X=6,Ce=0,$e=1,ze=2,rt=-2,mt=-3,ot=-4,ct=-5,Ye=8,$t=1,Ft=2,Ht=3,Cn=4,Wr=5,rr=6,Ei=7,fa=8,Bs=9,tl=10,_r=11,No=12,is=13,ko=14,os=15,nl=16,as=17,Ms=18,Wa=19,ss=20,Ga=21,eu=22,Cc=23,tu=24,nu=25,Ld=26,yf=27,Fd=28,Vd=29,Tr=30,Ud=31,nm=32,rm=852,im=592,om=15,am=om;function $d(e){return(e>>>24&255)+(e>>>8&65280)+((e&65280)<<8)+((e&255)<<24)}function sm(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new bn.Buf16(320),this.work=new bn.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function Hd(e){var t;return!e||!e.state?rt:(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=t.wrap&1),t.mode=$t,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new bn.Buf32(rm),t.distcode=t.distdyn=new bn.Buf32(im),t.sane=1,t.back=-1,Ce)}function jd(e){var t;return!e||!e.state?rt:(t=e.state,t.wsize=0,t.whave=0,t.wnext=0,Hd(e))}function zd(e,t){var n,r;return!e||!e.state||(r=e.state,t<0?(n=0,t=-t):(n=(t>>4)+1,t<48&&(t&=15)),t&&(t<8||t>15))?rt:(r.window!==null&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,jd(e))}function Wd(e,t){var n,r;return e?(r=new sm,e.state=r,r.window=null,n=zd(e,t),n!==Ce&&(e.state=null),n):rt}function lm(e){return Wd(e,am)}var Gd=!0,Ef,wf;function cm(e){if(Gd){var t;for(Ef=new bn.Buf32(512),wf=new bn.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(gn(yi,e.lens,0,288,Ef,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;gn(zr,e.lens,0,32,wf,0,e.work,{bits:5}),Gd=!1}e.lencode=Ef,e.lenbits=9,e.distcode=wf,e.distbits=5}function Yd(e,t,n,r){var s,u=e.state;return u.window===null&&(u.wsize=1<<u.wbits,u.wnext=0,u.whave=0,u.window=new bn.Buf8(u.wsize)),r>=u.wsize?(bn.arraySet(u.window,t,n-u.wsize,u.wsize,0),u.wnext=0,u.whave=u.wsize):(s=u.wsize-u.wnext,s>r&&(s=r),bn.arraySet(u.window,t,n-r,s,u.wnext),r-=s,r?(bn.arraySet(u.window,t,n-r,r,0),u.wnext=r,u.whave=u.wsize):(u.wnext+=s,u.wnext===u.wsize&&(u.wnext=0),u.whave<u.wsize&&(u.whave+=s))),0}function um(e,t){var n,r,s,u,g,E,U,P,L,Oe,Pe,Re,ht,pt,kt=0,Rt,dn,ln,jt,wt,vn,on,Xt,In=new bn.Buf8(4),yr,Qt,hs=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&e.avail_in!==0)return rt;n=e.state,n.mode===No&&(n.mode=is),g=e.next_out,s=e.output,U=e.avail_out,u=e.next_in,r=e.input,E=e.avail_in,P=n.hold,L=n.bits,Oe=E,Pe=U,Xt=Ce;e:for(;;)switch(n.mode){case $t:if(n.wrap===0){n.mode=is;break}for(;L<16;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}if(n.wrap&2&&P===35615){n.check=0,In[0]=P&255,In[1]=P>>>8&255,n.check=sn(n.check,In,2,0),P=0,L=0,n.mode=Ft;break}if(n.flags=0,n.head&&(n.head.done=!1),!(n.wrap&1)||(((P&255)<<8)+(P>>8))%31){e.msg="incorrect header check",n.mode=Tr;break}if((P&15)!==Ye){e.msg="unknown compression method",n.mode=Tr;break}if(P>>>=4,L-=4,on=(P&15)+8,n.wbits===0)n.wbits=on;else if(on>n.wbits){e.msg="invalid window size",n.mode=Tr;break}n.dmax=1<<on,e.adler=n.check=1,n.mode=P&512?tl:No,P=0,L=0;break;case Ft:for(;L<16;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}if(n.flags=P,(n.flags&255)!==Ye){e.msg="unknown compression method",n.mode=Tr;break}if(n.flags&57344){e.msg="unknown header flags set",n.mode=Tr;break}n.head&&(n.head.text=P>>8&1),n.flags&512&&(In[0]=P&255,In[1]=P>>>8&255,n.check=sn(n.check,In,2,0)),P=0,L=0,n.mode=Ht;case Ht:for(;L<32;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}n.head&&(n.head.time=P),n.flags&512&&(In[0]=P&255,In[1]=P>>>8&255,In[2]=P>>>16&255,In[3]=P>>>24&255,n.check=sn(n.check,In,4,0)),P=0,L=0,n.mode=Cn;case Cn:for(;L<16;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}n.head&&(n.head.xflags=P&255,n.head.os=P>>8),n.flags&512&&(In[0]=P&255,In[1]=P>>>8&255,n.check=sn(n.check,In,2,0)),P=0,L=0,n.mode=Wr;case Wr:if(n.flags&1024){for(;L<16;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}n.length=P,n.head&&(n.head.extra_len=P),n.flags&512&&(In[0]=P&255,In[1]=P>>>8&255,n.check=sn(n.check,In,2,0)),P=0,L=0}else n.head&&(n.head.extra=null);n.mode=rr;case rr:if(n.flags&1024&&(Re=n.length,Re>E&&(Re=E),Re&&(n.head&&(on=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),bn.arraySet(n.head.extra,r,u,Re,on)),n.flags&512&&(n.check=sn(n.check,r,Re,u)),E-=Re,u+=Re,n.length-=Re),n.length))break e;n.length=0,n.mode=Ei;case Ei:if(n.flags&2048){if(E===0)break e;Re=0;do on=r[u+Re++],n.head&&on&&n.length<65536&&(n.head.name+=String.fromCharCode(on));while(on&&Re<E);if(n.flags&512&&(n.check=sn(n.check,r,Re,u)),E-=Re,u+=Re,on)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=fa;case fa:if(n.flags&4096){if(E===0)break e;Re=0;do on=r[u+Re++],n.head&&on&&n.length<65536&&(n.head.comment+=String.fromCharCode(on));while(on&&Re<E);if(n.flags&512&&(n.check=sn(n.check,r,Re,u)),E-=Re,u+=Re,on)break e}else n.head&&(n.head.comment=null);n.mode=Bs;case Bs:if(n.flags&512){for(;L<16;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}if(P!==(n.check&65535)){e.msg="header crc mismatch",n.mode=Tr;break}P=0,L=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=No;break;case tl:for(;L<32;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}e.adler=n.check=$d(P),P=0,L=0,n.mode=_r;case _r:if(n.havedict===0)return e.next_out=g,e.avail_out=U,e.next_in=u,e.avail_in=E,n.hold=P,n.bits=L,ze;e.adler=n.check=1,n.mode=No;case No:if(t===G||t===X)break e;case is:if(n.last){P>>>=L&7,L-=L&7,n.mode=yf;break}for(;L<3;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}switch(n.last=P&1,P>>>=1,L-=1,P&3){case 0:n.mode=ko;break;case 1:if(cm(n),n.mode=ss,t===X){P>>>=2,L-=2;break e}break;case 2:n.mode=as;break;case 3:e.msg="invalid block type",n.mode=Tr}P>>>=2,L-=2;break;case ko:for(P>>>=L&7,L-=L&7;L<32;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}if((P&65535)!==(P>>>16^65535)){e.msg="invalid stored block lengths",n.mode=Tr;break}if(n.length=P&65535,P=0,L=0,n.mode=os,t===X)break e;case os:n.mode=nl;case nl:if(Re=n.length,Re){if(Re>E&&(Re=E),Re>U&&(Re=U),Re===0)break e;bn.arraySet(s,r,u,Re,g),E-=Re,u+=Re,U-=Re,g+=Re,n.length-=Re;break}n.mode=No;break;case as:for(;L<14;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}if(n.nlen=(P&31)+257,P>>>=5,L-=5,n.ndist=(P&31)+1,P>>>=5,L-=5,n.ncode=(P&15)+4,P>>>=4,L-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=Tr;break}n.have=0,n.mode=Ms;case Ms:for(;n.have<n.ncode;){for(;L<3;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}n.lens[hs[n.have++]]=P&7,P>>>=3,L-=3}for(;n.have<19;)n.lens[hs[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,yr={bits:n.lenbits},Xt=gn(Xi,n.lens,0,19,n.lencode,0,n.work,yr),n.lenbits=yr.bits,Xt){e.msg="invalid code lengths set",n.mode=Tr;break}n.have=0,n.mode=Wa;case Wa:for(;n.have<n.nlen+n.ndist;){for(;kt=n.lencode[P&(1<<n.lenbits)-1],Rt=kt>>>24,dn=kt>>>16&255,ln=kt&65535,!(Rt<=L);){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}if(ln<16)P>>>=Rt,L-=Rt,n.lens[n.have++]=ln;else{if(ln===16){for(Qt=Rt+2;L<Qt;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}if(P>>>=Rt,L-=Rt,n.have===0){e.msg="invalid bit length repeat",n.mode=Tr;break}on=n.lens[n.have-1],Re=3+(P&3),P>>>=2,L-=2}else if(ln===17){for(Qt=Rt+3;L<Qt;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}P>>>=Rt,L-=Rt,on=0,Re=3+(P&7),P>>>=3,L-=3}else{for(Qt=Rt+7;L<Qt;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}P>>>=Rt,L-=Rt,on=0,Re=11+(P&127),P>>>=7,L-=7}if(n.have+Re>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=Tr;break}for(;Re--;)n.lens[n.have++]=on}}if(n.mode===Tr)break;if(n.lens[256]===0){e.msg="invalid code -- missing end-of-block",n.mode=Tr;break}if(n.lenbits=9,yr={bits:n.lenbits},Xt=gn(yi,n.lens,0,n.nlen,n.lencode,0,n.work,yr),n.lenbits=yr.bits,Xt){e.msg="invalid literal/lengths set",n.mode=Tr;break}if(n.distbits=6,n.distcode=n.distdyn,yr={bits:n.distbits},Xt=gn(zr,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,yr),n.distbits=yr.bits,Xt){e.msg="invalid distances set",n.mode=Tr;break}if(n.mode=ss,t===X)break e;case ss:n.mode=Ga;case Ga:if(E>=6&&U>=258){e.next_out=g,e.avail_out=U,e.next_in=u,e.avail_in=E,n.hold=P,n.bits=L,Tn(e,Pe),g=e.next_out,s=e.output,U=e.avail_out,u=e.next_in,r=e.input,E=e.avail_in,P=n.hold,L=n.bits,n.mode===No&&(n.back=-1);break}for(n.back=0;kt=n.lencode[P&(1<<n.lenbits)-1],Rt=kt>>>24,dn=kt>>>16&255,ln=kt&65535,!(Rt<=L);){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}if(dn&&(dn&240)===0){for(jt=Rt,wt=dn,vn=ln;kt=n.lencode[vn+((P&(1<<jt+wt)-1)>>jt)],Rt=kt>>>24,dn=kt>>>16&255,ln=kt&65535,!(jt+Rt<=L);){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}P>>>=jt,L-=jt,n.back+=jt}if(P>>>=Rt,L-=Rt,n.back+=Rt,n.length=ln,dn===0){n.mode=Ld;break}if(dn&32){n.back=-1,n.mode=No;break}if(dn&64){e.msg="invalid literal/length code",n.mode=Tr;break}n.extra=dn&15,n.mode=eu;case eu:if(n.extra){for(Qt=n.extra;L<Qt;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}n.length+=P&(1<<n.extra)-1,P>>>=n.extra,L-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=Cc;case Cc:for(;kt=n.distcode[P&(1<<n.distbits)-1],Rt=kt>>>24,dn=kt>>>16&255,ln=kt&65535,!(Rt<=L);){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}if((dn&240)===0){for(jt=Rt,wt=dn,vn=ln;kt=n.distcode[vn+((P&(1<<jt+wt)-1)>>jt)],Rt=kt>>>24,dn=kt>>>16&255,ln=kt&65535,!(jt+Rt<=L);){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}P>>>=jt,L-=jt,n.back+=jt}if(P>>>=Rt,L-=Rt,n.back+=Rt,dn&64){e.msg="invalid distance code",n.mode=Tr;break}n.offset=ln,n.extra=dn&15,n.mode=tu;case tu:if(n.extra){for(Qt=n.extra;L<Qt;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}n.offset+=P&(1<<n.extra)-1,P>>>=n.extra,L-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=Tr;break}n.mode=nu;case nu:if(U===0)break e;if(Re=Pe-U,n.offset>Re){if(Re=n.offset-Re,Re>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=Tr;break}Re>n.wnext?(Re-=n.wnext,ht=n.wsize-Re):ht=n.wnext-Re,Re>n.length&&(Re=n.length),pt=n.window}else pt=s,ht=g-n.offset,Re=n.length;Re>U&&(Re=U),U-=Re,n.length-=Re;do s[g++]=pt[ht++];while(--Re);n.length===0&&(n.mode=Ga);break;case Ld:if(U===0)break e;s[g++]=n.length,U--,n.mode=Ga;break;case yf:if(n.wrap){for(;L<32;){if(E===0)break e;E--,P|=r[u++]<<L,L+=8}if(Pe-=U,e.total_out+=Pe,n.total+=Pe,Pe&&(e.adler=n.check=n.flags?sn(n.check,s,Pe,g-Pe):bi(n.check,s,Pe,g-Pe)),Pe=U,(n.flags?P:$d(P))!==n.check){e.msg="incorrect data check",n.mode=Tr;break}P=0,L=0}n.mode=Fd;case Fd:if(n.wrap&&n.flags){for(;L<32;){if(E===0)break e;E--,P+=r[u++]<<L,L+=8}if(P!==(n.total&4294967295)){e.msg="incorrect length check",n.mode=Tr;break}P=0,L=0}n.mode=Vd;case Vd:Xt=$e;break e;case Tr:Xt=mt;break e;case Ud:return ot;case nm:default:return rt}return e.next_out=g,e.avail_out=U,e.next_in=u,e.avail_in=E,n.hold=P,n.bits=L,(n.wsize||Pe!==e.avail_out&&n.mode<Tr&&(n.mode<yf||t!==ua))&&Yd(e,e.output,e.next_out,Pe-e.avail_out),Oe-=e.avail_in,Pe-=e.avail_out,e.total_in+=Oe,e.total_out+=Pe,n.total+=Pe,n.wrap&&Pe&&(e.adler=n.check=n.flags?sn(n.check,s,Pe,e.next_out-Pe):bi(n.check,s,Pe,e.next_out-Pe)),e.data_type=n.bits+(n.last?64:0)+(n.mode===No?128:0)+(n.mode===ss||n.mode===os?256:0),(Oe===0&&Pe===0||t===ua)&&Xt===Ce&&(Xt=ct),Xt}function fm(e){if(!e||!e.state)return rt;var t=e.state;return t.window&&(t.window=null),e.state=null,Ce}function dm(e,t){var n;return!e||!e.state||(n=e.state,(n.wrap&2)===0)?rt:(n.head=t,t.done=!1,Ce)}function hm(e,t){var n=t.length,r,s,u;return!e||!e.state||(r=e.state,r.wrap!==0&&r.mode!==_r)?rt:r.mode===_r&&(s=1,s=bi(s,t,n,0),s!==r.check)?mt:(u=Yd(e,t,n,n),u?(r.mode=Ud,ot):(r.havedict=1,Ce))}B.inflateReset=jd,B.inflateReset2=zd,B.inflateResetKeep=Hd,B.inflateInit=lm,B.inflateInit2=Wd,B.inflate=um,B.inflateEnd=fm,B.inflateGetHeader=dm,B.inflateSetDictionary=hm,B.inflateInfo="pako inflate (from Nodeca project)";var qd={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};function pm(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var gm=pm,Oc=B,ru=Ue,Pu=at,ai=qd,Sf=Rs,vm=w,mm=gm,Kd=Object.prototype.toString;function zl(e){if(!(this instanceof zl))return new zl(e);this.options=ru.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,t.windowBits===0&&(t.windowBits=-15)),t.windowBits>=0&&t.windowBits<16&&!(e&&e.windowBits)&&(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(t.windowBits&15)===0&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new vm,this.strm.avail_out=0;var n=Oc.inflateInit2(this.strm,t.windowBits);if(n!==ai.Z_OK)throw new Error(Sf[n]);if(this.header=new mm,Oc.inflateGetHeader(this.strm,this.header),t.dictionary&&(typeof t.dictionary=="string"?t.dictionary=Pu.string2buf(t.dictionary):Kd.call(t.dictionary)==="[object ArrayBuffer]"&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=Oc.inflateSetDictionary(this.strm,t.dictionary),n!==ai.Z_OK)))throw new Error(Sf[n])}zl.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,s=this.options.dictionary,u,g,E,U,P,L=!1;if(this.ended)return!1;g=t===~~t?t:t===!0?ai.Z_FINISH:ai.Z_NO_FLUSH,typeof e=="string"?n.input=Pu.binstring2buf(e):Kd.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new ru.Buf8(r),n.next_out=0,n.avail_out=r),u=Oc.inflate(n,ai.Z_NO_FLUSH),u===ai.Z_NEED_DICT&&s&&(u=Oc.inflateSetDictionary(this.strm,s)),u===ai.Z_BUF_ERROR&&L===!0&&(u=ai.Z_OK,L=!1),u!==ai.Z_STREAM_END&&u!==ai.Z_OK)return this.onEnd(u),this.ended=!0,!1;n.next_out&&(n.avail_out===0||u===ai.Z_STREAM_END||n.avail_in===0&&(g===ai.Z_FINISH||g===ai.Z_SYNC_FLUSH))&&(this.options.to==="string"?(E=Pu.utf8border(n.output,n.next_out),U=n.next_out-E,P=Pu.buf2string(n.output,E),n.next_out=U,n.avail_out=r-U,U&&ru.arraySet(n.output,n.output,E,U,0),this.onData(P)):this.onData(ru.shrinkBuf(n.output,n.next_out))),n.avail_in===0&&n.avail_out===0&&(L=!0)}while((n.avail_in>0||n.avail_out===0)&&u!==ai.Z_STREAM_END);return u===ai.Z_STREAM_END&&(g=ai.Z_FINISH),g===ai.Z_FINISH?(u=Oc.inflateEnd(this.strm),this.onEnd(u),this.ended=!0,u===ai.Z_OK):(g===ai.Z_SYNC_FLUSH&&(this.onEnd(ai.Z_OK),n.avail_out=0),!0)},zl.prototype.onData=function(e){this.chunks.push(e)},zl.prototype.onEnd=function(e){e===ai.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=ru.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function Cf(e,t){var n=new zl(t);if(n.push(e,!0),n.err)throw n.msg||Sf[n.err];return n.result}function _m(e,t){return t=t||{},t.raw=!0,Cf(e,t)}Qe.Inflate=zl,Qe.inflate=Cf,Qe.inflateRaw=_m,Qe.ungzip=Cf;var bm=Ue.assign,ym=gt,Em=Qe,wm=qd,Jd={};bm(Jd,ym,Em,wm);var Zd=Jd;let Sm="upx2px",Cm=[{name:"upx",type:[Number,String],required:!0}],Om=1e-4,Am=750,Xd=!1,Of=0,Qd=0,eh=960,th=375,nh=750;function Tm(){let{platform:e,pixelRatio:t,windowWidth:n}=wo();Of=n,Qd=t,Xd=e==="ios"}function Af(e,t){let n=Number(e);return isNaN(n)?t:n}function Im(){let e=R.globalStyle||{};eh=Af(e.rpxCalcMaxDeviceWidth,960),th=Af(e.rpxCalcBaseDeviceWidth,375),nh=Af(e.rpxCalcBaseDeviceWidth,750)}let Pm=Dt(Sm,(e,t)=>{if(Of===0&&(Tm(),Im()),e=Number(e),e===0)return 0;let n=t||Of;n=e===nh||n<=eh?n:th;let r=e/Am*n;return r<0&&(r=-r),r=Math.floor(r+Om),r===0&&(Qd===1||!Xd?r=1:r=.5),e<0?-r:r},Cm),Nm="addInterceptor",km="removeInterceptor",rh=[{name:"method",type:[String,Object],required:!0}],Rm=rh;function ih(e,t){Object.keys(t).forEach(n=>{K.isFunction(t[n])&&(e[n]=xm(e[n],t[n]))})}function oh(e,t){!e||!t||Object.keys(t).forEach(n=>{let r=e[n],s=t[n];K.isArray(r)&&K.isFunction(s)&&K.remove(r,s)})}function xm(e,t){let n=t?e?e.concat(t):K.isArray(t)?t:[t]:e;return n&&Bm(n)}function Bm(e){let t=[];for(let n=0;n<e.length;n++)t.indexOf(e[n])===-1&&t.push(e[n]);return t}let Mm=Dt(Nm,(e,t)=>{K.isString(e)&&K.isPlainObject(t)?ih(cr[e]||(cr[e]={}),t):K.isPlainObject(e)&&ih(Pn,e)},rh),Dm=Dt(km,(e,t)=>{K.isString(e)?K.isPlainObject(t)?oh(cr[e],t):delete cr[e]:K.isPlainObject(e)&&oh(Pn,e)},Rm),Lm={},Fm="$on",ah=[{name:"event",type:String,required:!0},{name:"callback",type:Function,required:!0}],Vm="$once",Um=ah,$m="$off",Hm=[{name:"event",type:[String,Array]},{name:"callback",type:Function}],jm="$emit",zm=[{name:"event",type:String,required:!0}],Wl=new re.Emitter,Wm=Dt(Fm,(e,t)=>(Wl.on(e,t),()=>Wl.off(e,t)),ah),Gm=Dt(Vm,(e,t)=>(Wl.once(e,t),()=>Wl.off(e,t)),Um),Ym=Dt($m,(e,t)=>{if(!e){Wl.e={};return}K.isArray(e)||(e=[e]),e.forEach(n=>Wl.off(n,t))},Hm),qm=Dt(jm,(e,...t)=>{Wl.emit(e,...t)},zm),sh=[{name:"id",type:String,required:!0}],Km="createVideoContext",Jm="createMapContext",Zm=sh,Xm="createCanvasContext",Qm=[{name:"canvasId",type:String,required:!0},{name:"componentInstance",type:Object}],e_="createInnerAudioContext",t_="createLivePusherContext",n_=sh.concat({name:"componentInstance",type:Object}),r_=[.5,.8,1,1.25,1.5,2];class Tf{constructor(t,n){this.id=t,this.pageId=n}play(){Un(this.id,this.pageId,"play")}pause(){Un(this.id,this.pageId,"pause")}stop(){Un(this.id,this.pageId,"stop")}seek(t){Un(this.id,this.pageId,"seek",{position:t})}sendDanmu(t){Un(this.id,this.pageId,"sendDanmu",t)}playbackRate(t){~r_.indexOf(t)||(t=1),Un(this.id,this.pageId,"playbackRate",{rate:t})}requestFullScreen(t={}){Un(this.id,this.pageId,"requestFullScreen",t)}exitFullScreen(){Un(this.id,this.pageId,"exitFullScreen")}showStatusBar(){Un(this.id,this.pageId,"showStatusBar")}hideStatusBar(){Un(this.id,this.pageId,"hideStatusBar")}}let i_=Dt(Km,(e,t)=>t?new Tf(e,Qn(t)):new Tf(e,Qn(Lr()))),o_=(e,t)=>{let n=t.errMsg||"";new RegExp("\\:\\s*fail").test(n)?e.fail&&e.fail(t):e.success&&e.success(t),e.complete&&e.complete(t)},Qi=(e,t,n,r)=>{vi(e,t,n,r,s=>{r&&o_(r,s)})};class If{constructor(t,n){this.id=t,this.pageId=n}getCenterLocation(t){Qi(this.id,this.pageId,"getCenterLocation",t)}moveToLocation(t){Qi(this.id,this.pageId,"moveToLocation",t)}getScale(t){Qi(this.id,this.pageId,"getScale",t)}getRegion(t){Qi(this.id,this.pageId,"getRegion",t)}includePoints(t){Qi(this.id,this.pageId,"includePoints",t)}translateMarker(t){Qi(this.id,this.pageId,"translateMarker",t)}$getAppMap(){return l.maps.getMapById(this.pageId+"-map-"+this.id)}addCustomLayer(t){Qi(this.id,this.pageId,"addCustomLayer",t)}removeCustomLayer(t){Qi(this.id,this.pageId,"removeCustomLayer",t)}addGroundOverlay(t){Qi(this.id,this.pageId,"addGroundOverlay",t)}removeGroundOverlay(t){Qi(this.id,this.pageId,"removeGroundOverlay",t)}updateGroundOverlay(t){Qi(this.id,this.pageId,"updateGroundOverlay",t)}initMarkerCluster(t){Qi(this.id,this.pageId,"initMarkerCluster",t)}addMarkers(t){Qi(this.id,this.pageId,"addMarkers",t)}removeMarkers(t){Qi(this.id,this.pageId,"removeMarkers",t)}moveAlong(t){Qi(this.id,this.pageId,"moveAlong",t)}setLocMarkerIcon(t){Qi(this.id,this.pageId,"setLocMarkerIcon",t)}openMapApp(t){Qi(this.id,this.pageId,"openMapApp",t)}on(t){Qi(this.id,this.pageId,"on",t)}}let a_=Dt(Jm,(e,t)=>t?new If(e,Qn(t)):new If(e,Qn(Lr())),Zm);function wl(e,t){return function(n,r){n?r[e]=Math.round(n):typeof t!="undefined"&&(r[e]=t)}}let lh=wl("width"),ch=wl("height"),s_="canvasGetImageData",uh={formatArgs:{x:wl("x"),y:wl("y"),width:lh,height:ch}},fh={canvasId:{type:String,required:!0},x:{type:Number,required:!0},y:{type:Number,required:!0},width:{type:Number,required:!0},height:{type:Number,required:!0}},l_="canvasPutImageData",c_=uh,u_=K.extend({data:{type:Uint8ClampedArray,required:!0}},fh,{height:{type:Number}}),dh={PNG:"png",JPG:"jpg",JPEG:"jpg"},f_="canvasToTempFilePath",d_={formatArgs:{x:wl("x",0),y:wl("y",0),width:lh,height:ch,destWidth:wl("destWidth"),destHeight:wl("destHeight"),fileType(e,t){e=(e||"").toUpperCase();let n=dh[e];n||(n=dh.PNG),t.fileType=n},quality(e,t){t.quality=e&&e>0&&e<1?e:1}}},h_={x:Number,y:Number,width:Number,height:Number,destWidth:Number,destHeight:Number,canvasId:{type:String,required:!0},fileType:String,quality:Number};function Nu(e,t,n,r,s){_t.invokeViewMethod(`canvas.${e}`,{type:n,data:r},t,u=>{s&&s(u)})}var p_=["scale","rotate","translate","setTransform","transform"],g_=["drawImage","fillText","fill","stroke","fillRect","strokeRect","clearRect","strokeText"],v_=["setFillStyle","setTextAlign","setStrokeStyle","setGlobalAlpha","setShadow","setFontSize","setLineCap","setLineJoin","setLineWidth","setMiterLimit","setTextBaseline","setLineDash"];function m_(e,t){let r=document.createElement("canvas").getContext("2d");return r.font=t,r.measureText(e).width||0}let hh={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgrey:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32",transparent:"#00000000"};function Pf(e){e=e||"#000000";var t=null;if((t=/^#([0-9|A-F|a-f]{6})$/.exec(e))!=null){let r=parseInt(t[1].slice(0,2),16),s=parseInt(t[1].slice(2,4),16),u=parseInt(t[1].slice(4),16);return[r,s,u,255]}if((t=/^#([0-9|A-F|a-f]{3})$/.exec(e))!=null){let r=t[1].slice(0,1),s=t[1].slice(1,2),u=t[1].slice(2,3);return r=parseInt(r+r,16),s=parseInt(s+s,16),u=parseInt(u+u,16),[r,s,u,255]}if((t=/^rgb\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r){return Math.min(255,parseInt(r.trim()))}).concat(255);if((t=/^rgba\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r,s){return s===3?Math.floor(255*parseFloat(r.trim())):Math.min(255,parseInt(r.trim()))});var n=e.toLowerCase();if(K.hasOwn(hh,n)){t=/^#([0-9|A-F|a-f]{6,8})$/.exec(hh[n]);let r=parseInt(t[1].slice(0,2),16),s=parseInt(t[1].slice(2,4),16),u=parseInt(t[1].slice(4,6),16),g=parseInt(t[1].slice(6,8),16);return g=g>=0?g:255,[r,s,u,g]}return console.error("unsupported color:"+e),[0,0,0,255]}class ph{constructor(t,n){this.type=t,this.data=n,this.colorStop=[]}addColorStop(t,n){this.colorStop.push([t,Pf(n)])}}class __{constructor(t,n){this.type="pattern",this.data=t,this.colorStop=n}}class b_{constructor(t){this.width=t}}class iu{constructor(t,n){this.id=t,this.pageId=n,this.actions=[],this.path=[],this.subpath=[],this.drawingState=[],this.state={lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}draw(t=!1,n){var r=[...this.actions];this.actions=[],this.path=[],Nu(this.id,this.pageId,"actionsChanged",{actions:r,reserve:t},n)}createLinearGradient(t,n,r,s){return new ph("linear",[t,n,r,s])}createCircularGradient(t,n,r){return new ph("radial",[t,n,r])}createPattern(t,n){if(n===void 0)console.error("Failed to execute 'createPattern' on 'CanvasContext': 2 arguments required, but only 1 present.");else if(["repeat","repeat-x","repeat-y","no-repeat"].indexOf(n)<0)console.error("Failed to execute 'createPattern' on 'CanvasContext': The provided type ('"+n+"') is not one of 'repeat', 'no-repeat', 'repeat-x', or 'repeat-y'.");else return new __(t,n)}measureText(t){let n=this.state.font,r=0;{let s=l.webview.all().find(u=>u.getURL().endsWith("www/__uniappview.html"));s&&(r=Number(s.evalJSSync(`(${m_.toString()})(${JSON.stringify(t)},${JSON.stringify(n)})`)))}return new b_(r)}save(){this.actions.push({method:"save",data:[]}),this.drawingState.push(this.state)}restore(){this.actions.push({method:"restore",data:[]}),this.state=this.drawingState.pop()||{lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}beginPath(){this.path=[],this.subpath=[],this.path.push({method:"beginPath",data:[]})}moveTo(t,n){this.path.push({method:"moveTo",data:[t,n]}),this.subpath=[[t,n]]}lineTo(t,n){this.path.length===0&&this.subpath.length===0?this.path.push({method:"moveTo",data:[t,n]}):this.path.push({method:"lineTo",data:[t,n]}),this.subpath.push([t,n])}quadraticCurveTo(t,n,r,s){this.path.push({method:"quadraticCurveTo",data:[t,n,r,s]}),this.subpath.push([r,s])}bezierCurveTo(t,n,r,s,u,g){this.path.push({method:"bezierCurveTo",data:[t,n,r,s,u,g]}),this.subpath.push([u,g])}arc(t,n,r,s,u,g=!1){this.path.push({method:"arc",data:[t,n,r,s,u,g]}),this.subpath.push([t,n])}rect(t,n,r,s){this.path.push({method:"rect",data:[t,n,r,s]}),this.subpath=[[t,n]]}arcTo(t,n,r,s,u){this.path.push({method:"arcTo",data:[t,n,r,s,u]}),this.subpath.push([r,s])}clip(){this.actions.push({method:"clip",data:[...this.path]})}closePath(){this.path.push({method:"closePath",data:[]}),this.subpath.length&&(this.subpath=[this.subpath.shift()])}clearActions(){this.actions=[],this.path=[],this.subpath=[]}getActions(){var t=[...this.actions];return this.clearActions(),t}set lineDashOffset(t){this.actions.push({method:"setLineDashOffset",data:[t]})}set globalCompositeOperation(t){this.actions.push({method:"setGlobalCompositeOperation",data:[t]})}set shadowBlur(t){this.actions.push({method:"setShadowBlur",data:[t]})}set shadowColor(t){this.actions.push({method:"setShadowColor",data:[t]})}set shadowOffsetX(t){this.actions.push({method:"setShadowOffsetX",data:[t]})}set shadowOffsetY(t){this.actions.push({method:"setShadowOffsetY",data:[t]})}set font(t){var n=this;this.state.font=t;var r=t.match(/^(([\w\-]+\s)*)(\d+r?px)(\/(\d+\.?\d*(r?px)?))?\s+(.*)/);if(r){var s=r[1].trim().split(/\s/),u=parseFloat(r[3]),g=r[7],E=[];s.forEach(function(P,L){["italic","oblique","normal"].indexOf(P)>-1?(E.push({method:"setFontStyle",data:[P]}),n.state.fontStyle=P):["bold","normal"].indexOf(P)>-1?(E.push({method:"setFontWeight",data:[P]}),n.state.fontWeight=P):L===0?(E.push({method:"setFontStyle",data:["normal"]}),n.state.fontStyle="normal"):L===1&&U()}),s.length===1&&U(),s=E.map(function(P){return P.data[0]}).join(" "),this.state.fontSize=u,this.state.fontFamily=g,this.actions.push({method:"setFont",data:[`${s} ${u}px ${g}`]})}else console.warn("Failed to set 'font' on 'CanvasContext': invalid format.");function U(){E.push({method:"setFontWeight",data:["normal"]}),n.state.fontWeight="normal"}}get font(){return this.state.font}set fillStyle(t){this.setFillStyle(t)}set strokeStyle(t){this.setStrokeStyle(t)}set globalAlpha(t){t=Math.floor(255*parseFloat(t)),this.actions.push({method:"setGlobalAlpha",data:[t]})}set textAlign(t){this.actions.push({method:"setTextAlign",data:[t]})}set lineCap(t){this.actions.push({method:"setLineCap",data:[t]})}set lineJoin(t){this.actions.push({method:"setLineJoin",data:[t]})}set lineWidth(t){this.actions.push({method:"setLineWidth",data:[t]})}set miterLimit(t){this.actions.push({method:"setMiterLimit",data:[t]})}set textBaseline(t){this.actions.push({method:"setTextBaseline",data:[t]})}}let y_=re.once(()=>{[...p_,...g_].forEach(function(e){function t(n){switch(n){case"fill":case"stroke":return function(){this.actions.push({method:n+"Path",data:[...this.path]})};case"fillRect":return function(r,s,u,g){this.actions.push({method:"fillPath",data:[{method:"rect",data:[r,s,u,g]}]})};case"strokeRect":return function(r,s,u,g){this.actions.push({method:"strokePath",data:[{method:"rect",data:[r,s,u,g]}]})};case"fillText":case"strokeText":return function(r,s,u,g){var E=[r.toString(),s,u];typeof g=="number"&&E.push(g),this.actions.push({method:n,data:E})};case"drawImage":return function(r,s,u,g,E,U,P,L,Oe){Oe===void 0&&(U=s,P=u,L=g,Oe=E,s=void 0,u=void 0,g=void 0,E=void 0);var Pe;function Re(ht){return typeof ht=="number"}Pe=Re(s)&&Re(u)&&Re(g)&&Re(E)?[r,U,P,L,Oe,s,u,g,E]:Re(L)&&Re(Oe)?[r,U,P,L,Oe]:[r,U,P],this.actions.push({method:n,data:Pe})};default:return function(...r){this.actions.push({method:n,data:r})}}}iu.prototype[e]=t(e)}),v_.forEach(function(e){function t(n){switch(n){case"setFillStyle":case"setStrokeStyle":return function(r){typeof r!="object"?this.actions.push({method:n,data:["normal",Pf(r)]}):this.actions.push({method:n,data:[r.type,r.data,r.colorStop]})};case"setGlobalAlpha":return function(r){r=Math.floor(255*parseFloat(r)),this.actions.push({method:n,data:[r]})};case"setShadow":return function(r,s,u,g){g=Pf(g),this.actions.push({method:n,data:[r,s,u,g]}),this.state.shadowBlur=u,this.state.shadowColor=g,this.state.shadowOffsetX=r,this.state.shadowOffsetY=s};case"setLineDash":return function(r,s){r=r||[0,0],s=s||0,this.actions.push({method:n,data:[r,s]}),this.state.lineDash=r};case"setFontSize":return function(r){this.state.font=this.state.font.replace(/\d+\.?\d*px/,r+"px"),this.state.fontSize=r,this.actions.push({method:n,data:[r]})};default:return function(...r){this.actions.push({method:n,data:r})}}}iu.prototype[e]=t(e)})}),E_=Dt(Xm,(e,t)=>{if(y_(),t)return new iu(e,Qn(t));let n=Qn(Lr());if(n)return new iu(e,n);_t.emit(re.ON_ERROR,"createCanvasContext:fail")},Qm),w_=ke(s_,({canvasId:e,x:t,y:n,width:r,height:s},{resolve:u,reject:g})=>{let E=Qn(Lr());if(!E){g();return}function U(P){if(P.errMsg&&P.errMsg.indexOf("fail")!==-1){g("",P);return}let L=P.data;L&&L.length&&(P.compressed&&(L=Zd.inflateRaw(L)),P.data=new Uint8ClampedArray(L)),delete P.compressed,u(P)}Nu(e,E,"getImageData",{x:t,y:n,width:r,height:s},U)},fh,uh),S_=ke(l_,({canvasId:e,data:t,x:n,y:r,width:s,height:u},{resolve:g,reject:E})=>{var U=Qn(Lr());if(!U){E();return}let P,L=()=>{Nu(e,U,"putImageData",{data:t,x:n,y:r,width:s,height:u,compressed:P},Oe=>{if(Oe.errMsg&&Oe.errMsg.indexOf("fail")!==-1){E();return}g(Oe)})};l.os.name!=="iOS"||typeof __WEEX_DEVTOOL__=="boolean"?(t=Zd.deflateRaw(t,{to:"string"}),P=!0):t=Array.prototype.slice.call(t),L()},u_,c_),C_=ke(f_,({x:e=0,y:t=0,width:n,height:r,destWidth:s,destHeight:u,canvasId:g,fileType:E,quality:U},{resolve:P,reject:L})=>{var Oe=Qn(Lr());if(!Oe){L();return}let Pe=`${ni}/canvas`;Nu(g,Oe,"toTempFilePath",{x:e,y:t,width:n,height:r,destWidth:s,destHeight:u,fileType:E,quality:U,dirname:Pe},Re=>{if(Re.errMsg&&Re.errMsg.indexOf("fail")!==-1){L("",Re);return}P(Re)})},h_,d_),gh=["onCanplay","onPlay","onPause","onStop","onEnded","onTimeUpdate","onError","onWaiting","onSeeking","onSeeked"],O_=["offCanplay","offPlay","offPause","offStop","offEnded","offTimeUpdate","offError","offWaiting","offSeeking","offSeeked"],A_={thresholds:[0],initialRatio:0,observeAll:!1},T_=["top","right","bottom","left"],I_=1;function vh(e={}){return T_.map(t=>`${Number(e[t])||0}px`).join(" ")}class mh{constructor(t,n){this._pageId=Qn(t),this._component=t,this._options=K.extend({},A_,n)}relativeTo(t,n){return this._options.relativeToSelector=t,this._options.rootMargin=vh(n),this}relativeToViewport(t){return this._options.relativeToSelector=void 0,this._options.rootMargin=vh(t),this}observe(t,n){!K.isFunction(n)||(this._options.selector=t,this._reqId=I_++,ti({reqId:this._reqId,component:this._component,options:this._options,callback:n},this._pageId))}disconnect(){this._reqId&&$r({reqId:this._reqId,component:this._component},this._pageId)}}let P_=Dt("createIntersectionObserver",(e,t)=>(e=re.resolveComponentInstance(e),e&&!Qn(e)&&(t=e,e=null),e?new mh(e,t):new mh(Lr(),t))),N_=1;class _h{constructor(t){this._pageId=t.$page&&t.$page.id,this._component=t}observe(t,n){!K.isFunction(n)||(this._reqId=N_++,Pi({reqId:this._reqId,component:this._component,options:t,callback:n},this._pageId))}disconnect(){this._reqId&&Es({reqId:this._reqId,component:this._component},this._pageId)}}let k_=Dt("createMediaQueryObserver",e=>(e=re.resolveComponentInstance(e),e&&!Qn(e)&&(e=null),e?new _h(e):new _h(Lr()))),R_=0,Nf={};function x_(e,t,n,r){let s={options:r},u=r&&("success"in r||"fail"in r||"complete"in r);if(u){let g=String(R_++);s.callbackId=g,Nf[g]=r}_t.invokeViewMethod(`editor.${e}`,{type:n,data:s},t,({callbackId:g,data:E})=>{u&&(re.callOptions(Nf[g],E),delete Nf[g])})}class B_{constructor(t,n){this.id=t,this.pageId=n}format(t,n){this._exec("format",{name:t,value:n})}insertDivider(){this._exec("insertDivider")}insertImage(t){this._exec("insertImage",t)}insertText(t){this._exec("insertText",t)}setContents(t){this._exec("setContents",t)}getContents(t){this._exec("getContents",t)}clear(t){this._exec("clear",t)}removeFormat(t){this._exec("removeFormat",t)}undo(t){this._exec("undo",t)}redo(t){this._exec("redo",t)}blur(t){this._exec("blur",t)}getSelectionText(t){this._exec("getSelectionText",t)}scrollIntoView(t){this._exec("scrollIntoView",t)}_exec(t,n){x_(this.id,this.pageId,t,n)}}let M_={canvas:iu,map:If,video:Tf,editor:B_};function bh(e){if(e&&e.contextInfo){let{id:t,type:n,page:r}=e.contextInfo,s=M_[n];e.context=new s(t,r),delete e.contextInfo}}class kf{constructor(t,n,r,s){this._selectorQuery=t,this._component=n,this._selector=r,this._single=s}boundingClientRect(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,rect:!0,size:!0},t),this._selectorQuery}fields(t,n){return this._selectorQuery._push(this._selector,this._component,this._single,t,n),this._selectorQuery}scrollOffset(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,scrollOffset:!0},t),this._selectorQuery}context(t){return this._selectorQuery._push(this._selector,this._component,this._single,{context:!0},t),this._selectorQuery}node(t){return this._selectorQuery}}class D_{constructor(t){this._component=void 0,this._page=t,this._queue=[],this._queueCb=[]}exec(t){return Zr(this._page,this._queue,n=>{let r=this._queueCb;n.forEach((s,u)=>{K.isArray(s)?s.forEach(bh):bh(s);let g=r[u];K.isFunction(g)&&g.call(this,s)}),K.isFunction(t)&&t.call(this,n)}),this._nodesRef}in(t){return this._component=re.resolveComponentInstance(t),this}select(t){return this._nodesRef=new kf(this,this._component,t,!0)}selectAll(t){return this._nodesRef=new kf(this,this._component,t,!1)}selectViewport(){return this._nodesRef=new kf(this,null,"",!0)}_push(t,n,r,s,u){this._queue.push({component:n,selector:t,single:r,fields:s}),this._queueCb.push(u)}}let L_=Dt("createSelectorQuery",e=>(e=re.resolveComponentInstance(e),e&&!Qn(e)&&(e=null),new D_(e||Lr()))),F_="createAnimation",V_={formatArgs:{}},U_={duration:Number,timingFunction:String,delay:Number,transformOrigin:String},$_={duration:400,timingFunction:"linear",delay:0,transformOrigin:"50% 50% 0"};class yh{constructor(t){this.actions=[],this.currentTransform={},this.currentStepAnimates=[],this.option=K.extend({},$_,t)}_getOption(t){let n={transition:K.extend({},this.option,t),transformOrigin:""};return n.transformOrigin=n.transition.transformOrigin,delete n.transition.transformOrigin,n}_pushAnimates(t,n){this.currentStepAnimates.push({type:t,args:n})}_converType(t){return t.replace(/[A-Z]/g,n=>`-${n.toLowerCase()}`)}_getValue(t){return typeof t=="number"?`${t}px`:t}export(){let t=this.actions;return this.actions=[],{actions:t}}step(t){return this.currentStepAnimates.forEach(n=>{n.type!=="style"?this.currentTransform[n.type]=n:this.currentTransform[`${n.type}.${n.args[0]}`]=n}),this.actions.push({animates:Object.values(this.currentTransform),option:this._getOption(t)}),this.currentStepAnimates=[],this}}let H_=re.once(()=>{let e=["matrix","matrix3d","rotate","rotate3d","rotateX","rotateY","rotateZ","scale","scale3d","scaleX","scaleY","scaleZ","skew","skewX","skewY","translate","translate3d","translateX","translateY","translateZ"],t=["opacity","backgroundColor"],n=["width","height","left","right","top","bottom"];e.concat(t,n).forEach(r=>{yh.prototype[r]=function(...s){return t.concat(n).includes(r)?this._pushAnimates("style",[this._converType(r),n.includes(r)?this._getValue(s[0]):s[0]]):this._pushAnimates(r,s),this}})}),j_=Dt(F_,e=>(H_(),new yh(e)),U_,V_),Eh="onTabBarMidButtonTap",z_=Jn(Eh,()=>{}),W_="onWindowResize",G_="offWindowResize",Y_=Jn(W_,()=>{}),q_=Jr(G_,()=>{}),wh="setLocale",K_="getLocale",Sh="onLocaleChange",ou=Dt(K_,()=>{let e=Nt({allowDefault:!0});return e&&e.$vm?e.$vm.$locale:le().getLocale()}),J_=Jn(Sh,()=>{}),Z_=Dt(wh,e=>{let t=Nt();return t&&t.$vm.$locale!==e?(t.$vm.$locale=e,jn().forEach(s=>{_t.publishHandler(wh,e,s.$page.id)}),v.requireModule("plus").setLanguage(e),_t.invokeOnCallback(Sh,{locale:e}),!0):!1}),X_=ke("setPageMeta",(e,{resolve:t})=>{t(ga(Lr(),e))}),Ch="getSelectedTextRange",Q_=ke(Ch,(e,{resolve:t,reject:n})=>{_t.invokeViewMethod(Ch,{},Na(),r=>{typeof r.end=="undefined"&&typeof r.start=="undefined"?n("no focused"):t(r)})}),ku={[re.ON_UNHANDLE_REJECTION]:[],[re.ON_PAGE_NOT_FOUND]:[],[re.ON_ERROR]:[],[re.ON_SHOW]:[],[re.ON_HIDE]:[]};function au(e,t){let n=Nt({allowDefault:!0});if(n&&n.$vm)return Dn.injectHook(e,t,n.$vm.$);ku[e].push(t)}function eb(e){Object.keys(ku).forEach(t=>{ku[t].forEach(n=>{Dn.injectHook(t,n,e)})})}function su(e,t){let n=Nt({allowDefault:!0});if(n&&n.$vm)return Nl(n.$vm,e,t);K.remove(ku[e],t)}function tb(e){au(re.ON_UNHANDLE_REJECTION,e)}function nb(e){su(re.ON_UNHANDLE_REJECTION,e)}function rb(e){au(re.ON_PAGE_NOT_FOUND,e)}function ib(e){su(re.ON_PAGE_NOT_FOUND,e)}function ob(e){au(re.ON_ERROR,e)}function ab(e){su(re.ON_ERROR,e)}function sb(e){au(re.ON_SHOW,e)}function lb(e){su(re.ON_SHOW,e)}function cb(e){au(re.ON_HIDE,e)}function ub(e){su(re.ON_HIDE,e)}let fb=Dt("getEnterOptionsSync",()=>Uo()),db=Dt("getLaunchOptionsSync",()=>ws()),lu,Rf,xf,Oh;function Ah(e){try{return JSON.parse(e)}catch(t){}return e}function Bf(e){if(e.type==="enabled")xf=!0,Oh=e.offline;else if(e.type==="clientId")lu=e.cid,Rf=e.errMsg,Th(lu,e.errMsg);else if(e.type==="pushMsg"){let t={type:"receive",data:Ah(e.message)};for(let n=0;n<Sl.length&&(Sl[n](t),!t.stopped);n++);}else e.type==="click"&&Sl.forEach(t=>{t({type:"click",data:Ah(e.message)})})}let Mf=[];function Th(e,t){Mf.forEach(n=>{n(e,t)}),Mf.length=0}let hb=ke("getPushClientId",(e,{resolve:t,reject:n})=>{if(Oh){l.push.getClientInfoAsync(r=>{t({cid:r.clientid})},r=>{n(r.code+": "+r.message)});return}Promise.resolve().then(()=>{typeof xf=="undefined"&&(xf=!1,lu="",Rf="uniPush is not enabled"),Mf.push((r,s)=>{r?t({cid:r}):n(s)}),typeof lu!="undefined"&&Th(lu,Rf)})}),Sl=[],Ih=!1,pb=e=>{Sl.indexOf(e)===-1&&Sl.push(e),Ih||(Ih=!0,l.push.addEventListener("click",t=>{Bf({type:"click",message:t})}),l.push.addEventListener("receive",t=>{Bf({type:"pushMsg",message:t})}))},gb=e=>{if(!e)Sl.length=0;else{let t=Sl.indexOf(e);t>-1&&Sl.splice(t,1)}},vb="canIUse",mb=[{name:"schema",type:String,required:!0}],_b="getBackgroundAudioManager",bb="makePhoneCall",yb={phoneNumber:String},Eb="addPhoneContact",wb={formatArgs:{firstName(e){if(!e)return"addPhoneContact:fail parameter error: parameter.firstName should not be empty;"}}},Sb={firstName:{type:String,required:!0},photoFilePath:String,nickName:String,lastName:String,middleName:String,remark:String,mobilePhoneNumber:String,weChatNumber:String,addressCountry:String,addressState:String,addressCity:String,addressStreet:String,addressPostalCode:String,organization:String,title:String,workFaxNumber:String,workPhoneNumber:String,hostNumber:String,email:String,url:String,workAddressCountry:String,workAddressState:String,workAddressCity:String,workAddressStreet:String,workAddressPostalCode:String,homeFaxNumber:String,homePhoneNumber:String,homeAddressCountry:String,homeAddressState:String,homeAddressCity:String,homeAddressStreet:String,homeAddressPostalCode:String},Cb="getClipboardData",Ob="setClipboardData",Ab={formatArgs:{showToast:!0},beforeInvoke(){zt()},beforeSuccess(e,t){if(!t.showToast)return;let{t:n}=le(),r=n("uni.setClipboardData.success");r&&O.showToast({title:r,icon:"success",mask:!1})}},Tb={data:{type:String,required:!0},showToast:{type:Boolean}},Ph="onAccelerometer",Ib="offAccelerometer",Pb="startAccelerometer",Nb="stopAccelerometer",Nh="onCompass",kb="offCompass",Rb="startCompass",xb="stopCompass",Bb="vibrateShort",Mb="vibrateLong",kh="onBluetoothDeviceFound",Rh="onBluetoothAdapterStateChange",xh="onBLEConnectionStateChange",Bh="onBLECharacteristicValueChange",Db="startBluetoothDevicesDiscovery",Lb={services:Array,allowDuplicatesKey:Boolean,interval:Number},Fb="getConnectedBluetoothDevices",Vb={services:{type:Array,required:!0}},Ub="createBLEConnection",$b={deviceId:{type:String,required:!0}},Hb="closeBLEConnection",jb={deviceId:{type:String,required:!0}},zb="getBLEDeviceServices",Wb={deviceId:{type:String,required:!0}},Gb="getBLEDeviceCharacteristics",Yb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0}},qb="notifyBLECharacteristicValueChange",Kb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},state:{type:Boolean,required:!0}},Jb="readBLECharacteristicValue",Zb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0}},Xb="writeBLECharacteristicValue",Qb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},value:{type:Array,required:!0}},ey="setBLEMTU",ty={deviceId:{type:String,required:!0},mtu:{type:Number,required:!0}},ny="getBLEDeviceRSSI",ry={deviceId:{type:String,required:!0}},Mh="onBeaconUpdate",Dh="onBeaconServiceChange",iy="getBeacons",oy="startBeaconDiscovery",ay={uuids:{type:Array,required:!0}},sy="stopBeaconDiscovery",ly="getScreenBrightness",cy="setScreenBrightness",uy="setKeepScreenOn",fy="checkIsSupportSoterAuthentication",dy="checkIsSoterEnrolledInDevice",hy=["fingerPrint","facial","speech"],py={formatArgs:{checkAuthMode(e,t){if(!e||!hy.includes(e))return"checkAuthMode \u586B\u5199\u9519\u8BEF"}}},gy={checkAuthMode:String},vy="startSoterAuthentication",my={formatArgs:{requestAuthModes(e,t){if(!e.includes("fingerPrint")&&!e.includes("facial"))return"requestAuthModes \u586B\u5199\u9519\u8BEF"}}},_y={requestAuthModes:{type:Array,required:!0},challenge:String,authContent:String},by="scanCode",yy={onlyFromCamera:Boolean,scanType:Array,autoDecodeCharSet:Boolean,sound:String,autoZoom:Boolean},Ey=["default","none"],wy={formatArgs:{sound(e,t){Ey.includes(e)||(t.sound="none")},autoZoom(e,t){typeof e=="undefined"&&(t.autoZoom=!0)}}},Sy="getSystemSetting",Cy="getAppAuthorizeSetting",Oy="openAppAuthorizeSetting",Ay="getStorage",Lh={key:{type:String,required:!0}},Ty="getStorageSync",Fh=[{name:"key",type:String,required:!0}],Iy="setStorage",Py={key:{type:String,required:!0},data:{required:!0}},Ny="setStorageSync",ky=[{name:"key",type:String,required:!0},{name:"data",required:!0}],Vh="removeStorage",Ry=Lh,xy=Fh,By="saveFile",My={formatArgs:{tempFilePath(e,t){t.tempFilePath=Je(e)}}},Dy={tempFilePath:{type:String,required:!0}},Ly="getSavedFileList",Fy="removeSavedFile",Vy={formatArgs:{filePath(e,t){t.filePath=Je(e)}}},Uy={filePath:{type:String,required:!0}},$y="getFileInfo",Hy={formatArgs:{filePath(e,t){t.filePath=Je(e)}}},jy={filePath:{type:String,required:!0}},zy="getSavedFileInfo",Wy={formatArgs:{filePath(e,t){t.filePath=Je(e)}}},Gy={filePath:{type:String,required:!0}},Yy="openDocument",qy={formatArgs:{filePath(e,t){t.filePath=Je(e)}}},Ky={filePath:{type:String,required:!0},fileType:String},Jy="hideKeyboard",Zy="showKeyboard",Xy="chooseLocation",Qy={keyword:String,latitude:Number,longitude:Number},e0="getLocation",Uh=["wgs84","gcj02"],t0={formatArgs:{type(e,t){e=(e||"").toLowerCase(),Uh.indexOf(e)===-1?t.type=Uh[0]:t.type=e},altitude(e,t){t.altitude=e||!1}}},n0={type:String,altitude:Boolean},r0="openLocation",$h=(e,t)=>{if(t===void 0)return`${e} should not be empty.`;if(typeof t!="number"){let n=typeof t;return n=n[0].toUpperCase()+n.substring(1),`Expected Number, got ${n} with value ${JSON.stringify(t)}.`}},i0={formatArgs:{latitude(e,t){let n=$h("latitude",e);if(n)return n;t.latitude=e},longitude(e,t){let n=$h("longitude",e);if(n)return n;t.longitude=e},scale(e,t){e=Math.floor(e),t.scale=e>=5&&e<=18?e:18}}},o0={latitude:Number,longitude:Number,scale:Number,name:String,address:String},a0="chooseImage",s0={formatArgs:{count(e,t){(!e||e<=0)&&(t.count=9)},sizeType(e,t){t.sizeType=Nn(e,wi)},sourceType(e,t){t.sourceType=Nn(e,qn)},extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},l0={count:Number,sizeType:[Array,String],sourceType:Array,extension:Array},c0="chooseVideo",u0={formatArgs:{sourceType(e,t){t.sourceType=Nn(e,qn)},compressed:!0,maxDuration:60,camera:"back",extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},f0={sourceType:Array,compressed:Boolean,maxDuration:Number,camera:String,extension:Array},d0="getImageInfo",h0={formatArgs:{src(e,t){t.src=Je(e)}}},p0={src:{type:String,required:!0}},g0="previewImage",v0={formatArgs:{urls(e,t){t.urls=e.map(n=>K.isString(n)&&n?Je(n):"")},current(e,t){typeof e=="number"?t.current=e>0&&e<t.urls.length?e:0:K.isString(e)&&e&&(t.current=Je(e))}}},m0={urls:{type:Array,required:!0},current:{type:[Number,String]}},_0="closePreviewImage",b0="getVideoInfo",y0={formatArgs:{src(e,t){t.src=Je(e)}}},E0={src:{type:String,required:!0}},w0="saveImageToPhotosAlbum",S0={formatArgs:{filePath(e,t){t.filePath=Je(e)}}},C0={filePath:{type:String,required:!0}},O0="saveVideoToPhotosAlbum",A0={formatArgs:{filePath(e,t){t.filePath=Je(e)}}},T0={filePath:{type:String,required:!0}},I0="getRecorderManager",P0="compressImage",N0={formatArgs:{src(e,t){t.src=Je(e)}}},k0={src:{type:String,required:!0}},R0="compressVideo",x0={formatArgs:{src(e,t){t.src=Je(e)}}},B0={src:{type:String,required:!0},quality:String,bitrate:Number,fps:Number,resolution:Number},M0="request",D0={JSON:"json"},L0=["text","arraybuffer"],F0="text",Hh=encodeURIComponent;function V0(e,t){let n=e.split("#"),r=n[1]||"";n=n[0].split("?");let s=n[1]||"";e=n[0];let u=s.split("&").filter(E=>E),g={};u.forEach(E=>{let U=E.split("=");g[U[0]]=U[1]});for(let E in t)if(K.hasOwn(t,E)){let U=t[E];typeof U=="undefined"||U===null?U="":K.isPlainObject(U)&&(U=JSON.stringify(U)),g[Hh(E)]=Hh(U)}return s=Object.keys(g).map(E=>`${E}=${g[E]}`).join("&"),e+(s?"?"+s:"")+(r?"#"+r:"")}let U0={method:String,data:[Object,String,Array,ArrayBuffer],url:{type:String,required:!0},header:Object,dataType:String,responseType:String,withCredentials:Boolean},$0={formatArgs:{method(e,t){t.method=Vt((e||"").toUpperCase(),hn)},data(e,t){t.data=e||""},url(e,t){t.method===hn[0]&&K.isPlainObject(t.data)&&Object.keys(t.data).length&&(t.url=V0(e,t.data))},header(e,t){let n=t.header=e||{};t.method!==hn[0]&&(Object.keys(n).find(r=>r.toLowerCase()==="content-type")||(n["Content-Type"]="application/json"))},dataType(e,t){t.dataType=(e||D0.JSON).toLowerCase()},responseType(e,t){t.responseType=(e||"").toLowerCase(),L0.indexOf(t.responseType)===-1&&(t.responseType=F0)}}},H0="configMTLS",j0={certificates:{type:Array,required:!0}},z0={formatArgs:{certificates(e){if(e.some(t=>K.toRawType(t.host)!=="String"))return"\u53C2\u6570\u914D\u7F6E\u9519\u8BEF\uFF0C\u8BF7\u786E\u8BA4\u540E\u91CD\u8BD5"}}},W0="downloadFile",G0={formatArgs:{header(e,t){t.header=e||{}}}},Y0={url:{type:String,required:!0},header:Object,timeout:Number},q0="uploadFile",K0={formatArgs:{filePath(e,t){e&&(t.filePath=Je(e))},header(e,t){t.header=e||{}},formData(e,t){t.formData=e||{}}}},J0={url:{type:String,required:!0},files:Array,filePath:String,name:String,header:Object,formData:Object,timeout:Number},Z0="connectSocket",X0={formatArgs:{header(e,t){t.header=e||{}},method(e,t){t.method=Vt((e||"").toUpperCase(),hn)},protocols(e,t){K.isString(e)&&(t.protocols=[e])}}},Q0={url:{type:String,required:!0},header:{type:Object},method:String,protocols:[Array,String]},eE="sendSocketMessage",tE={data:[String,ArrayBuffer]},nE="closeSocket",rE={code:Number,reason:String},iE="startLocationUpdate",jh="onLocationChange",oE="stopLocationUpdate",aE="offLocationChange",sE="offLocationChangeError",zh="onLocationChangeError",Wh=["wgs84","gcj02"],lE={type:String},cE={formatArgs:{type(e,t){e=(e||"").toLowerCase(),Wh.indexOf(e)===-1?t.type=Wh[1]:t.type=e}}};function uE(e){if(!K.isString(e))return e;let t=e.indexOf("?");if(t===-1)return e;let n=e.slice(t+1).trim().replace(/^(\?|#|&)/,"");if(!n)return e;e=e.slice(0,t);let r=[];return n.split("&").forEach(s=>{let u=s.replace(/\+/g," ").split("="),g=u.shift(),E=u.length>0?u.join("="):"";r.push(g+"="+encodeURIComponent(E))}),r.length?e+"?"+r.join("&"):e}let fE=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],dE=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],Ac={url:{type:String,required:!0}},Df="navigateTo",Lf="redirectTo",Gh="reLaunch",Ru="switchTab",hE="navigateBack",Ff="preloadPage",Yh="unPreloadPage",pE=K.extend({},Ac,qh(fE)),gE=K.extend({delta:{type:Number}},qh(dE)),vE=Ac,mE=Ac,_E=Ac,bE=Ac,yE=Ac,EE=Bu(Df),wE=Bu(Lf),SE=Bu(Gh),CE=Bu(Ru),OE={formatArgs:{delta(e,t){e=parseInt(e+"")||1,t.delta=Math.min(jn().length-1,e)}}};function qh(e){return{animationType:{type:String,validator(t){if(t&&e.indexOf(t)===-1)return"`"+t+"` is not supported for `animationType` (supported values are: `"+e.join("`|`")+"`)"}},animationDuration:{type:Number}}}let xu;function AE(){xu=""}function Bu(e){return{formatArgs:{url:TE(e)},beforeAll:AE}}function TE(e){return function(n,r){if(!n)return'Missing required args: "url"';n=ma(n);let s=n.split("?")[0],u=ho(s,!0);if(!u)return"page `"+n+"` is not found";if(e===Df||e===Lf){if(u.meta.isTabBar)return`can not ${e} a tabbar page`}else if(e===Ru&&!u.meta.isTabBar)return"can not switch to no-tabBar page";if((e===Ru||e===Ff)&&u.meta.isTabBar&&r.openType!=="appLaunch"&&(n=s),u.meta.isEntry&&(n=n.replace(u.alias,"/")),r.url=uE(n),e!==Yh){if(e===Ff){if(!u.meta.isNVue)return"can not preload vue page";if(u.meta.isTabBar){let g=jn(),E=u.path.slice(1);if(g.find(U=>U.route===E))return"tabBar page `"+E+"` already exists"}return}if(xu===n&&r.openType!=="appLaunch")return`${xu} locked`;R.ready&&(xu=n)}}}let IE="hideLoading",PE="hideToast",Kh="loadFontFace",NE={family:{type:String,required:!0},source:{type:String,required:!0},desc:Object},kE=["#ffffff","#000000"],RE="setNavigationBarColor",xE={formatArgs:{animation(e,t){e||(e={duration:0,timingFunc:"linear"}),t.animation={duration:e.duration||0,timingFunc:e.timingFunc||"linear"}}}},BE={frontColor:{type:String,required:!0,validator(e){if(kE.indexOf(e)===-1)return`invalid frontColor "${e}"`}},backgroundColor:{type:String,required:!0},animation:Object},ME="setNavigationBarTitle",DE={title:{type:String,required:!0}},LE="showNavigationBarLoading",FE="hideNavigationBarLoading",Jh="pageScrollTo",VE={scrollTop:Number,selector:String,duration:Number},UE={formatArgs:{duration:300}},$E="showActionSheet",HE={itemList:{type:Array,required:!0},title:String,itemColor:String,popover:Object},jE={formatArgs:{itemColor:"#000"}},zE="showLoading",WE={title:String,mask:Boolean},GE={formatArgs:{title:"",mask:!1}},YE="showModal",qE={title:String,content:String,showCancel:Boolean,cancelText:String,cancelColor:String,confirmText:String,confirmColor:String},KE={beforeInvoke(){Y()},formatArgs:{title:"",content:"",placeholderText:"",showCancel:!0,editable:!1,cancelText(e,t){if(!K.hasOwn(t,"cancelText")){let{t:n}=le();t.cancelText=n("uni.showModal.cancel")}},cancelColor:"#000",confirmText(e,t){if(!K.hasOwn(t,"confirmText")){let{t:n}=le();t.confirmText=n("uni.showModal.confirm")}},confirmColor:re.PRIMARY_COLOR}},JE="showToast",ZE=["success","loading","none","error"],XE={title:String,icon:String,image:String,duration:Number,mask:Boolean},QE={formatArgs:{title:"",icon(e,t){t.icon=Vt(e,ZE)},image(e,t){e?t.image=Je(e):t.image=""},duration:1500,mask:!1}},ew="startPullDownRefresh",tw="stopPullDownRefresh",cu={index:{type:Number,required:!0}},Cl={beforeInvoke(){let e=qa();if(e&&!e.isTabBar)return"not TabBar page"},formatArgs:{index(e){if(!R.tabBar.list[e])return"tabbar item not found"}}},nw="setTabBarItem",rw=K.extend({text:String,iconPath:String,selectedIconPath:String,pagePath:String},cu),iw={beforeInvoke:Cl.beforeInvoke,formatArgs:K.extend({pagePath(e,t){e&&(t.pagePath=re.removeLeadingSlash(e))}},Cl.formatArgs)},ow="setTabBarStyle",aw={color:String,selectedColor:String,backgroundColor:String,backgroundImage:String,backgroundRepeat:String,borderStyle:String},sw=/^(linear|radial)-gradient\(.+?\);?$/,lw={beforeInvoke:Cl.beforeInvoke,formatArgs:{backgroundImage(e,t){e&&!sw.test(e)&&(t.backgroundImage=Je(e))},borderStyle(e,t){e&&(t.borderStyle=e==="white"?"white":"black")}}},cw="hideTabBar",Zh={animation:Boolean},uw="showTabBar",fw=Zh,dw="hideTabBarRedDot",hw=cu,pw=Cl,gw="showTabBarRedDot",vw=cu,mw=Cl,_w="removeTabBarBadge",bw=cu,yw=Cl,Ew="setTabBarBadge",ww=K.extend({text:{type:String,required:!0}},cu),Sw={beforeInvoke:Cl.beforeInvoke,formatArgs:K.extend({text(e,t){re.getLen(e)>=4&&(t.text="...")}},Cl.formatArgs)},Cw="getProvider",Ow={service:{type:String,required:!0}},Aw="login",Tw={provider:String,scopes:[String,Array],timeout:Number,univerifyStyle:Object,onlyAuthorize:Boolean},Iw="getUserInfo",Pw={provider:String,withCredentials:Boolean,timeout:Number,lang:String},Nw="ggetUserProfilegetUserProfile",kw={provider:String,withCredentials:Boolean,timeout:Number,lang:String},Rw="preLogin",xw={UNIVERIFY:"univerify"},Bw={formatArgs:{provider(e,t){if(Object.values(xw).indexOf(String(e))<0)return"provider error"}}},Mw={provider:{type:String,required:!0}},Dw="closeAuthView",Lw="getCheckBoxState",Fw="getUniverifyManager",Vw="share",Xh=["WXSceneSession","WXSceneTimeline","WXSceneFavorite"],Uw={formatArgs:{scene(e,t){let{provider:n,openCustomerServiceChat:r}=t;if(n==="weixin"&&!r&&(!e||!Xh.includes(e)))return`\u5206\u4EAB\u5230\u5FAE\u4FE1\u65F6\uFF0Cscene\u5FC5\u987B\u4E3A\u4EE5\u4E0B\u5176\u4E2D\u4E00\u4E2A\uFF1A${Xh.join("\u3001")}`},summary(e,t){if(t.type===1&&!e)return"\u5206\u4EAB\u7EAF\u6587\u672C\u65F6\uFF0Csummary\u5FC5\u586B"},href(e,t){if(t.type===0&&!e)return"\u5206\u4EAB\u56FE\u6587\u65F6\uFF0Chref\u5FC5\u586B"},imageUrl(e,t){if([0,2,5].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u56FE\u6587\u3001\u7EAF\u56FE\u7247\u3001\u5C0F\u7A0B\u5E8F\u65F6\uFF0CimageUrl\u5FC5\u586B\uFF0C\u63A8\u8350\u4F7F\u7528\u5C0F\u4E8E20Kb\u7684\u56FE\u7247"},mediaUrl(e,t){if([3,4].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u97F3\u4E50\u3001\u89C6\u9891\u65F6\uFF0CmediaUrl\u5FC5\u586B"},miniProgram(e,t){if(t.type===5&&!e)return"\u5206\u4EAB\u5C0F\u7A0B\u5E8F\u65F6\uFF0CminiProgram\u5FC5\u586B"},corpid(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 corpid \u5FC5\u586B"},customerUrl(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 customerUrl \u5FC5\u586B"}}},$w={provider:{type:String,required:!0},type:Number,title:String,scene:String,summary:String,href:String,imageUrl:String,mediaUrl:String,miniProgram:Object},Hw="shareWithSystem",Qh=["text","image"],jw={formatArgs:{type(e,t){if(e&&!Qh.includes(e))return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E\u3002\u53EA\u652F\u6301text\u3001image";t.type=Vt(e,Qh)}}},zw={type:String,summary:String,href:String,imageUrl:String},Ww="requestPayment",Gw={provider:{type:String,required:!0},orderInfo:{type:[String,Object],required:!0},timeStamp:String,nonceStr:String,package:String,signType:String,paySign:String},Yw="createPushMessage",qw={formatArgs:{content(e){if(!e)return"content is required"}}},Kw="createRewardedVideoAd",Jw={formatArgs:{adpid:"",adUnitId:""}},Zw={adpid:String,adUnitId:String},Xw="createFullScreenVideoAd",Qw={formatArgs:{adpid:""}},eS={adpid:String},tS="createInterstitialAd",nS={formatArgs:{adpid:"",adUnitId:""}},rS={adpid:String,adUnitId:String},iS="createInteractiveAd",oS={formatArgs:{adpid(e,t){if(!e)return"adpid should not be empty.";e&&(t.adpid=e)},provider(e,t){if(!e)return"provider should not be empty.";e&&(t.provider=e)}}},aS={adpid:{type:String,required:!0},provider:{type:String,required:!0}};function Gl(e,t){return function(r){delete r.code,delete r.message,K.isFunction(t)&&(r=t(r)),e(r)}}function br(e,t){return function(r){r=r||{},t=r.message||t||"",delete r.message,e(t,K.extend({code:0},r))}}function Tc(e,t){return function(){e()(function(r){r&&(delete r.code,delete r.message),_t.invokeOnCallback(t,r)})}}function Bi(e,t,n){return function(r,{resolve:s,reject:u}){e()(K.extend({},K.isFunction(t)?t(r):r,{success:Gl(s,n),fail:br(u)}))}}function uu(e=""){if(!(R.tabBar&&K.isArray(R.tabBar.list)))return!1;try{if(!e){let n=jn();if(!n.length)return!1;let r=n[n.length-1];return r?r.$page.meta.isTabBar:!1}/^\//.test(e)||(e=re.addLeadingSlash(e));let t=ho(e);return t&&t.meta.isTabBar}catch(t){}return!1}let ls="__TYPE",sS="uni-storage-keys";function Vf(e){let t=["object","string","number","boolean","undefined"];try{let n=K.isString(e)?JSON.parse(e):e,r=n.type;if(t.indexOf(r)>=0){let s=Object.keys(n);if(s.length===2&&"data"in n){if(typeof n.data===r)return n.data;if(r==="object"&&/^\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z$/.test(n.data))return new Date(n.data)}else if(s.length===1)return""}}catch(n){}}let lS=Dt(Ny,(e,t)=>{let n=typeof t,r=n==="string"?t:JSON.stringify({type:n,data:t});try{n==="string"&&Vf(r)!==void 0?l.storage.setItem(e+ls,n):l.storage.removeItem(e+ls),l.storage.setItem(e,r)}catch(s){}},ky),cS=ke(Iy,({key:e,data:t},{resolve:n,reject:r})=>{let s=typeof t,u=s==="string"?t:JSON.stringify({type:s,data:t});try{let g=l.storage;s==="string"&&Vf(u)!==void 0?g.setItemAsync(e+ls,s,()=>{}):g.removeItemAsync(e+ls,()=>{}),g.setItemAsync(e,u,n,br(r))}catch(g){r(g.message)}},Py);function Uf(e,t){let n=t;if(e!=="string"||e==="string"&&t==='{"type":"undefined"}')try{let r=JSON.parse(t),s=Vf(r);if(s!==void 0)n=s;else if(e&&(n=r,K.isString(r))){r=JSON.parse(r);let u=typeof r;u==="number"&&e==="date"?n=new Date(r):u===(["null","array"].indexOf(e)<0?e:"object")&&(n=r)}}catch(r){}return n}let uS=Dt(Ty,e=>{let t=l.storage.getItem(e),r=(l.storage.getItem(e+ls)||"").toLowerCase();return K.isString(t)?Uf(r,t):""},Fh),fS=ke(Ay,({key:e},{resolve:t,reject:n})=>{let r=l.storage;r.getItemAsync(e,function(s){r.getItemAsync(e+ls,function(u){let E=(u.data||"").toLowerCase();t({data:Uf(E,s.data)})},function(){t({data:Uf("",s.data)})})},br(n))},Lh),dS=Dt(Vh,e=>{l.storage.removeItem(e+ls),l.storage.removeItem(e)},xy),hS=ke(Vh,({key:e},{resolve:t,reject:n})=>{l.storage.removeItemAsync(e+ls,()=>{}),l.storage.removeItemAsync(e,t,br(n))},Ry),pS=Dt("clearStorageSync",()=>{l.storage.clear()}),gS=ke("clearStorage",(e,{resolve:t,reject:n})=>{l.storage.clearAsync(t,br(n))}),ep=Dt("getStorageInfoSync",()=>{let e=l.storage.getLength()||0,t=[],n=0;for(let r=0;r<e;r++){let s=l.storage.key(r);if(s!==sS&&(s.indexOf(ls)<0||s.indexOf(ls)+ls.length!==s.length)){let u=l.storage.getItem(s);n+=s.length+u.length,t.push(s)}}return{keys:t,currentSize:Math.ceil(n*2/1024),limitSize:Number.MAX_VALUE}}),vS=ke("getStorageInfo",(e,{resolve:t})=>{t(ep())}),mS=ke($y,(e,{resolve:t,reject:n})=>{l.io.getFileInfo(K.extend(e,{success:Gl(t),fail:br(n)}))},jy,Hy),_S=0,tp="uniapp_save",bS=`_doc/${tp}`;function yS(e,t){t=t||function(){},l.io.requestFileSystem(l.io.PRIVATE_DOC,n=>{n.root.getDirectory(tp,{create:!0},e,t)},t)}let ES=ke(By,({tempFilePath:e},{resolve:t,reject:n})=>{let r=br(n),s=`${Date.now()}${_S++}${Yi(e)}`;l.io.resolveLocalFileSystemURL(e,u=>{yS(g=>{u.copyTo(g,s,()=>{let E=bS+"/"+s;t({savedFilePath:E})},r)},r)},r)},Dy,My),wS="uniapp_save";function SS(e,t){t=t||function(){},l.io.requestFileSystem(l.io.PRIVATE_DOC,n=>{n.root.getDirectory(wS,{create:!0},e,t)},t)}let CS=ke(Ly,(e,{resolve:t,reject:n})=>{let r=br(n);SS(s=>{var u=s.createReader(),g=[];u.readEntries(E=>{E&&E.length?E.forEach(U=>{U.getMetadata(P=>{g.push({filePath:l.io.convertAbsoluteFileSystem(U.fullPath),createTime:P.modificationTime.getTime(),size:P.size}),g.length===E.length&&t({fileList:g})},r,!1)}):t({fileList:g})},r)},r)}),OS=ke(zy,({filePath:e},{resolve:t,reject:n})=>{let r=br(n);l.io.resolveLocalFileSystemURL(e,s=>{s.getMetadata(u=>{t({createTime:u.modificationTime.getTime(),size:u.size})},r,!1)},r)},Gy,Wy),AS=ke(Fy,({filePath:e},{resolve:t,reject:n})=>{let r=br(n);l.io.resolveLocalFileSystemURL(e,s=>{s.remove(()=>{t()},r)},r)},Uy,Vy),TS=ke(Yy,({filePath:e,fileType:t},{resolve:n,reject:r})=>{let s=br(r);l.runtime.openDocument(Je(e),void 0,n,s)},Ky,qy),IS=Dt(vb,e=>!!K.hasOwn(O,e),mb),fu,np=l.navigator.setStatusBarStyle;function PS(e){np=e}function rp(e){fu=e,np(e)}l.navigator.setStatusBarStyle=rp;function Ds(e){if(!e){let t=Dr();if(!t||(e=t.$page.statusBarStyle,!e||e===fu))return}e!==fu&&(fu=e,l.navigator.setStatusBarStyle(e))}function ip(e){_t.on(re.ON_THEME_CHANGE,e)}function NS(e){_t.off(re.ON_THEME_CHANGE,e)}function kS(){return op()==="dark"?"light":"dark"}function op(){return l.navigator.getUIStyle()}function RS(){if(R.darkmode){let e=kS();Ds(e),tr().forEach(n=>{n.$page.statusBarStyle=e})}}function $f(e){if(R.darkmode){let t={},n=l.navigator.getUIStyle(),r=hu();return r&&r.hostTheme&&(n=r.hostTheme),t=re.normalizeStyles(e,R.themeConfig,n),t}return e}function xS(e,t){if(R.darkmode){let n=()=>{let{list:r=[],color:s,selectedColor:u,backgroundColor:g,borderStyle:E}=$f(t);e&&e.setTabBarStyle({color:s,selectedColor:u,backgroundColor:g,borderStyle:E}),e&&e.setTabBarItems({list:r.map(U=>({iconPath:U.iconPath,selectedIconPath:U.selectedIconPath,visible:U.visible}))})};n(),ip(n)}}function ap(e,t){if(R.darkmode){let n=()=>{let r=t();r.animationAlphaBGColor,r.background,r.backgroundColorBottom,r.backgroundColorTop;var s=r.titleNView;typeof s!="undefined"&&typeof s=="object"&&(s.backgroundColor,s.titleColor),e&&e.setStyle(r)};ip(n),e.addEventListener("close",()=>NS(n))}}let du,Hf=!0,sr;function BS(e,t,n){!sr||(e==="none"?(sr.hideTabBarRedDot({index:t}),sr.removeTabBarBadge({index:t})):e==="text"?sr.setTabBarBadge({index:t,text:n}):e==="redDot"&&sr.showTabBarRedDot({index:t}))}function MS(e){sr&&sr.setTabBarItems(e)}function DS(e,t,n,r,s,u){let g={index:e};if(t!==void 0&&(g.text=t),n&&(g.iconPath=Je(n)),r&&(g.selectedIconPath=Je(r)),u!==void 0&&(g.iconfont=u),s!==void 0){g.visible=du.list[e].visible=s,delete g.index;let E=du.list.map(U=>({visible:U.visible}));E[e]=g,MS({list:E})}else sr&&sr.setTabBarItem(g)}function LS(e){sr&&sr.setTabBarStyle(e)}function FS(e){Hf=!1,sr&&sr.hideTabBar({animation:e})}function VS(e){Hf=!0,sr&&sr.showTabBar({animation:e})}let Mu=[];var Mi={id:"0",init(e,t){e&&e.list.length&&(du=e);try{sr=v.requireModule("uni-tabview")}catch(n){console.log(`uni.requireNativePlugin("uni-tabview") error ${n}`)}sr.onMaskClick(()=>{Mu.forEach(n=>{n()})}),sr&&sr.onClick(({index:n})=>{t(du.list[n],n)}),sr&&sr.onMidButtonClick(()=>_t.invokeOnCallback(Eh)),xS(sr,e)},indexOf(e){let t=this.config,n=t&&t.list&&t.list.length;if(n){for(let r=0;r<n;r++)if(t.list[r].pagePath===e||t.list[r].pagePath===`${e}.html`)return r}return-1},switchTab(e){let t=this.indexOf(e);return t>=0?(sr&&sr.switchSelect({index:t}),!0):!1},setTabBarBadge:BS,setTabBarItem:DS,setTabBarStyle:LS,hideTabBar:FS,showTabBar:VS,append(e){sr&&sr.append({id:e.id},({code:t})=>{t!==0&&k(()=>{this.append(e)},20)})},get config(){return du||R.tabBar},get visible(){return Hf},get height(){let e=this.config;return(e&&e.height?parseFloat(e.height):re.TABBAR_HEIGHT)+l.navigator.getSafeAreaInsets().deviceBottom},get cover(){let e=this.config;return e&&["extralight","light","dark"].indexOf(e.blurEffect)>=0},setStyle({mask:e}){sr.setMask({color:e})},addEventListener(e,t){Mu.push(t)},removeEventListener(e,t){let n=Mu.indexOf(t);Mu.splice(n,1)}};function Du(){let e=Dr();return e?e.$getAppWebview():null}function sp(e){return e?e.$getAppWebview():Du()}let lp=null;function cp(){return lp}function jf(e){lp=e}function zf(){return l.navigator.isImmersedStatusbar()?Math.round(l.os.name==="iOS"?l.navigator.getSafeAreaInsets().top:l.navigator.getStatusbarHeight()):0}function up(){let e=l.navigator.getStatusBarStyle();return e==="UIStatusBarStyleBlackTranslucent"||e==="UIStatusBarStyleBlackOpaque"||e==="null"?e="light":e==="UIStatusBarStyleDefault"&&(e="dark"),e}function US(){let{resolutionWidth:e,resolutionHeight:t}=l.screen.getCurrentSize()||{resolutionWidth:0,resolutionHeight:0};return{screenWidth:Math.round(e),screenHeight:Math.round(t)}}let fp=Dt("getWindowInfo",()=>{let e=l.os.name.toLowerCase()==="ios",{screenWidth:t,screenHeight:n}=US(),r=zf(),s,u={height:0,cover:!1},g=Du();if(g){let ht=g.getStyle(),pt=ht&&ht.titleNView;pt&&pt.type&&pt.type!=="none"&&(u.height=pt.type==="transparent"?0:r+re.NAVBAR_HEIGHT,u.cover=pt.type==="transparent"||pt.type==="float"),s=g.getSafeAreaInsets()}else s=l.navigator.getSafeAreaInsets();let E={height:0,cover:!1};uu()&&(E.height=Mi.visible?Mi.height:0,E.cover=Mi.cover);let U=u.cover?u.height:0,P=E.cover?E.height:0,L=n-u.height-E.height,Oe=n-(u.cover?0:u.height)-(E.cover?0:E.height),Pe=t;(!E.height||E.cover)&&!s.bottom&&s.deviceBottom&&(L-=s.deviceBottom,Oe-=s.deviceBottom),s=e?s:{left:0,right:0,top:u.height&&!u.cover?0:r,bottom:0};let Re={left:s.left,right:Pe-s.right,top:s.top,bottom:Oe-s.bottom,width:Pe-s.left-s.right,height:Oe-s.top-s.bottom};return{pixelRatio:l.screen.scale,screenWidth:t,screenHeight:n,windowWidth:Pe,windowHeight:L,statusBarHeight:r,safeArea:Re,safeAreaInsets:{top:s.top,right:s.right,bottom:s.bottom,left:s.left},windowTop:U,windowBottom:P,screenTop:n-L}}),cs,Lu=!0;function hu(){if(!Lu)return;let{getSystemInfoSync:e}=v.requireModule("plus");if(cs=e(),K.isString(cs))try{cs=JSON.parse(cs)}catch(t){}return cs}let dp=Dt("getDeviceInfo",()=>{hu();let{deviceBrand:e="",deviceModel:t,osName:n,osVersion:r,deviceOrientation:s,deviceType:u,deviceId:g}=cs,E=e.toLowerCase(),U=n.toLowerCase();return{brand:E,deviceBrand:E,deviceModel:t,devicePixelRatio:l.screen.scale,deviceId:g,deviceOrientation:s,deviceType:u,model:t,platform:U,system:`${U==="ios"?"iOS":"Android"} ${r}`}}),hp=Dt("getAppBaseInfo",()=>{hu();let{hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,osLanguage:s,hostTheme:u,appId:g,appName:E,appVersion:U,appVersionCode:P,appWgtVersion:L}=cs;return{appId:g,appName:E,appVersion:U,appVersionCode:P,appWgtVersion:L,appLanguage:ou?ou():s,enableDebug:!1,hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,hostTheme:u,hostFontSizeSetting:void 0,hostSDKVersion:void 0,language:s,SDKVersion:"",theme:op(),version:l.runtime.innerVersion}}),pp=Dt("getSystemInfoSync",()=>{Lu=!0,hu(),Lu=!1;let e=fp(),t=dp(),n=hp();Lu=!0;let r={fontSizeSetting:n.hostFontSizeSetting,osName:cs.osName.toLowerCase()};cs.hostName&&(r.hostSDKVersion=cs.uniRuntimeVersion);let s=K.extend(cs,e,t,n,r);return delete s.screenTop,delete s.enableDebug,R.darkmode||delete s.theme,re.sortObject(s)}),$S=ke("getSystemInfo",(e,{resolve:t})=>t(pp())),Ic=null,HS=Jn(Nh,()=>{gp()}),jS=Jr(kb,()=>{vp()}),gp=ke(Rb,(e,{resolve:t,reject:n})=>{Ic||(Ic=l.orientation.watchOrientation(r=>{_t.invokeOnCallback(Nh,{direction:r.magneticHeading})},r=>{n(r.message),Ic=null},{frequency:hr})),k(t,hr)}),vp=ke(xb,(e,{resolve:t})=>{Ic&&(l.orientation.clearWatch(Ic),Ic=null),t()}),zS=ke(Bb,(e,{resolve:t})=>{l.device.vibrate(15),t()}),WS=ke(Mb,(e,{resolve:t})=>{l.device.vibrate(400),t()}),Pc=null,GS=Jn(Ph,()=>{mp()}),YS=Jr(Ib,()=>{_p()}),mp=ke(Pb,(e,{resolve:t,reject:n})=>{Pc||(Pc=l.accelerometer.watchAcceleration(r=>{_t.invokeOnCallback(Ph,{x:r&&r.xAxis||0,y:r&&r.yAxis||0,z:r&&r.zAxis||0})},r=>{Pc=null,n(`startAccelerometer:fail ${r.message}`)},{frequency:hr})),k(t,hr)}),_p=ke(Nb,(e,{resolve:t})=>{Pc&&(l.accelerometer.clearWatch(Pc),Pc=null),t()}),qS=Jn(kh,Tc(()=>l.bluetooth.onBluetoothDeviceFound.bind(l.bluetooth),kh)),KS=Jn(Rh,Tc(()=>l.bluetooth.onBluetoothAdapterStateChange.bind(l.bluetooth),Rh)),JS=Jn(xh,Tc(()=>l.bluetooth.onBLEConnectionStateChange.bind(l.bluetooth),xh)),ZS=Jn(Bh,Tc(()=>l.bluetooth.onBLECharacteristicValueChange.bind(l.bluetooth),Bh)),XS=ke("openBluetoothAdapter",Bi(()=>l.bluetooth.openBluetoothAdapter.bind(l.bluetooth))),QS=ke("closeBluetoothAdapter",Bi(()=>l.bluetooth.closeBluetoothAdapter.bind(l.bluetooth))),eC=ke("getBluetoothAdapterState",Bi(()=>l.bluetooth.getBluetoothAdapterState.bind(l.bluetooth))),tC=ke(Db,Bi(()=>l.bluetooth.startBluetoothDevicesDiscovery.bind(l.bluetooth)),Lb),nC=ke("stopBluetoothDevicesDiscovery",Bi(()=>l.bluetooth.stopBluetoothDevicesDiscovery.bind(l.bluetooth))),rC=ke("getBluetoothDevices",Bi(()=>l.bluetooth.getBluetoothDevices.bind(l.bluetooth))),iC=ke(Fb,Bi(()=>l.bluetooth.getConnectedBluetoothDevices.bind(l.bluetooth)),Vb),oC=ke(Ub,Bi(()=>l.bluetooth.createBLEConnection.bind(l.bluetooth)),$b),aC=ke(Hb,Bi(()=>l.bluetooth.closeBLEConnection.bind(l.bluetooth)),jb),sC=ke(zb,Bi(()=>l.bluetooth.getBLEDeviceServices.bind(l.bluetooth)),Wb),lC=ke(Gb,Bi(()=>l.bluetooth.getBLEDeviceCharacteristics.bind(l.bluetooth)),Yb),cC=ke(qb,Bi(()=>l.bluetooth.notifyBLECharacteristicValueChange.bind(l.bluetooth)),Kb),uC=ke(Jb,Bi(()=>l.bluetooth.readBLECharacteristicValue.bind(l.bluetooth)),Zb),fC=ke(Xb,Bi(()=>l.bluetooth.writeBLECharacteristicValue.bind(l.bluetooth)),Qb),dC=ke(ey,Bi(()=>l.bluetooth.setBLEMTU.bind(l.bluetooth)),ty),hC=ke(ny,Bi(()=>l.bluetooth.getBLEDeviceRSSI.bind(l.bluetooth)),ry),pC=Jn(Mh,Tc(()=>l.ibeacon.onBeaconUpdate.bind(l.ibeacon),Mh)),gC=Jn(Dh,Tc(()=>l.ibeacon.onBeaconServiceChange.bind(l.ibeacon),Dh)),vC=ke(iy,Bi(()=>l.ibeacon.getBeacons.bind(l.ibeacon))),mC=ke(oy,Bi(()=>l.ibeacon.startBeaconDiscovery.bind(l.ibeacon)),ay),_C=ke(sy,Bi(()=>l.ibeacon.stopBeaconDiscovery.bind(l.ibeacon))),bC=ke(bb,({phoneNumber:e},{resolve:t})=>(l.device.dial(e),t()),yb),yC={name:{givenName:"firstName",middleName:"middleName",familyName:"lastName"},nickname:"nickName",photos:{type:"url",value:"photoFilePath"},note:"remark",phoneNumbers:[{type:"mobile",value:"mobilePhoneNumber"},{type:"work",value:"workPhoneNumber"},{type:"company",value:"hostNumber"},{type:"home fax",value:"homeFaxNumber"},{type:"work fax",value:"workFaxNumber"}],emails:[{type:"home",value:"email"}],urls:[{type:"other",value:"url"}],organizations:[{type:"company",name:"organization",title:"title"}],ims:[{type:"other",value:"weChatNumber"}],addresses:[{type:"other",preferred:!0,country:"addressCountry",region:"addressState",locality:"addressCity",streetAddress:"addressStreet",postalCode:"addressPostalCode"},{type:"home",country:"homeAddressCountry",region:"homeAddressState",locality:"homeAddressCity",streetAddress:"homeAddressStreet",postalCode:"homeAddressPostalCode"},{type:"company",country:"workAddressCountry",region:"workAddressState",locality:"workAddressCity",streetAddress:"workAddressStreet",postalCode:"workAddressPostalCode"}]},EC=["type","preferred"];function Wf(e,t,n){let r=0;return Object.keys(n).forEach(s=>{let u=n[s];typeof u!=="object"?EC.indexOf(s)!==-1?e[s]=n[s]:typeof t[u]!="undefined"?(r++,e[s]=t[u]):delete e[s]:u instanceof Array?(e[s]=[],u.forEach(E=>{let U={};Wf(U,t,E)&&e[s].push(U)}),e[s].length?r++:delete e[s]):(e[s]={},Wf(e[s],t,u)?r++:delete e[s])}),r}let wC=ke(Eb,(e,{resolve:t,reject:n})=>{!e.photoFilePath&&(e.photoFilePath=""),l.contacts.getAddressBook(l.contacts.ADDRESSBOOK_PHONE,r=>{let s=r.create();Wf(s,e,yC),s.save(()=>t(),u=>n())},r=>n())},Sb,wb);function Oa(e){return typeof v!="undefined"?v.requireModule(e):__requireNativePlugin__(e)}function bp(e,t,n){return Oa("plus").sendNativeEvent(e,t,n)}let SC=ke(Cb,(e,{resolve:t,reject:n})=>{Oa("clipboard").getString(s=>{s.result==="success"?t({data:s.data}):n("getClipboardData:fail")})}),CC=ke(Ob,(e,{resolve:t})=>{Oa("clipboard").setString(e.data),t()},Tb,Ab),yp="onNetworkStatusChange";function Ep(){wp().then(({networkType:e})=>{_t.invokeOnCallback(yp,{isConnected:e!=="none",networkType:e})})}let OC=Jn(yp,()=>{l.globalEvent.addEventListener("netchange",Ep)}),AC=Jr("offNetworkStatusChange",()=>{l.globalEvent.removeEventListener("netchange",Ep)}),wp=ke("getNetworkType",(e,{resolve:t})=>{let n=Ar[l.networkinfo.getCurrentType()]||"unknown";return t({networkType:n})});function Sp(){if(l.os.name.toLowerCase()!=="ios")return!1;let t=Oa("faceID");return!!(t&&t.isSupport())}function Cp(){return!!(l.fingerprint&&l.fingerprint.isSupport())}let Op=e=>{let t=[];return Cp()&&t.push("fingerPrint"),Sp()&&t.push("facial"),e&&e({supportMode:t}),{supportMode:t,errMsg:"checkIsSupportSoterAuthentication:ok"}},TC=ke(fy,(e,{resolve:t,reject:n})=>{Op(t)}),Ap=({checkAuthMode:e,resolve:t,reject:n})=>{let r=(u,g)=>n&&n(u,g),s=u=>t&&t(u);if(e==="fingerPrint"){if(Cp()){let u=l.fingerprint.isKeyguardSecure()&&l.fingerprint.isEnrolledFingerprints();return s({isEnrolled:u}),{isEnrolled:u,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}else if(e==="facial"){if(Sp()){let u=Oa("faceID"),g=u&&u.isKeyguardSecure()&&u.isEnrolledFaceID();return s({isEnrolled:g}),{isEnrolled:g,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}},IC=ke(dy,({checkAuthMode:e},{resolve:t,reject:n})=>{Ap({checkAuthMode:e,resolve:t,reject:n})},gy,py),PC=ke(vy,({requestAuthModes:e,challenge:t=!1,authContent:n},{resolve:r,reject:s})=>{Xn();let{t:u}=le(),{supportMode:g}=Op();if(!g.length)return s("not support",{authMode:"fingerPrint",errCode:90001});let E=[];if(e.forEach(ht=>{g.indexOf(ht)>-1&&E.push(ht)}),!E.length)return s("startSoterAuthentication:fail no corresponding mode",{authMode:"fingerPrint",errCode:90003});let U=[];if(E.forEach(ht=>{Ap({checkAuthMode:ht}).isEnrolled&&U.push(ht)}),!U.length)return s(`startSoterAuthentication:fail no ${E[0]} enrolled`,{authMode:E[0],errCode:90011});let P=U[0],L=null,Oe,Pe=n||u("uni.startSoterAuthentication.authContent"),Re=ht=>{let{code:pt}=ht,kt={authMode:P},Rt={4:()=>{L?(C(Oe),L.setTitle("\u65E0\u6CD5\u8BC6\u522B"),Oe=k(()=>{L&&L.setTitle(Pe)},1e3)):s("",K.extend(kt,{errCode:90009}))},5:()=>{l.nativeUI.closeWaiting(),s("authenticate freeze. please try again later",K.extend(kt,{errCode:90010}))},6:()=>{l.nativeUI.closeWaiting(),s("cancel",K.extend(kt,{errCode:90008}))}};pt&&Rt[pt]?Rt[pt]():(l.nativeUI.closeWaiting(),s("",K.extend(kt,{errCode:90007})))};P==="fingerPrint"?(l.os.name.toLowerCase()==="android"&&(L=l.nativeUI.showWaiting(Pe),L.onclose=function(){l.fingerprint.cancel()}),l.fingerprint.authenticate(()=>{l.nativeUI.closeWaiting(),r({authMode:P,errCode:0})},Re,{message:Pe})):P==="facial"&&Oa("faceID").authenticate({message:Pe},pt=>{pt.type==="success"&&pt.code===0?r({authMode:P,errCode:0}):Re(pt)})},_y,my),NC=ke(by,(e,{resolve:t,reject:n})=>{An();let{t:r}=le(),u=up()!=="light",g,E=!1,U=$s({url:"__uniappscan",data:Object.assign({},e,{messages:{fail:r("uni.scanCode.fail"),"flash.on":r("uni.scanCode.flash.on"),"flash.off":r("uni.scanCode.flash.off")}}),style:{animationType:e.animationType||"pop-in",titleNView:{autoBackButton:!0,type:"float",titleText:e.titleText||r("uni.scanCode.title"),titleColor:"#ffffff",backgroundColor:"rgba(0,0,0,0)",buttons:e.onlyFromCamera?[]:[{text:e.albumText||r("uni.scanCode.album"),fontSize:"17px",width:"60px",onclick:()=>{U.sendMessage({type:"gallery"})}}]},popGesture:"close",background:"#000000",backButtonAutoControl:"close"},onMessage({event:P,detail:L}){g=L,E=P==="marked"},onClose(){u&&l.navigator.setStatusBarStyle("dark"),g?E?(delete g.message,t(g)):n(g.message):n("cancel")}});u&&(l.navigator.setStatusBarStyle("light"),U.webview.addEventListener("popGesture",({type:P,result:L})=>{P==="start"?l.navigator.setStatusBarStyle("dark"):P==="end"&&!L&&l.navigator.setStatusBarStyle("light")}))},yy,wy),Tp=e=>{_t.invokeOnCallback(re.ON_THEME_CHANGE,e)},kC=Jn(re.ON_THEME_CHANGE,()=>{_t.on(re.ON_THEME_CHANGE,Tp)}),RC=Jr(re.OFF_THEME_CHANGE,()=>{_t.off(re.ON_THEME_CHANGE,Tp)}),xC=ke(ly,(e,{resolve:t})=>{let n=l.screen.getBrightness(!1);t({value:n})}),BC=ke(cy,(e,{resolve:t})=>{l.screen.setBrightness(e.value,!1),t()}),MC=ke(uy,(e,{resolve:t})=>{l.device.setWakelock(!!e.keepScreenOn),t()}),DC=Dt(Sy,()=>{let{getSystemSetting:e}=v.requireModule("plus"),t=e();try{typeof t=="string"&&(t=JSON.parse(t))}catch(n){}return t}),Ip=Dt(Cy,()=>{let{getAppAuthorizeSetting:e}=v.requireModule("plus"),t=e();try{typeof t=="string"&&(t=JSON.parse(t))}catch(n){}for(let n in t)K.hasOwn(t,n)&&t[n]==="undefined"&&(t[n]=void 0);return t}),LC=ke(Oy,(e,{resolve:t,reject:n})=>{let{openAppAuthorizeSetting:r}=v.requireModule("plus");r(u=>{u.type==="success"?t():n()})}),FC=ke(d0,(e,{resolve:t,reject:n})=>{let r=ni+"/download/";l.io.getImageInfo(K.extend(e,{savePath:r,filename:r,success:Gl(t),fail:br(n)}))},p0,h0),VC=ke(b0,(e,{resolve:t,reject:n})=>{l.io.getVideoInfo({filePath:e.src,success:r=>{t({orientation:r.orientation,type:r.type,duration:r.duration,size:r.size,height:r.height,width:r.width,fps:r.fps||30,bitrate:r.bitrate})},fail:br(n)})},E0,y0),UC=ke(g0,({current:e=0,indicator:t="number",loop:n=!1,urls:r,longPressActions:s},{resolve:u,reject:g})=>{lt();let{t:E}=le();r=r.map(P=>Je(P));let U=Number(e);isNaN(U)?(e=r.indexOf(Je(e)),e=e<0?0:e):e=U,l.nativeUI.previewImage(r,{current:e,indicator:t,loop:n,onLongPress:function(P){let L=[],Oe="",Pe=s&&K.isPlainObject(s);Pe?(L=s.itemList?s.itemList:[],Oe=s.itemColor?s.itemColor:"#000000"):(L=[E("uni.previewImage.button.save")],Oe="#000000");let Re={buttons:L.map(ht=>({title:ht,color:Oe})),cancel:E("uni.previewImage.cancel")};l.nativeUI.actionSheet(Re,ht=>{if(ht.index>0){if(Pe){K.isFunction(s.success)&&s.success({tapIndex:ht.index-1,index:P.index});return}l.gallery.save(P.url,()=>{l.nativeUI.toast(E("uni.previewImage.save.success"))},function(){l.nativeUI.toast(E("uni.previewImage.save.fail"))})}else Pe&&K.isFunction(s.fail)&&s.fail({errMsg:"showActionSheet:fail cancel"})})}}),u()},m0,v0),$C=ke(_0,(e,{resolve:t,reject:n})=>{try{l.nativeUI.closePreviewImage(),t()}catch(r){n()}}),Gf,Nc=!1,Yf,kc=(e,t={})=>{HC(K.extend({state:e},t))},pu={start({duration:e=6e4,sampleRate:t,numberOfChannels:n,encodeBitRate:r,format:s="mp3",frameSize:u}={}){if(Nc)return kc("start");Gf=l.audio.getRecorder(),Gf.record({format:s,samplerate:t?String(t):void 0,filename:ni+"/recorder/"},g=>kc("stop",{tempFilePath:g}),g=>kc("error",{errMsg:g.message})),Yf=k(()=>{pu.stop()},e),kc("start"),Nc=!0},stop(){Nc&&(Gf.stop(),Nc=!1,Yf&&C(Yf))},pause(){Nc&&kc("error",{errMsg:"Unsupported operation: pause"})},resume(){Nc&&kc("error",{errMsg:"Unsupported operation: resume"})}},Yl={pause:null,resume:null,start:null,stop:null,error:null};function HC(e){let t=e.state;delete e.state,delete e.errMsg,t&&K.isFunction(Yl[t])&&Yl[t](e)}class jC{constructor(){}onError(t){Yl.error=t}onFrameRecorded(t){}onInterruptionBegin(t){}onInterruptionEnd(t){}onPause(t){Yl.pause=t}onResume(t){Yl.resume=t}onStart(t){Yl.start=t}onStop(t){Yl.stop=t}pause(){pu.pause()}resume(){pu.resume()}start(t={}){pu.start(t)}stop(){pu.stop()}}let Pp,zC=Dt(I0,()=>Pp||(Pp=new jC)),WC=ke(O0,(e,{resolve:t,reject:n})=>{l.gallery.save(e.filePath,Gl(t),br(n))},T0,A0),GC=ke(w0,(e,{resolve:t,reject:n})=>{l.gallery.save(e.filePath,Gl(t),br(n))},C0,S0),YC=ke(P0,(e,{resolve:t,reject:n})=>{let r=`${ni}/compressed/${Date.now()}_${Vo(e.src)}`,{compressedWidth:s,compressedHeight:u}=e;typeof s=="number"&&(e.width=s+"px"),typeof u=="number"&&(e.height=u+"px"),l.zip.compressImage(K.extend({},e,{dst:r}),()=>{t({tempFilePath:r})},n)},k0,N0),qC=ke(R0,(e,{resolve:t,reject:n})=>{let r=`${ni}/compressed/${Date.now()}_${Vo(e.src)}`;l.zip.compressVideo(K.extend({},e,{filename:r}),s=>{t({tempFilePath:r,size:s.size})},n)},B0,x0);function KC(e){return new Promise((t,n)=>{l.io.resolveLocalFileSystemURL(e,function(r){r.getMetadata(t,n,!1)},n)})}let JC=ke(a0,({count:e,sizeType:t,sourceType:n,crop:r}={},{resolve:s,reject:u})=>{ce();let{t:g}=le(),E=br(u);function U(Oe){let Pe=[],Re=[];Promise.all(Oe.map(ht=>KC(ht))).then(ht=>{ht.forEach((pt,kt)=>{let Rt=Oe[kt];Re.push(Rt),Pe.push({path:Rt,size:pt.size})}),s({tempFilePaths:Re,tempFiles:Pe})}).catch(E)}function P(){l.camera.getCamera().captureImage(Pe=>U([Pe]),E,{filename:ni+"/camera/",resolution:"high",crop:r,sizeType:t})}function L(){l.gallery.pick(({files:Oe})=>U(Oe),E,{maximum:e,multiple:!0,system:!1,filename:ni+"/gallery/",permissionAlert:!0,crop:r,sizeType:t})}if(n.length===1){if(n.includes("album")){L();return}else if(n.includes("camera")){P();return}}l.nativeUI.actionSheet({cancel:g("uni.chooseImage.cancel"),buttons:[{title:g("uni.chooseImage.sourceType.camera")},{title:g("uni.chooseImage.sourceType.album")}]},Oe=>{switch(Oe.index){case 1:P();break;case 2:L();break;default:E();break}})},l0,s0),ZC=ke(c0,({sourceType:e,compressed:t,maxDuration:n,camera:r},{resolve:s,reject:u})=>{xe();let{t:g}=le(),E=br(u);function U(Oe){l.io.getVideoInfo({filePath:Oe,success(Pe){let Re={errMsg:"chooseVideo:ok",tempFilePath:Oe,size:Pe.size,duration:Pe.duration,width:Pe.width,height:Pe.height};s(Re)},fail:E})}function P(){l.gallery.pick(({files:Oe})=>U(Oe[0]),E,{filter:"video",system:!1,multiple:!0,maximum:1,filename:ni+"/gallery/",permissionAlert:!0,videoCompress:t})}function L(){l.camera.getCamera().startVideoCapture(U,E,{index:r==="front"?"2":"1",videoMaximumDuration:n,filename:ni+"/camera/",videoCompress:t})}if(e.length===1){if(e.includes("album")){P();return}else if(e.includes("camera")){L();return}}l.nativeUI.actionSheet({cancel:g("uni.chooseVideo.cancel"),buttons:[{title:g("uni.chooseVideo.sourceType.camera")},{title:g("uni.chooseVideo.sourceType.album")}]},Oe=>{switch(Oe.index){case 1:L();break;case 2:P();break;default:E();break}})},f0,u0),XC=ke(Zy,(e,{resolve:t})=>{l.key.showSoftKeybord(),t()}),QC=ke(Jy,(e,{resolve:t})=>{l.key.hideSoftKeybord(),t()});function Np(e){_t.invokeOnCallback(re.ON_KEYBOARD_HEIGHT_CHANGE,e)}let eO=Jn(re.ON_KEYBOARD_HEIGHT_CHANGE,()=>{_t.on(re.ON_KEYBOARD_HEIGHT_CHANGE,Np)}),tO=Jr(re.ON_KEYBOARD_HEIGHT_CHANGE,()=>{_t.off(re.ON_KEYBOARD_HEIGHT_CHANGE,Np)});class nO{constructor(t){this._callbacks=[],this._downloader=t,t.addEventListener("statechanged",(n,r)=>{n.downloadedSize&&n.totalSize&&this._callbacks.forEach(s=>{s({progress:Math.round(n.downloadedSize/n.totalSize*100),totalBytesWritten:n.downloadedSize,totalBytesExpectedToWrite:n.totalSize})})})}abort(){this._downloader.abort()}onProgressUpdate(t){!K.isFunction(t)||this._callbacks.push(t)}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}onHeadersReceived(t){throw new Error("Method not implemented.")}offHeadersReceived(t){throw new Error("Method not implemented.")}}let rO=ur(W0,({url:e,header:t,timeout:n},{resolve:r,reject:s})=>{n=(n||R.networkTimeout&&R.networkTimeout.request||60*1e3)/1e3;let u=l.downloader.createDownload(e,{timeout:n,filename:ni+"/download/",retry:0,retryInterval:0},(E,U)=>{U?r({tempFilePath:E.filename,statusCode:U}):s(`statusCode: ${U}`)}),g=new nO(u);for(let E in t)K.hasOwn(t,E)&&u.setRequestHeader(E,t[E]);return u.start(),g},Y0,G0),iO=e=>{let t=e["Set-Cookie"]||e["set-cookie"],n=[];if(!t)return[];t[0]==="["&&t[t.length-1]==="]"&&(t=t.slice(1,-1));let r=t.split(";");for(let s=0;s<r.length;s++)r[s].indexOf("Expires=")!==-1||r[s].indexOf("expires=")!==-1?n.push(r[s].replace(",","")):n.push(r[s]);return n=n.join(";").split(","),n};function oO(e,t){if(K.isString(e.data)&&e.data.charCodeAt(0)===65279&&(e.data=e.data.slice(1)),e.statusCode=parseInt(String(e.statusCode),10),K.isPlainObject(e.header)&&(e.header=Object.keys(e.header).reduce(function(n,r){let s=e.header[r];return K.isArray(s)?n[r]=s.join(","):K.isString(s)&&(n[r]=s),n},{})),t.dataType&&t.dataType.toLowerCase()==="json")try{e.data=JSON.parse(e.data)}catch(n){}return e}class aO{constructor(t){this._requestTask=t}abort(){this._requestTask.abort()}offHeadersReceived(){}onHeadersReceived(){}}let sO=ur(M0,(e,{resolve:t,reject:n})=>{let{header:r,method:s,data:u,timeout:g,url:E,responseType:U,sslVerify:P,firstIpv4:L,tls:Oe}=e,Pe;for(let wt in r)if(wt.toLowerCase()==="content-type"){Pe=r[wt];break}s!=="GET"&&Pe.indexOf("application/json")===0&&K.isPlainObject(u)&&(u=JSON.stringify(u));let Re=Oa("stream"),ht={},pt,kt,Rt=!1;for(let wt in r)if(!Rt&&wt.toLowerCase()==="content-type"){if(Rt=!0,ht["Content-Type"]=r[wt],s!=="GET"&&r[wt].indexOf("application/x-www-form-urlencoded")===0&&!K.isString(u)&&!(u instanceof ArrayBuffer)){let vn=[];for(let on in u)K.hasOwn(u,on)&&vn.push(encodeURIComponent(on)+"="+encodeURIComponent(u[on]));u=vn.join("&")}}else ht[wt]=r[wt];!Rt&&s==="POST"&&(ht["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"),g&&(pt=k(()=>{kt=!0,n("timeout")},g+200));let dn={method:s,url:E.trim(),headers:ht,type:U==="arraybuffer"?"base64":"text",timeout:g||6e5,sslVerify:!P,firstIpv4:L,tls:Oe},ln=!1;s!=="GET"&&(toString.call(u)==="[object ArrayBuffer]"?ln=!0:dn.body=K.isString(u)?u:JSON.stringify(u));let jt=({ok:wt,status:vn,data:on,headers:Xt,errorMsg:In})=>{if(kt)return;pt&&C(pt);let yr=vn;if(yr>0)t(oO({data:wt&&U==="arraybuffer"?Xo(on):on,statusCode:yr,header:Xt,cookies:iO(Xt)},e));else{let Qt="abort statusCode:"+yr;In&&(Qt=Qt+" "+In),n(Qt)}};return ln?Re.fetchWithArrayBuffer({"@type":"binary",base64:Hi(u)},dn,jt):Re.fetch(dn,jt),new aO({abort(){kt=!0,pt&&C(pt),n("abort")}})},U0,$0),lO=ke(H0,({certificates:e},{resolve:t,reject:n})=>{Oa("stream").configMTLS(e,({type:s,code:u,message:g})=>{switch(s){case"success":t({code:u});break;case"fail":n(g,{code:u});break}})},j0,z0),Rc=[],xc={},qf={open:"",close:"",error:"",message:""},gu;function cO(e){let t=String(Date.now()),n;try{gu||(gu=Oa("uni-webSocket"),uO(gu)),gu.WebSocket({id:t,url:e.url,protocol:K.isArray(e.protocols)?e.protocols.join(","):e.protocols,header:e.header})}catch(r){n=r}return{socket:gu,socketId:t,errMsg:n}}function uO(e){e.onopen(t=>{let n=xc[t.id];!n||n._socketOnOpen()}),e.onmessage(t=>{let n=xc[t.id];!n||n._socketOnMessage(t)}),e.onerror(t=>{let n=xc[t.id];!n||n._socketOnError()}),e.onclose(t=>{let{id:n,code:r,reason:s}=t,u=xc[n];!u||u._socketOnClose({code:r,reason:s})})}class fO{constructor(t,n){this.id=n,this._socket=t,this._callbacks={open:[],close:[],error:[],message:[]},this.CLOSED=3,this.CLOSING=2,this.CONNECTING=0,this.OPEN=1,this.readyState=this.CLOSED,!!this._socket}_socketOnOpen(){this.readyState=this.OPEN,this.socketStateChange("open")}_socketOnMessage(t){this.socketStateChange("message",{data:typeof t.data=="object"?Xo(t.data.base64):t.data})}_socketOnError(){this.socketStateChange("error"),this.onErrorOrClose()}_socketOnClose(t){this.socketStateChange("close",t),this.onErrorOrClose()}onErrorOrClose(){this.readyState=this.CLOSED,delete xc[this.id];let t=Rc.indexOf(this);t>=0&&Rc.splice(t,1)}socketStateChange(t,n={}){let{code:r,reason:s}=n,u=t==="message"?{data:n.data}:t==="close"?{code:r,reason:s}:{};this===Rc[0]&&qf[t]&&_t.invokeOnCallback(qf[t],u),this._callbacks[t].forEach(g=>{K.isFunction(g)&&g(u)})}send(t,n=!0){this.readyState!==this.OPEN&&re.callOptions(t,"sendSocketMessage:fail WebSocket is not connected");try{this._socket.send({id:this.id,data:typeof t.data=="object"?{"@type":"binary",base64:Hi(t.data)}:t.data}),n&&re.callOptions(t,"sendSocketMessage:ok")}catch(r){n&&re.callOptions(t,`sendSocketMessage:fail ${r}`)}}close(t,n=!0){this.readyState=this.CLOSING;try{this._socket.close(K.extend({id:this.id,args:t})),n&&re.callOptions(t,"closeSocket:ok")}catch(r){n&&re.callOptions(t,`closeSocket:fail ${r}`)}}onOpen(t){this._callbacks.open.push(t)}onClose(t){this._callbacks.close.push(t)}onError(t){this._callbacks.error.push(t)}onMessage(t){this._callbacks.message.push(t)}}let dO=ur(Z0,({url:e,protocols:t,header:n,method:r},{resolve:s,reject:u})=>{let{socket:g,socketId:E,errMsg:U}=cO({url:e,protocols:t,header:n,method:r}),P=new fO(g,E);return U?k(()=>{u(U)},0):(Rc.push(P),xc[E]=P),k(()=>{s()},0),P},Q0,X0),hO=ke(eE,(e,{resolve:t,reject:n})=>{let r=Rc[0];if(!r||r.readyState!==r.OPEN){n("WebSocket is not connected");return}r.send({data:e.data},!1),t()},tE),pO=ke(nE,(e,{resolve:t,reject:n})=>{let r=Rc[0];if(!r){n("WebSocket is not connected");return}r.readyState=r.CLOSING,r.close(e,!1),t()},rE);function Fu(e){let t=`onSocket${K.capitalize(e)}`;return Jn(t,()=>{qf[e]=t})}let gO=Fu("open"),vO=Fu("error"),mO=Fu("message"),_O=Fu("close");class bO{constructor(t){this._callbacks=[],this._uploader=t,t.addEventListener("statechanged",(n,r)=>{n.uploadedSize&&n.totalSize&&this._callbacks.forEach(s=>{s({progress:parseInt(String(n.uploadedSize/n.totalSize*100)),totalBytesSent:n.uploadedSize,totalBytesExpectedToSend:n.totalSize})})})}abort(){this._uploader.abort()}onProgressUpdate(t){!K.isFunction(t)||this._callbacks.push(t)}onHeadersReceived(){}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}offHeadersReceived(){}}let yO=ur(q0,({url:e,timeout:t,header:n,formData:r,files:s,filePath:u,name:g},{resolve:E,reject:U})=>{t=(t||R.networkTimeout&&R.networkTimeout.uploadFile||60*1e3)/1e3;let P=l.uploader.createUpload(e,{timeout:t,retry:0,retryInterval:0},(Oe,Pe)=>{Pe?E({data:Oe.responseText,statusCode:Pe}):U(`statusCode: ${Pe}`)});for(let Oe in n)K.hasOwn(n,Oe)&&P.setRequestHeader(Oe,String(n[Oe]));for(let Oe in r)K.hasOwn(r,Oe)&&P.addData(Oe,String(r[Oe]));s&&s.length?s.forEach(Oe=>{P.addFile(Je(Oe.uri),{key:Oe.name||"file"})}):P.addFile(Je(u),{key:g});let L=new bO(P);return P.start(),L},J0,K0),Ol={},EO=["play","canplay","ended","stop","waiting","seeking","seeked","pause"],kp="playback",wO=200,SO=e=>{let t=Ol[e];!t||t.initStateChage||(t.initStateChage=!0,t.addEventListener("error",n=>{Rp({state:"error",audioId:e,errMsg:"MediaError",errCode:n.code})}),EO.forEach(n=>{t.addEventListener(n,()=>{n==="play"?t.isStopped=!1:n==="stop"&&(t.isStopped=!0),Rp({state:n,audioId:e})})}))};function CO(){let e=`${Date.now()}${Math.random()}`,t=Ol[e]=l.audio.createPlayer("");return t.src="",t.volume=1,t.startTime=0,t.setSessionCategory(kp),{errMsg:"createAudioInstance:ok",audioId:e}}function OO({audioId:e,src:t,startTime:n,autoplay:r=!1,loop:s=!1,obeyMuteSwitch:u,volume:g,sessionCategory:E=kp,playbackRate:U}){let P=Ol[e];if(P){let L={loop:s,autoplay:r};if(t){let Oe=Je(t);P.src!==Oe&&(P.src=L.src=Oe)}n&&(P.startTime=L.startTime=n),typeof g=="number"&&(P.volume=L.volume=g),P.setStyles(L),E&&P.setSessionCategory(E),U&&P.playbackRate&&P.playbackRate(U),SO(e)}return{errMsg:"setAudioState:ok"}}function AO({audioId:e}){let t=Ol[e];if(!t)return{errMsg:"getAudioState:fail"};let{src:n,startTime:r,volume:s}=t;return{errMsg:"getAudioState:ok",duration:1e3*(t.getDuration()||0),currentTime:t.isStopped?0:1e3*t.getPosition(),paused:t.isPaused(),src:n,volume:s,startTime:1e3*r,buffered:1e3*t.getBuffered()}}function TO({operationType:e,audioId:t,currentTime:n}){let r=Ol[t];switch(e){case"play":case"pause":case"stop":r[e==="play"&&r.isPaused()?"resume":e]();break;case"seek":typeof n!="undefined"&&r.seekTo(n/1e3);break}return{errMsg:"operateAudio:ok"}}let Kf=Object.create(null),Rp=({state:e,audioId:t,errMsg:n,errCode:r})=>{let s=Kf[t];if(s)if(Zf(s,e,n,r),e==="play"){let u=s.currentTime;Zf(s,"timeUpdate"),s.__timing=d(()=>{s.currentTime!==u&&Zf(s,"timeUpdate")},wO)}else(e==="pause"||e==="stop"||e==="error")&&m(s.__timing)},IO=[{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"autoplay",default:!1,cache:!0},{name:"loop",default:!1,cache:!0},{name:"obeyMuteSwitch",default:!0,readonly:!0,cache:!0},{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"buffered",readonly:!0},{name:"volume"},{name:"playbackRate",cache:!0}];class Jf{constructor(t){this.id=t,this._callbacks={},this._options={},gh.forEach(n=>{this._callbacks[n]=[]}),IO.forEach(n=>{let r=n.name;Object.defineProperty(this,r,{get:()=>{let s=n.cache?this._options:AO({audioId:this.id}),u=r in s?s[r]:n.default;return typeof u=="number"&&r!=="volume"?u/1e3:u},set:n.readonly?void 0:s=>{this._options[r]=s,OO(K.extend({},this._options,{audioId:this.id}))}})}),PO()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t*1e3})}destroy(){m(this.__timing),Ol[this.id]&&(Ol[this.id].close(),delete Ol[this.id]),delete Kf[this.id]}_operate(t,n){TO(K.extend({},n,{audioId:this.id,operationType:t}))}}let PO=re.once(()=>{gh.forEach(e=>{Jf.prototype[e]=function(t){K.isFunction(t)&&this._callbacks[e].push(t)}}),O_.forEach(e=>{Jf.prototype[e]=function(t){let n=this._callbacks[e],r=n.indexOf(t);r>=0&&n.splice(r,1)}})});function Zf(e,t,n,r){let s=`on${K.capitalize(t)}`;e._callbacks[s].forEach(u=>{K.isFunction(u)&&u(t==="error"?{errMsg:n,errCode:r}:{})})}let NO=Dt(e_,()=>{let{audioId:e}=CO(),t=new Jf(e);return Kf[e]=t,t}),kO=["canplay","play","pause","stop","ended","timeUpdate","prev","next","error","waiting"],xp={canplay:[],play:[],pause:[],stop:[],ended:[],timeUpdate:[],prev:[],next:[],error:[],waiting:[]},rn,Xf=null,RO=250,xO=["play","pause","ended","stop","canplay"];function BO(){Vu(),ql({state:"timeUpdate"}),Xf=d(()=>{ql({state:"timeUpdate"})},RO)}function Vu(){Xf!==null&&m(Xf)}function MO(){if(rn)return;let e=_t.invokeOnCallback;rn=l.audio.createPlayer({autoplay:!0,backgroundControl:!0}),rn.src=rn.title=rn.epname=rn.singer=rn.coverImgUrl=rn.webUrl="",rn.startTime=0,xO.forEach(t=>{rn.addEventListener(t,()=>{t==="play"?(rn.isStopped=!1,BO()):t==="stop"&&(rn.isStopped=!0),(t==="pause"||t==="ended"||t==="stop")&&Vu();let n=`onMusic${t[0].toUpperCase()+t.slice(1)}`;e(n,{dataUrl:rn.src,errMsg:`${n}:ok`}),ql({state:t,dataUrl:rn.src})})}),rn.addEventListener("waiting",()=>{Vu(),ql({state:"waiting",dataUrl:rn.src})}),rn.addEventListener("error",t=>{Vu(),e("onMusicError",{dataUrl:rn.src,errMsg:"Error:"+t.message}),ql({state:"error",dataUrl:rn.src,errMsg:t.message,errCode:t.code})}),rn.addEventListener("prev",()=>{ql({state:"prev"})}),rn.addEventListener("next",()=>{ql({state:"next"})})}function DO(){let e={duration:0,currentTime:0,paused:!1,src:"",buffered:0,title:"",epname:"",singer:"",coverImgUrl:"",webUrl:"",startTime:0,errMsg:"getBackgroundAudioState:ok"};if(rn){let t={duration:rn.getDuration()||0,currentTime:rn.isStopped?0:rn.getPosition(),paused:rn.isPaused(),src:rn.src,buffered:rn.getBuffered(),title:rn.title,epname:rn.epname,singer:rn.singer,coverImgUrl:rn.coverImgUrl,webUrl:rn.webUrl,startTime:rn.startTime};e=K.extend(e,t)}return e}function Bp(e,t){MO();let n=["src","startTime","coverImgUrl","webUrl","singer","epname","title"];if(t==="playbackRate"){let s=e[t];rn.playbackRate&&rn.playbackRate(parseFloat(s));return}let r={};Object.keys(e).forEach(s=>{if(n.indexOf(s)>=0){let u=e[s];s===n[0]&&u&&(u=Je(u)),rn[s]=r[s]=u}}),rn.setStyles(r)}function LO({operationType:e,src:t,position:n,api:r="operateMusicPlayer",title:s,coverImgUrl:u}){var g=["resume","pause","stop"];return g.indexOf(e)>0?rn&&rn[e]():e==="play"?(Bp({src:t,startTime:n,title:s,coverImgUrl:u}),rn.play()):e==="seek"&&rn&&rn.seekTo(n),{errMsg:`${r}:ok`}}function FO({operationType:e,src:t,startTime:n,currentTime:r}){return LO({operationType:e,src:t,position:n||r||0,api:"operateBackgroundAudio"})}function ql({state:e,errMsg:t,errCode:n,dataUrl:r}){xp[e].forEach(s=>{K.isFunction(s)&&s(e==="error"?{errMsg:t,errCode:n}:{})})}let VO=re.once(()=>{kO.forEach(e=>{Mp.prototype[`on${K.capitalize(e)}`]=function(t){xp[e].push(t)}})}),UO=[{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"buffered",readonly:!0},{name:"title",cache:!0},{name:"epname",cache:!0},{name:"singer",cache:!0},{name:"coverImgUrl",cache:!0},{name:"webUrl",cache:!0},{name:"protocol",readonly:!0,default:"http"},{name:"playbackRate",default:1,cache:!0}];class Mp{constructor(){this._options={},UO.forEach(t=>{let n=t.name;Object.defineProperty(this,n,{get:()=>{let r=t.cache?this._options:DO();return n in r?r[n]:t.default},set:t.readonly?void 0:r=>{this._options[n]=r,Bp(this._options,n)}})}),VO()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t})}_operate(t,n){FO(K.extend({},n,{operationType:t}))}}let Dp,$O=Dt(_b,()=>Dp||(Dp=new Mp));class HO{constructor(t,n){this.id=t,this.ctx=n}start(t){return Kt(this.ctx,"start",t)}stop(t){return Kt(this.ctx,"stop",t)}pause(t){return Kt(this.ctx,"pause",t)}resume(t){return Kt(this.ctx,"resume",t)}switchCamera(t){return Kt(this.ctx,"switchCamera",t)}snapshot(t){return Kt(this.ctx,"snapshot",t)}toggleTorch(t){return Kt(this.ctx,"toggleTorch",t)}playBGM(t){return Gt(this.ctx,"playBGM",t)}stopBGM(t){return Kt(this.ctx,"stopBGM",t)}pauseBGM(t){return Kt(this.ctx,"pauseBGM",t)}resumeBGM(t){return Kt(this.ctx,"resumeBGM",t)}setBGMVolume(t){return Gt(this.ctx,"setBGMVolume",t)}startPreview(t){return Kt(this.ctx,"startPreview",t)}stopPreview(t){return Kt(this.ctx,"stopPreview",t)}}function Al(e,t,n,r){_t.invokeViewMethod("livepusher."+e,{livePusherId:e,type:n,data:r},t)}class jO{constructor(t,n){this.id=t,this.pageId=n}start(){Al(this.id,this.pageId,"start")}stop(){Al(this.id,this.pageId,"stop")}pause(){Al(this.id,this.pageId,"pause")}resume(){Al(this.id,this.pageId,"resume")}switchCamera(){Al(this.id,this.pageId,"switchCamera")}startPreview(){Al(this.id,this.pageId,"preview")}stopPreview(){Al(this.id,this.pageId,"stop")}snapshot(){Al(this.id,this.pageId,"snapshot")}}let zO=Dt(t_,(e,t)=>{if(t.$page.meta.isNVue){if(!t)return console.warn("uni.createLivePusherContext: 2 arguments required, but only 1 present");let n=Rn(e,t);return n?new HO(e,n):console.warn("Can not find `"+e+"`")}return new jO(e,t.$page.id)},n_),eo=3.141592653589793,Uu=6378245,$u=.006693421622965943;function WO(e,t){if(t=+t,e=+e,Lp(e,t))return[e,t];let n=Fp(e-105,t-35),r=Vp(e-105,t-35),s=t/180*eo,u=Math.sin(s);u=1-$u*u*u;let g=Math.sqrt(u);n=n*180/(Uu*(1-$u)/(u*g)*eo),r=r*180/(Uu/g*Math.cos(s)*eo);let E=t+n,U=e+r;return[e*2-U,t*2-E]}function GO(e,t){if(t=+t,e=+e,Lp(e,t))return[e,t];let n=Fp(e-105,t-35),r=Vp(e-105,t-35),s=t/180*eo,u=Math.sin(s);u=1-$u*u*u;let g=Math.sqrt(u);n=n*180/(Uu*(1-$u)/(u*g)*eo),r=r*180/(Uu/g*Math.cos(s)*eo);let E=t+n;return[e+r,E]}let Lp=function(e,t){return e<72.004||e>137.8347||t<.8293||t>55.8271||!1},Fp=function(e,t){let n=-100+2*e+3*t+.2*t*t+.1*e*t+.2*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*eo)+20*Math.sin(2*e*eo))*2/3,n+=(20*Math.sin(t*eo)+40*Math.sin(t/3*eo))*2/3,n+=(160*Math.sin(t/12*eo)+320*Math.sin(t*eo/30))*2/3,n},Vp=function(e,t){let n=300+e+2*t+.1*e*e+.1*e*t+.1*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*eo)+20*Math.sin(2*e*eo))*2/3,n+=(20*Math.sin(e*eo)+40*Math.sin(e/3*eo))*2/3,n+=(150*Math.sin(e/12*eo)+300*Math.sin(e/30*eo))*2/3,n};function Up(e,t,n){let r=t.coords;if(e!==t.coordsType){let s;e==="wgs84"?s=WO(r.longitude,r.latitude):e==="gcj02"&&(s=GO(r.longitude,r.latitude)),s&&(r.longitude=s[0],r.latitude=s[1])}n({type:e,altitude:r.altitude||0,latitude:r.latitude,longitude:r.longitude,speed:r.speed,accuracy:r.accuracy,address:t.address,errMsg:"getLocation:ok"})}let YO=ke(e0,({type:e="wgs84",geocode:t=!1,altitude:n=!1,highAccuracyExpireTime:r,isHighAccuracy:s=!1},{resolve:u,reject:g})=>{l.geolocation.getCurrentPosition(E=>{Up(e,E,u)},E=>{if(E.code===1501){Up(e,E,u);return}g("getLocation:fail "+E.message)},{geocode:t,enableHighAccuracy:s||n,timeout:r,coordsType:e})},n0,t0),qO=ke(Xy,(e,{resolve:t,reject:n})=>{let s=up()!=="light",u,g=$s({url:"__uniappchooselocation",data:K.extend({},e,{locale:ou()}),style:{animationType:e.animationType||"slide-in-bottom",titleNView:!1,popGesture:"close",scrollIndicator:"none"},onMessage({event:E,detail:U}){E==="selected"&&(u=U)},onClose(){s&&l.navigator.setStatusBarStyle("dark"),u?t(u):n("cancel")}});s&&(l.navigator.setStatusBarStyle("light"),g.webview.addEventListener("popGesture",({type:E,result:U})=>{E==="start"?l.navigator.setStatusBarStyle("dark"):E==="end"&&!U&&l.navigator.setStatusBarStyle("light")}))},Qy),KO=ke(r0,(e,{resolve:t,reject:n})=>($s({url:"__uniappopenlocation",data:K.extend({},e,{locale:ou()}),style:{titleNView:{type:"transparent"},popGesture:"close",backButtonAutoControl:"close"},onClose(){n("cancel")}}),t()),o0,i0),Hu=!1,vu=0,JO=ke(iE,(e,{resolve:t,reject:n})=>{vu=vu||l.geolocation.watchPosition(r=>{Hu=!0,_t.invokeOnCallback(jh,r.coords)},r=>{Hu||(n(r.message),Hu=!0),_t.invokeOnCallback(zh,{errMsg:`onLocationChange:fail ${r.message}`})},{coordsType:e==null?void 0:e.type}),k(t,100)},lE,cE),ZO=ke(oE,(e,{resolve:t})=>{vu&&(l.geolocation.clearWatch(vu),Hu=!1,vu=0),t()}),XO=Jn(jh,()=>{}),QO=Jr(aE,()=>{}),eA=Jn(zh,()=>{}),tA=Jr(sE,()=>{}),nA=ke(YE,({title:e="",content:t="",showCancel:n=!0,cancelText:r,cancelColor:s,confirmText:u,confirmColor:g,editable:E=!1,placeholderText:U=""}={},{resolve:P})=>{let L=n?[r,u]:[u],Oe=E?U:L;t=t||" ",l.nativeUI[E?"prompt":"confirm"](t,Pe=>{if(n){let Re=Pe.index===1,ht={confirm:Re,cancel:Pe.index===0||Pe.index===-1};Re&&E&&(ht.content=Pe.value),P(ht)}else{let Re={confirm:Pe.index===0,cancel:!1};E&&(Re.content=Pe.value),P(Re)}},e,Oe,L)},qE,KE),rA={light:{itemColor:"#000000"},dark:{itemColor:"rgba(255, 255, 255, 0.8)"}},iA=ke($E,({itemList:e=[],itemColor:t,title:n="",popover:r},{resolve:s,reject:u})=>{t==="#000"&&R.darkmode&&(t=rA[l.navigator.getUIStyle()].itemColor),J();let{t:g}=le(),E={title:n,cancel:g("uni.showActionSheet.cancel"),buttons:e.map(U=>({title:U,color:t}))};l.nativeUI.actionSheet(K.extend(E,{popover:r}),U=>{U.index>0?s({tapIndex:U.index-1}):u("showActionSheet:fail cancel")})},HE,jE),mu,Qf=!1,ju="",zu,oA=ke(zE,(e,t)=>$p(K.extend({},e,{type:"loading",icon:"loading"}),t),WE,GE),$p=({title:e="",icon:t="success",image:n="",duration:r=1500,mask:s=!1,position:u,type:g="toast",style:E},{resolve:U,reject:P})=>{if(Wu(""),ju=g,["top","center","bottom"].includes(String(u)))l.nativeUI.toast(e,{verticalAlign:u}),Qf=!0;else{t&&!~["success","loading","error","none"].indexOf(t)&&(t="success");let L={modal:s,back:"transmit",padding:"10px",size:"16px"};!n&&(!t||t==="none")?L.loading={display:"none"}:(L.width="140px",L.height="112px"),n?L.loading={display:"block",height:"55px",icon:n,interval:r}:["success","error"].indexOf(t)!==-1&&(L.loading={display:"block",height:"55px",icon:t==="success"?"__uniappsuccess.png":"__uniapperror.png",interval:r});try{mu=l.nativeUI.showWaiting(e,K.extend(L,E))}catch(Oe){P(`${Oe}`)}}return ju==="toast"&&(zu=k(()=>{Wu("")},r)),U()},aA=ke(JE,$p,XE,QE),sA=ke(PE,(e,t)=>Wu("toast",t)),lA=ke(IE,(e,t)=>Wu("loading",t));function Wu(e="toast",t){return e&&e!==ju||(zu&&(C(zu),zu=null),Qf?l.nativeUI.closeToast():mu&&mu.close&&mu.close(),mu=null,Qf=!1,ju=""),t&&t.resolve()}let cA=ke(ew,(e,{resolve:t,reject:n})=>{let r=cp();if(r&&r.endPullToRefresh(),r=Du(),!r)return n();r.beginPullToRefresh(),jf(r),t()}),uA=ke(tw,(e,{resolve:t,reject:n})=>{let r=cp()||Du();if(!r)return n();r.endPullToRefresh(),jf(null),t()}),fA=ke(Kh,(e,{resolve:t,reject:n})=>{let r=Qn(Lr());_t.invokeViewMethod(Kh,e,r,s=>{s?n(s):t()})},NE),dA=ke(Jh,(e,{resolve:t})=>{let n=Qn(Lr());_t.invokeViewMethod(Jh,e,n,t)},VE,UE),hA=ke(ME,({__page__:e,title:t},{resolve:n,reject:r})=>{let s=sp(e);if(s){let u=s.getStyle();u&&u.titleNView&&s.setStyle({titleNView:{titleText:t}}),n()}else r()},DE),pA=ke(LE,(e,{resolve:t})=>{l.nativeUI.showWaiting("",{modal:!1}),t()}),gA=ke(FE,(e,{resolve:t})=>{l.nativeUI.closeWaiting(),t()});function vA(e){let t=jn();!t.length||(t[t.length-1].$page.statusBarStyle=e)}let mA=ke(RE,({__page__:e,frontColor:t,backgroundColor:n},{resolve:r,reject:s})=>{let u=sp(e);if(u){let g={};t&&(g.titleColor=t),n&&(g.backgroundColor=n);let E=t==="#000000"?"dark":"light";l.navigator.setStatusBarStyle(E),vA(E);let U=u.getStyle();U&&U.titleNView&&(U.titleNView.autoBackButton&&(g.backButton=g.backButton||{},g.backButton.color=t),u.setStyle({titleNView:g})),r()}else s()},BE,xE),_A=ke(Ew,({index:e,text:t},{resolve:n,reject:r})=>{Mi.setTabBarBadge("text",e,t),n()},ww,Sw),bA=ke(nw,({index:e,text:t,iconPath:n,selectedIconPath:r,pagePath:s,visible:u,iconfont:g},{resolve:E})=>{if(Mi.setTabBarItem(e,t,n,r,u,g),s){let U=R.tabBar.list[e];if(U){let P=U.pagePath,L=re.removeLeadingSlash(s);L!==P&&ol(e,P,L)}}E()},rw,iw),yA=ke(ow,(e={},{resolve:t,reject:n})=>{if(!uu())return n("not TabBar page");e.borderStyle=re.normalizeTabBarStyles(e.borderStyle),Mi.setTabBarStyle(e),t()},aw,lw),EA=ke(cw,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!uu())return n("not TabBar page");Mi.hideTabBar(Boolean(r)),t()},Zh),wA=ke(uw,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!uu())return n("not TabBar page");Mi.showTabBar(Boolean(r)),t()},fw),SA=ke(gw,({index:e},{resolve:t,reject:n})=>{Mi.setTabBarBadge("redDot",e),t()},vw,mw),Hp=e=>Mi.setTabBarBadge("none",e),CA=ke(_w,({index:e},{resolve:t,reject:n})=>{Hp(e),t()},bw,yw),OA=ke(dw,({index:e},{resolve:t,reject:n})=>{Hp(e),t()},hw,pw),jp="vdSync",AA="__uniapp__service",Bc="onWebviewReady",TA=0,IA="webviewInserted",PA="webviewRemoved",zp="UniAppSubNVue";class NA{constructor(t,n){this.callbacks=[];let r=this.webview=l.webview.getWebviewById(t);if(this.isSub=n||!1,r.__uniapp_mask_id){let s=this.maskWebview=r.__uniapp_mask_id==="0"?{setStyle({mask:g}){Oa("uni-tabview").setMask({color:g})}}:l.webview.getWebviewById(r.__uniapp_mask_id),u=function(){s.setStyle({mask:"none"})};r.addEventListener("hide",u),r.addEventListener("close",u)}}show(...t){if(this.maskWebview){let n=this.webview.__uniapp_mask;this.maskWebview.setStyle({mask:n})}this.webview.show(...t)}hide(...t){this.webview.hide(...t)}setStyle(t){this.webview.setStyle(t)}initMessage(){if(this.messageReady)return;this.messageReady=!0;let t=r=>{if(r.data&&r.data.type===zp){let s=r.data.target;s.id===this.webview.id&&s.isSub===this.isSub&&this.callbacks.forEach(u=>{u({origin:this.webview.__uniapp_host,data:r.data.data})})}};Oa("globalEvent").addEventListener("plusMessage",t),this.webview.addEventListener("close",()=>{this.callbacks.length=0})}postMessage(t){l.webview.postMessageToUniNView({type:zp,data:t,target:{id:this.webview.id,isSub:!this.isSub}},AA)}onMessage(t){this.initMessage(),this.callbacks.push(t)}}let kA=function(e,t){return new NA(e,t)};function RA(e,t,n,r,s,u,g){l!==n&&(T=Dn=e,v=t,l=n,PS(l.navigator.setStatusBarStyle),l.navigator.setStatusBarStyle=rp,k=r,C=s,d=u,m=g),R.serviceReady=!0}function xA(){let e=["ArrayBuffer","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"],t={};for(let n=0;n<e.length;n++){let r=e[n];t[r]=global[r]}return t}function BA(e){K.extend(global,e)}let Wp={oauth(e){l.oauth.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{t=t,e(t)})},share(e){l.share.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{e(t)})},payment(e){l.payment.getChannels(t=>{let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{e(t)})},push(e){if(typeof v!="undefined"||typeof l!="undefined"){let t=l.push.getClientInfo();e(null,[t.id],[t])}else e(null,[])}},MA=ke(Cw,({service:e},{resolve:t,reject:n})=>{Wp[e]?Wp[e]((r,s=[],u=[])=>{r?n(r.message):t({service:e,provider:s,providers:u.map(g=>(typeof g.serviceReady=="boolean"&&(g.isAppExist=g.serviceReady),typeof g.nativeClient=="boolean"&&(g.isAppExist=g.nativeClient),g))})}):n("service not found")},Ow),Gu;function _u(e){return new Promise((t,n)=>{l.oauth.getServices(r=>{let s=r.find(({id:u})=>u===e);s?t(s):n(new Error("provider not find"))},n)})}let Gp=ke(Aw,(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",s=br(n),u=r==="apple",g=u?{scope:"email"}:e.univerifyStyle?{univerifyStyle:FA(e.univerifyStyle,s)}:{};_u(r).then(E=>{function U(){if(e.onlyAuthorize&&r==="weixin"){E.authorize(({code:P})=>{t({code:P,authResult:""})},s);return}E.login(P=>{let L=P.target.authResult,Oe=P.target.appleInfo;t({code:L.code,authResult:L,appleInfo:Oe})},s,g)}u||r==="univerify"?U():E.logout(U,U)}).catch(s)},Tw),Yp=(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",s=br(n);_u(r).then(u=>{u.getUserInfo(g=>{let E={nickName:""};if(r==="weixin"){let P=u.userInfo;P&&(E={openId:P.openid,nickName:P.nickname,gender:P.sex,city:P.city,province:P.province,country:P.country,avatarUrl:P.headimgurl,unionId:P.unionid})}else if(r==="apple"){let P=u.appleInfo;P&&(E={openId:P.user,fullName:P.fullName,email:P.email,authorizationCode:P.authorizationCode,identityToken:P.identityToken,realUserStatus:P.realUserStatus})}else E=u.userInfo,E&&(E.openId=E.openId||E.openid||u.authResult.openid,E.nickName=E.nickName||E.nickname,E.avatarUrl=E.avatarUrl||E.headimgurl);let U={};e.data&&e.data.api_name==="webapi_getuserinfo"?U.data={data:JSON.stringify(E),rawData:"",signature:"",encryptedData:"",iv:""}:U.userInfo=E,t(U)},s)}).catch(()=>{n("\u8BF7\u5148\u8C03\u7528 uni.login")})},DA=ke(Iw,Yp,Pw),LA=ke(Nw,Yp,kw),qp=ke(Rw,({provider:e},{resolve:t,reject:n})=>{let r=Gl(t),s=br(n);_u(e).then(u=>u.preLogin(r,s)).catch(s)},Mw,Bw),Kp=()=>_u("univerify").then(e=>e.closeAuthView()),Jp=Dt(Dw,Kp),Zp=ke(Lw,(e,{resolve:t,reject:n})=>{let r=Gl(t),s=br(n);try{_u("univerify").then(u=>{let g=u.getCheckBoxState();r({state:g})})}catch(u){s(u)}});function FA(e,t){return K.isPlainObject(e)&&K.isPlainObject(e.buttons)&&K.toTypeString(e.buttons.list)==="[object Array]"&&e.buttons.list.forEach((n,r)=>{e.buttons.list[r].onclick=function(){let s={code:"30008",message:"\u7528\u6237\u70B9\u51FB\u4E86\u81EA\u5B9A\u4E49\u6309\u94AE",index:r,provider:n.provider};K.isPlainObject(Gu)?Gu._triggerUniverifyButtonsClick(s):Kp().then(()=>{t(s)})}}),e}class VA{constructor(){this.provider="univerify",this.eventName="api.univerifyButtonsClick"}close(){return Jp()}login(t){return Gp(this._getOptions(t))}getCheckBoxState(t){return Zp(t)}preLogin(t){return qp(this._getOptions(t))}onButtonsClick(t){_t.on(this.eventName,t)}offButtonsClick(t){_t.off(this.eventName,t)}_triggerUniverifyButtonsClick(t){_t.emit(this.eventName,t)}_getOptions(t={}){return K.extend({},t,{provider:this.provider})}}let UA=Dt(Fw,()=>Gu||(Gu=new VA)),$A=ke(Yw,(e,{resolve:t,reject:n})=>{let r=Ip();if(r.notificationAuthorized!=="authorized")return n("notificationAuthorized: "+r.notificationAuthorized);let s=K.extend({},e);delete s.content,delete s.payload,l.push.createMessage(e.content,e.payload,s),t()},void 0,qw),HA=Dt("registerRuntime",e=>{K.extend(jsRuntime,e)}),jA={0:{name:"web",title:"\u56FE\u6587"},1:{name:"text",title:"\u7EAF\u6587\u5B57"},2:{name:"image",title:"\u7EAF\u56FE\u7247"},3:{name:"music",title:"\u97F3\u4E50"},4:{name:"video",title:"\u89C6\u9891"},5:{name:"miniProgram",title:"\u5C0F\u7A0B\u5E8F"}},zA=e=>{e.type=e.type||0;let{provider:t,type:n,title:r,summary:s,href:u,imageUrl:g,mediaUrl:E,scene:U,miniProgram:P,openCustomerServiceChat:L,corpid:Oe,customerUrl:Pe}=e;K.isString(g)&&g&&(g=Je(g));let Re=jA[n];if(Re){let ht={provider:t,type:Re.name,title:r,content:s,href:u,pictures:[g],thumbs:g?[g]:void 0,media:E,miniProgram:P,extra:{scene:U},openCustomerServiceChat:L,corpid:Oe,url:Pe};return t==="weixin"&&(n===1||n===2)&&delete ht.thumbs,ht}return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E"},Xp=function(e,t,n,r,s="share"){let u=br(r),g=t.openCustomerServiceChat?"openCustomerServiceChat":"send";try{e[g](t,()=>{n()},u)}catch(E){u({message:`${t.provider} ${g} \u65B9\u6CD5\u8C03\u7528\u5931\u8D25`})}},WA=ke(Vw,(e,{resolve:t,reject:n})=>{let r=zA(e),s=br(n);if(K.isString(r))return n(r);l.share.getServices(u=>{let g=u.find(({id:E})=>E===r.provider);g?g.authenticated?Xp(g,r,t,n):g.authorize(()=>Xp(g,r,t,n),s):n("service not found")},s)},$w,Uw),GA=ke(Hw,({type:e,imageUrl:t,summary:n,href:r},{resolve:s,reject:u})=>{let g=br(u);K.isString(t)&&t&&(t=Je(t)),l.share.sendWithSystem({type:e,pictures:t?[t]:void 0,content:n,href:r},()=>s(),g)},zw,jw),YA=ke(Ww,(e,{resolve:t,reject:n})=>{let r=e.provider,s=br(n);l.payment.getChannels(u=>{let g=u.find(({id:E})=>E===r);g?l.payment.request(g,e.orderInfo,E=>{t(E)},s):n("service not found")},s)},Gw),Qp=bp,qA=ke("navigateToMiniProgram",(e,{resolve:t,reject:n})=>{Qp("navigateToUniMP",e,r=>{if(r.errMsg&&r.errMsg.indexOf(":ok")===-1)return n(r.errMsg.split(" ")[1]);t()})}),eg=[];function tg(e){eg.push(e)}let KA=tg;function JA(e,t){eg.forEach(n=>n(e,t))}function ZA(e,t,...n){let r=eT(e,t,n);r&&console[e](r)}function XA(){return typeof __channelId__=="string"&&__channelId__}function QA(e,t){switch(K.toRawType(t)){case"Function":return"function() { [native code] }";default:return t}}function eT(e,t,n){return XA()?(n.push(t.replace("at ","uni-app:///")),console[e].apply(console,n)):n.map(function(s){let u=K.toTypeString(s).toLowerCase();if(["[object object]","[object array]","[object module]"].indexOf(u)!==-1)try{s="---BEGIN:JSON---"+JSON.stringify(s,QA)+"---END:JSON---"}catch(g){s=u}else if(s===null)s="---NULL---";else if(s===void 0)s="---UNDEFINED---";else{let g=K.toRawType(s).toUpperCase();g==="NUMBER"||g==="BOOLEAN"?s="---BEGIN:"+g+"---"+s+"---END:"+g+"---":s=String(s)}return s}).join("---COMMA---")+" "+t}let tT=1,ed,bu={};function ng(e){if(typeof e=="function"){let t=Object.keys(bu).find(r=>bu[r]===e),n=t?parseInt(t):tT++;return bu[n]=e,n}else K.isPlainObject(e)&&Object.keys(e).forEach(t=>{e[t]=ng(e[t])});return e}function nT(e,t,n,r){return nd(e,t,n,r)}function td(){return ed||(ed=O.requireNativePlugin("UTS-Proxy")),ed}function rg(e,t,n,r){if(K.isString(e)&&(e=JSON.parse(e)),e.errMsg)throw new Error(e.errMsg);if(t&&t.type==="interface"&&typeof e.params=="number"){if(!e.params)return null;if(e.params===n&&r)return r;if(rd[t.options]){let s=lg(K.extend({instanceId:e.params},rd[t.options]));return new s}}return e.params}function ig(e){if(e.errMsg)throw new Error(e.errMsg);return delete e.errMsg,rg(td().invokeSync(e,()=>{}))}function nd(e,{moduleName:t,moduleType:n,package:r,class:s,name:u,method:g,companion:E,params:U,return:P,errMsg:L},Oe,Pe){let Re=({id:pt,name:kt,params:Rt,keepAlive:dn})=>{let ln=bu[pt];ln?(ln(...Rt),dn||delete bu[pt]):console.error(`${r}${s}.${u} ${kt} is not found`)},ht=Oe?{moduleName:t,moduleType:n,id:Oe,name:u,method:U}:{moduleName:t,moduleType:n,package:r,class:s,name:g||u,companion:E,method:U};return(...pt)=>{if(L)throw new Error(L);let kt=K.extend({},ht,{params:pt.map(Rt=>ng(Rt))});return e?new Promise((Rt,dn)=>{td().invokeAsync(kt,ln=>{ln.type!=="return"?Re(ln):ln.errMsg?dn(ln.errMsg):Rt(ln.params)})}):rg(td().invokeSync(kt,Re),P,Oe,Pe)}}function og(e,t){return t.main&&!t.method&&typeof l!="undefined"&&l.os.name==="iOS"&&(t.method="s_"+t.name),nd(e,t,0)}let rT=og;function ag(e,t){return K.hasOwn(t,e+"ByJs")?e+"ByJs":e}function sg(e){return typeof e=="undefined"}function iT(e){return!sg(e.instanceId)}function lg(e){let{moduleName:t,moduleType:n,package:r,class:s,methods:u,props:g,errMsg:E}=e,U={moduleName:t,moduleType:n,package:r,class:s,errMsg:E},P,L=[],Oe={},Pe=[];iT(e)?P=e.instanceId:(L=e.constructor.params,Oe=e.staticMethods,Pe=e.staticProps),typeof l!="undefined"&&l.os.name==="iOS"&&L.find(pt=>pt.type==="UTSCallback"||pt.type.indexOf("JSONObject")>0)&&L.push({name:"_byJs",type:"boolean"});let Re=class{constructor(...kt){if(E)throw new Error(E);let Rt={};if(sg(P)&&(P=nd(!1,K.extend({name:"constructor",params:L},U),0).apply(null,kt)),!P)throw new Error(`new ${s} is failed`);let dn=new Proxy(this,{get(ln,jt){if(!Rt[jt]){if(jt=ag(jt,u),K.hasOwn(u,jt)){let{async:wt,params:vn,return:on}=u[jt];Rt[jt]=nT(!!wt,K.extend({name:jt,params:vn,return:on},U),P,dn)}else if(g.includes(jt))return ig({moduleName:t,moduleType:n,id:P,name:jt,errMsg:E})}return Rt[jt]}});return dn}},ht={};return new Proxy(Re,{get(pt,kt,Rt){if(kt=ag(kt,Oe),K.hasOwn(Oe,kt)){if(!ht[kt]){let{async:dn,params:ln,return:jt}=Oe[kt];ht[kt]=og(!!dn,K.extend({name:kt,companion:!0,params:ln,return:jt},U))}return ht[kt]}return Pe.includes(kt)?ig(K.extend({name:kt,companion:!0},U)):Reflect.get(pt,kt,Rt)}})}function oT(e,t){return typeof l!="undefined"&&l.os.name==="Android"?"uts.sdk."+(t?"modules.":"")+e:""}function aT(e,t){return typeof l=="undefined"?"":cg(e,l.os.name==="iOS"?"IndexSwift":"IndexKt",t)}function cg(e,t,n){return typeof l=="undefined"?"":l.os.name==="Android"?t:l.os.name==="iOS"?"UTSSDK"+(n?"Modules":"")+K.capitalize(e)+K.capitalize(t):""}let rd={};function sT(e,t){rd[e]=t}let ug={};function lT(e,t){ug[e]=t}function cT(e){let t=ug[e];return t||console.error(`${e} is not found`),t}let da={load:"load",close:"close",error:"error",adClicked:"adClicked"};class fg{constructor(){this._callbacks={}}onLoad(t){this._addEventListener(da.load,t)}onClose(t){this._addEventListener(da.close,t)}onError(t){this._addEventListener(da.error,t)}offLoad(t){this._removeEventListener(da.load,t)}offClose(t){this._removeEventListener(da.close,t)}offError(t){this._removeEventListener(da.error,t)}_addEventListener(t,n){!K.isFunction(n)||(this._callbacks[t]||(this._callbacks[t]=[]),this._callbacks[t].push(n))}_removeEventListener(t,n){let r=this._callbacks[t],s=r.indexOf(n);s>-1&&r.splice(s,1)}_dispatchEvent(t,n){this._callbacks[t].forEach(r=>{r(n||{})})}}class id extends fg{constructor(t,n){super();this.preload=!0,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this.preload=n.preload!==void 0?n.preload:!1;let r=this._adInstance=t;r.onLoad(()=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(da.load,{})}),r.onClose(s=>{this._isLoaded=!1,this._isLoading=!1,this._dispatchEvent(da.close,s),this.preload===!0&&this._loadAd()}),r.onError(s=>{this._isLoading=!1;let u={code:s.code,errMsg:s.message};this._dispatchEvent(da.error,u);let g=new Error(JSON.stringify(u));this._loadPromiseReject!=null&&(this._loadPromiseReject(g),this._loadPromiseReject=null),this._showPromiseReject!=null&&(this._showPromiseReject(g),this._showPromiseReject=null)}),r.onAdClicked&&r.onAdClicked(()=>{this._dispatchEvent(da.adClicked,{})})}getProvider(){return this._adInstance.getProvider()}load(){return new Promise((t,n)=>{this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading&&(this._isLoaded?t(""):this._loadAd())})}show(){return new Promise((t,n)=>{this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading&&(this._isLoaded?(this._showAd(),t("")):this._loadAd())})}destroy(){this._adInstance.destroy()}_loadAd(){this._isLoaded=!1,this._isLoading=!0,this._adInstance.load()}_showAd(){this._adInstance.show()}}class uT extends id{constructor(t){super(l.ad.createRewardedVideoAd(t),t);this._loadAd()}}let fT=Dt(Kw,e=>new uT(e),Zw,Jw);class dT extends id{constructor(t){super(l.ad.createFullScreenVideoAd(t),t);this.preload=!1}}let hT=Dt(Xw,e=>new dT(e),eS,Qw);class pT extends id{constructor(t){super(l.ad.createInterstitialAd(t),t);this.preload=!1,this._loadAd()}}let gT=Dt(tS,e=>new pT(e),rS,nS),us={},Kl={};function vT(e){let t=e.provider;if(us[t]||(us[t]={}),typeof us[t].plugin=="object"){e.success(us[t].plugin);return}if(Kl[t]||(Kl[t]=[]),Kl[t].push(e),us[t].status===!0){e.__plugin=us[t].plugin;return}us[t].status=!0;let n=Oa(t);if(!n||!n.initSDK){Kl[t].forEach(r=>{r.fail({code:-1,message:"provider ["+t+"] invalid"})}),Kl[t].length=0,us[t].status=!1;return}us[t].plugin=n,e.__plugin=n,n.initSDK(r=>{let s=r.code===1||r.code==="1";s?us[t].plugin=n:us[t].status=!1,Kl[t].forEach(u=>{s?u.success(u.__plugin):u.fail(r)}),Kl[t].length=0})}class mT extends fg{constructor(t){super();this._adpid="",this._provider="",this._userData=null,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this._adInstance=null,this._adError="",this._adpid=t.adpid,this._provider=t.provider,this._userData=t.userData,k(()=>{this._init()})}_init(){this._adError="",vT({provider:this._provider,success:t=>{this._adInstance=t,this._userData&&this.bindUserData(this._userData),this._loadAd()},fail:t=>{this._adError=t,this._loadPromiseReject!=null&&(this._loadPromiseReject(this._createError(t)),this._loadPromiseReject=null),this._dispatchEvent(da.error,t)}})}getProvider(){return this._provider}load(){return new Promise((t,n)=>{if(this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?t(""):this._loadAd()}})}show(){return new Promise((t,n)=>{if(this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?(this._showAd(),t("")):this._loadAd()}})}reportExposure(){this._adInstance!==null&&this._adInstance.reportExposure()}bindUserData(t){this._adInstance!==null&&this._adInstance.bindUserData(t)}destroy(){this._adInstance!==null&&this._adInstance.destroy&&this._adInstance.destroy({adpid:this._adpid})}_loadAd(){if(this._adInstance!==null){if(this._isLoading===!0)return;this._isLoading=!0,this._adInstance.loadData({adpid:this._adpid},t=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(da.load,t)},t=>{this._isLoading=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(da.error,t)})}}_showAd(){this._adInstance!==null&&this._isLoaded===!0&&this._adInstance.show({adpid:this._adpid},()=>{this._isLoaded=!1},t=>{this._isLoaded=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(da.error,t)})}_createError(t){return new Error(JSON.stringify(t))}}let _T=Dt(iS,e=>new mT(e),aS,oS),dg=l.os.name==="Android"&&parseInt(l.os.version)<6,bT=dg?"slide-in-right":"pop-in",Yu=300,hg=dg?"slide-out-right":"pop-out",yT="_www/__uniappview.html",ET="webviewId",wT="uniMPNativeEvent";function ST(e,t,n){n&&t.isNVue&&(e.uniNView={path:n,defaultFontSize:R.defaultFontSize,viewport:R.viewport})}let CT=/^#[a-z0-9]{6}$/i;function OT(e){return e&&(CT.test(e)||e==="transparent")}function AT(e,t){let{backgroundColor:n}=t;!n||!OT(n)||(e.background?n=e.background:e.background=n,e.backgroundColorTop||(e.backgroundColorTop=n),e.backgroundColorBottom||(e.backgroundColorBottom=n),e.animationAlphaBGColor||(e.animationAlphaBGColor=n),typeof e.webviewBGTransparent=="undefined"&&(e.webviewBGTransparent=!0))}function TT(e,t){e.popGesture==="hide"&&delete e.popGesture,t.isQuit&&(e.popGesture=l.os.name==="iOS"?"appback":"none")}function IT(e,t){if(!t.enablePullDownRefresh)return;let n=Ti(K.extend({},l.os.name==="Android"?NT:kT,t.pullToRefresh));e.pullToRefresh=PT(n,t)}function PT(e,t){let n=Mr(e);if(!n)return e;let[r,s,u]=n;return(r||s||u)&&O.onLocaleChange(()=>{let g=l.webview.getWebviewById(t.id+"");if(!g)return;let E={support:!0};r&&(E.contentdown={caption:e.contentdown.caption}),s&&(E.contentover={caption:e.contentover.caption}),u&&(E.contentrefresh={caption:e.contentrefresh.caption}),g.setStyle({pullToRefresh:E})}),e}let NT={support:!0,style:"circle"},kT={support:!0,style:"default",height:"50px",range:"200px",contentdown:{caption:""},contentover:{caption:""},contentrefresh:{caption:""}};function RT(e,t){let{navigationBar:n}=t;if(n.style==="custom")return!1;let r=!0;t.isQuit&&(r=!1);let s={autoBackButton:r};Object.keys(n).forEach(u=>{let g=n[u];u==="titleImage"&&g?s.tags=BT(g):u==="buttons"&&K.isArray(g)?s.buttons=g.map((E,U)=>(E.onclick=MT(U),E)):s[u]=g}),e.titleNView=xT(s,t)}function xT(e,t){let n=Qr(e);if(!n)return e;let[r,s]=n;return(r||s)&&O.onLocaleChange(()=>{let u=l.webview.getWebviewById(t.id+"");if(!u)return;let g={};r&&(g.titleText=e.titleText),s&&(g.searchInput={placeholder:e.searchInput.placeholder}),u.setStyle({titleNView:g})}),e}function BT(e){return[{tag:"img",src:e,position:{left:"auto",top:"auto",width:"auto",height:"26px"}}]}function MT(e){return function(n){n.index=e,zn(re.ON_NAVIGATION_BAR_BUTTON_TAP,n)}}function pg(e,t,n){let r={bounce:"vertical"};return Object.keys(t).forEach(s=>{DT.indexOf(s)===-1&&(r[s]=t[s])}),n.id!=="1"&&ST(r,t,e),TT(r,t),AT(r,t),RT(r,t),IT(r,t),r}let DT=["id","route","isNVue","isQuit","isEntry","isTabBar","tabBarIndex","windowTop","topWindow","leftWindow","rightWindow","maxWidth","usingComponents","disableScroll","enablePullDownRefresh","navigationBar","pullToRefresh","onReachBottomDistance","pageOrientation","backgroundColor"],gg=2;function vg(){return gg}function mg(){return gg++}function _g(e){return e}function bg(e,t){let n=t?re.stringifyQuery(t,_g):"";return{path:e.slice(1),query:n&&n.slice(1)}}function LT(e,t,n){let r=n?re.stringifyQuery(n,_g):"";return{isTab:e,arguments:JSON.stringify({path:t.slice(1),query:r&&r.slice(1)})}}function FT({path:e,query:t,routeOptions:n,webviewExtras:r}){let s=()=>pg(e,$f(n.meta),{id:u+""}),u=mg(),g=s();g.uniPageUrl=bg(e,t),g.isTab=!!n.meta.isTabBar;let E=l.webview.create("",String(u),g,K.extend({nvue:!0,__path__:e,__query__:JSON.stringify(t)},r));return ap(E,s),E}let go;function yg(e){go=e}function VT(){return go}function UT(){return(!go||go.__uniapp_route)&&(go=l.webview.create(yT,String(mg()),{contentAdjust:!1})),go}function $T(e){let{popupSubNVueWebviews:t}=e;!t||e.addEventListener("close",()=>{Object.keys(t).forEach(n=>{t[n].close("none")})})}function Eg(e){return R.realEntryPagePath&&e.$page.route===R.entryPagePath}function wg(){R.entryPagePath=R.realEntryPagePath,delete R.realEntryPagePath,O.reLaunch({url:re.addLeadingSlash(R.entryPagePath)})}function HT(e){let t;e.addEventListener("popGesture",n=>{if(n.type==="start"){let r=jn(),s=r[r.length-2];t=fu;let u=s&&s.$page.statusBarStyle;u&&Ds(u)}else if(n.type==="end"&&!n.result)Ds(t);else if(n.type==="end"&&n.result){let r=jn().length,s=Dr();cl(),Ds(),s&&r===1&&Eg(s)?wg():zn(re.ON_SHOW)}})}function jT(e){if(e.nvue)return;let t=e.id,{subscribe:n,unsubscribe:r}=_t,s=(u,g)=>{if(t!==g)return;r(Bc,s);let E=ia(parseInt(g));E&&E.__page_container__.restore()};e.addEventListener("recovery",()=>{n(Bc,s)})}function zT(e){let{emit:t}=_t,n=function({width:r,height:s}){let g={deviceOrientation:Math.abs(l.navigator.getOrientation())===90?"landscape":"portrait",size:{windowWidth:Math.ceil(r),windowHeight:Math.ceil(s)}};t(re.ON_RESIZE,g,parseInt(e.id))};e.addEventListener("resize",re.debounce(n,50,{setTimeout:k,clearTimeout:C}))}let Sg={pullToRefresh:re.ON_PULL_DOWN_REFRESH,titleNViewSearchInputChanged:re.ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED,titleNViewSearchInputConfirmed:re.ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED,titleNViewSearchInputClicked:re.ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED,titleNViewSearchInputFocusChanged:re.ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED};function WT(e){let t=parseInt(e.id);Object.keys(Sg).forEach(n=>{let r=Sg[n];e.addEventListener(n,s=>{r===re.ON_PULL_DOWN_REFRESH&&jf(e),zn(t,r,s)})}),$T(e),zT(e),l.os.name==="iOS"&&(jT(e),HT(e))}function GT(e,t,n,r){let s=()=>pg(t,$f(r),e),u=s();u.uniPageUrl=bg(t,n);let g=!!r.isTabBar;r.isNVue?u.isTab=g:u.debugRefresh=LT(g,t,n),u.locale=v.requireModule("plus").getLanguage(),ap(e,s),e.setStyle(u)}function YT(e,t,n){(n.subNVues||[]).forEach(s=>{if(!s.path)return;let u=Oo(s.style||{}),g=s.type==="navigationBar",E=s.type==="popup";u.uniNView={path:s.path.replace(".nvue",".js"),defaultFontSize:R.defaultFontSize,viewport:R.viewport};let U={__uniapp_host:t,__uniapp_origin:u.uniNView.path.split("?")[0].replace(".js",""),__uniapp_origin_id:e.id,__uniapp_origin_type:e.__uniapp_type},P;g?(u.position="dock",u.dock="top",u.top="0",u.width="100%",u.height=String(re.NAVBAR_HEIGHT+zf()),delete u.left,delete u.right,delete u.bottom,delete u.margin):E&&(u.position="absolute",uu(t)?P=Mi:P=e,U.__uniapp_mask=u.mask||"rgba(0,0,0,0.5)",U.__uniapp_mask_id=P.id),delete u.mask;let L=l.webview.create("",s.id,u,U);if(E){P.popupSubNVueWebviews||(P.popupSubNVueWebviews={}),P.popupSubNVueWebviews[L.id]=L;let Oe=function(){P.setStyle({mask:"none"}),L.hide("auto")};P.addEventListener("maskClick",Oe);let Pe=!1;L.addEventListener("show",()=>{Pe||(l.key.removeEventListener("backbutton",La),l.key.addEventListener("backbutton",Oe),Pe=!0)}),L.addEventListener("hide",()=>{Pe&&(l.key.removeEventListener("backbutton",Oe),l.key.addEventListener("backbutton",La),Pe=!1)}),L.addEventListener("close",()=>{delete P.popupSubNVueWebviews[L.id],Pe&&(l.key.removeEventListener("backbutton",Oe),l.key.addEventListener("backbutton",La),Pe=!1)})}else e.append(L)})}function qT(e,t,n,r){(e.id==="1"||!r.isNVue)&&GT(e,t,n,r),YT(e,t,r),WT(e)}function Cg(e){return e.routeOptions.meta.isNVue?FT(e):vg()===2?l.webview.getLaunchWebview():VT()}function Og(e,t){_t.once(Bc+"."+e,t)}let fs=!1;function Ag(e,t,n){fs={path:e,nvue:Ka(e).isNVue,callback:t}}function Tg(e,t,n){Fo(e),Jl(e.$getAppWebview(),t,n)}function qu(e,t,n=!1){if(!n&&fs)return console.error(`Waiting to navigate to: ${fs.path}, do not operate continuously: ${e}.`);if(R.renderer==="native")return jn().length===0?Ag(e,t,"waitForReady"):t();let r=!go||go&&go.__uniapp_route,s=go&&!go.loaded;r||s?Ag(e,t,r?"waitForCreate":"waitForReady"):t(),s&&Og(go.id,Ku)}function Ku(){if(!fs)return;let{callback:e}=fs;return fs=!1,e()}function Ig(){if(R.renderer==="native")return fs&&fs.nvue?Ku():void 0;let e=UT();if(!!fs){if(fs.nvue)return Ku();e.loaded?fs.callback():Og(e.id,Ku)}}function Jl(e,t,n){e[e.__preload__?"hide":"close"](t,n)}function Ju(e,t,n,r,s){typeof s=="undefined"&&(s=e.nvue?0:100);let u=function(){u._called||(u._called=!0,r&&r(),Ig())};u._called=!1,k(()=>{let g=k(()=>{u()},n+150);e.show(t,n,()=>{u._called||C(g),u()})},s)}function KT(e,t){let n=e.children();if(!n||!n.length)return t();let r=n.find(s=>s.id.indexOf(ET)===0)||n[0];r.canBack(({canBack:s})=>{s?r.back():t()})}let JT=ke(hE,(e,{resolve:t,reject:n})=>{let r=Dr();if(!r)return n("getCurrentPages is empty");if(zn(r,re.ON_BACK_PRESS,{from:e.from||"navigateBack"}))return t();if(O.hideToast(),O.hideLoading(),r.$page.meta.isQuit)ZT();else if(Eg(r))wg();else{let{delta:s,animationType:u,animationDuration:g}=e;XT(s,u,g)}return t()},gE,OE),Zu=0;function ZT(){Ot(),Zu?Date.now()-Zu<2e3&&l.runtime.quit():(Zu=Date.now(),l.nativeUI.toast(le().t("uni.app.quit")),k(()=>{Zu=0},2e3))}function XT(e,t,n){let r=jn(),s=r.length,u=r[s-1];e>1&&r.slice(s-e,s-1).reverse().forEach(U=>{Jl(l.webview.getWebviewById(U.$page.id+""),"none",0)});let g=function(U){t?Jl(U,t,n||Yu):u.$page.openType==="redirectTo"?Jl(U,hg,Yu):Jl(U,"auto"),r.slice(s-e,s).forEach(P=>Fo(P)),Ds(),zn(re.ON_SHOW)},E=l.webview.getWebviewById(u.$page.id+"");if(!u.__uniapp_webview)return g(E);KT(E,()=>{g(E)})}class QT extends re.UniNode{constructor(t,n,r=!1){super(re.NODE_TYPE_PAGE,"#page",null);this._id=1,this._created=!1,this._updating=!1,this._createActionMap=new Map,this.updateActions=[],this.dicts=[],this.nodeId=0,this.pageId=t,this.pageNode=this,this.options=n,this.isUnmounted=!1,this.createAction=[re.ACTION_TYPE_PAGE_CREATE,n],this.createdAction=[re.ACTION_TYPE_PAGE_CREATED],this.normalizeDict=this._normalizeDict.bind(this),this._update=this.update.bind(this),r&&this.setup()}_normalizeDict(t,n=!0){if(!K.isPlainObject(t))return this.addDict(t);let r=[];return Object.keys(t).forEach(s=>{let u=[this.addDict(s)],g=t[s];n?u.push(this.addDict(g)):u.push(g),r.push(u)}),r}addDict(t){let{dicts:n}=this,r=n.indexOf(t);return r>-1?r:n.push(t)-1}onInjectHook(t){(t===re.ON_PAGE_SCROLL||t===re.ON_REACH_BOTTOM)&&!this.scrollAction&&(this.scrollAction=[re.ACTION_TYPE_PAGE_SCROLL,this.options.onReachBottomDistance],this.push(this.scrollAction))}onCreate(t,n){return nI(this,t.nodeId,n),t}onInsertBefore(t,n,r){return rI(this,n,t.nodeId,r&&r.nodeId||-1),n}onRemoveChild(t){return iI(this,t.nodeId),t}onAddEvent(t,n,r){t.parentNode&&oI(this,t.nodeId,n,r)}onAddWxsEvent(t,n,r,s){t.parentNode&&aI(this,t.nodeId,n,r,s)}onRemoveEvent(t,n){t.parentNode&&sI(this,t.nodeId,n)}onSetAttribute(t,n,r){t.parentNode&&cI(this,t.nodeId,n,r)}onRemoveAttribute(t,n){t.parentNode&&uI(this,t.nodeId,n)}onTextContent(t,n){t.parentNode&&Ng(this,t.nodeId,n)}onNodeValue(t,n){t.parentNode&&Ng(this,t.nodeId,n)}genId(){return this._id++}push(t,n){if(!this.isUnmounted){switch(t[0]){case re.ACTION_TYPE_CREATE:this._createActionMap.set(t[1],t);break;case re.ACTION_TYPE_INSERT:let r=this._createActionMap.get(t[1]);r?(r[3]=t[2],r[4]=t[3],n&&(r[5]=n)):(n&&(t[4]=n),this.updateActions.push(t));break}t[0]!==re.ACTION_TYPE_INSERT&&this.updateActions.push(t),this._updating||(this._updating=!0,Dn.queuePostFlushCb(this._update))}}restore(){this.clear(),this.setup(),this.scrollAction&&this.push(this.scrollAction);let t=n=>{this.onCreate(n,n.nodeName),this.onInsertBefore(n.parentNode,n,null),n.childNodes.forEach(r=>{t(r)})};this.childNodes.forEach(n=>t(n)),this.push(this.createdAction)}setup(){this.send([this.createAction])}update(){let{dicts:t,updateActions:n,_createActionMap:r}=this;this._created||(this._created=!0,n.push(this.createdAction)),n.length&&(t.length&&n.unshift([TA,t]),this.send(n)),this.clear()}clear(){this.dicts.length=0,this.updateActions.length=0,this._updating=!1,this._createActionMap.clear()}send(t){_t.publishHandler(jp,t,this.pageId)}fireEvent(t,n){let r=Pg(t,this);r&&r.dispatchEvent(n)}}function eI(e){let t=ia(e);return t?t.__page_container__:null}function od(e,t,n){if(typeof n=="number"&&(n=eI(n)),n[e]===t)return n;let{childNodes:r}=n;for(let s=0;s<r.length;s++){let u=od(e,t,r[s]);if(u)return u}return null}function Pg(e,t){return od("nodeId",e,t)}function tI(e,t){return od("nodeName",e.toUpperCase(),t)}function nI(e,t,n){e.push([re.ACTION_TYPE_CREATE,t,e.addDict(n),-1,-1])}function rI(e,t,n,r){let s=t.toJSON({attr:!0,normalize:e.normalizeDict});e.push([re.ACTION_TYPE_INSERT,t.nodeId,n,r],Object.keys(s).length?s:void 0)}function iI(e,t){e.push([re.ACTION_TYPE_REMOVE,t])}function oI(e,t,n,r){e.push([re.ACTION_TYPE_ADD_EVENT,t,e.addDict(n),r])}function aI(e,t,n,r,s){e.push([re.ACTION_TYPE_ADD_WXS_EVENT,t,e.addDict(n),e.addDict(r),s])}function sI(e,t,n){e.push([re.ACTION_TYPE_REMOVE_EVENT,t,e.addDict(n)])}function lI(e,t,n){return t==="style"&&K.isPlainObject(n)?e.normalizeDict(n):e.addDict(n)}function cI(e,t,n,r){e.push([re.ACTION_TYPE_SET_ATTRIBUTE,t,e.addDict(n),lI(e,n,r)])}function uI(e,t,n){e.push([re.ACTION_TYPE_REMOVE_ATTRIBUTE,t,e.addDict(n)])}function Ng(e,t,n){e.push([re.ACTION_TYPE_SET_TEXT,t,e.addDict(n)])}function fI(e,t,n){return new QT(e,t,n)}function kg(e){let t=e.setup;return e.inheritAttrs=!1,e.setup=(n,r)=>{let{attrs:{__pageId:s,__pagePath:u,__pageQuery:g,__pageInstance:E}}=r,P=Dn.getCurrentInstance().proxy;if(Ct(P,E),Da(Rg(s,P,E)),Dn.onMounted(()=>{Dn.nextTick(()=>{zn(P,re.ON_READY)})}),Dn.onBeforeUnmount(()=>{zn(P,re.ON_UNLOAD)}),t)return t(g,r)},e}function Rg(e,t,n){let r=()=>l.webview.getWebviewById(e+"");return t.$getAppWebview=r,t.$.ctx.$scope={$getAppWebview:r},t.getOpenerEventChannel=()=>(n.eventChannel||(n.eventChannel=new re.EventChannel(e)),n.eventChannel),t}function dI(e){return K.isFunction(e)}let xg=new Map;function hI(e,t){xg.set(e,re.once(gI(t)))}function pI(e,t,n,r,s){let u=fI(e,s,!0),g=Ao(),E=xg.get(t)(),U=P=>g.mountPage(P,{__pageId:e,__pagePath:t,__pageQuery:n,__pageInstance:r},u);return K.isPromise(E)?E.then(P=>U(P)):U(E)}function gI(e){return()=>dI(e)?e().then(t=>kg(t)):kg(e)}let Bg=!1;function Mg(){if(Bg)return;Bg=!0;let e,t;if(v.requireModule("plus").getRedirectInfo){let{path:u,query:g,referrerInfo:E}=Rl();u&&(e=u,t=g),R.referrerInfo=E}else{let u=l.runtime.arguments;if(!u)return;try{let g=JSON.parse(u);e=g.path||g.pathName,t=g.query?"?"+g.query:""}catch(g){}}if(!e||e===R.entryPagePath){t&&(R.entryPageQuery=t);return}let r=re.addLeadingSlash(e),s=ho(r);!s||(s.meta.isTabBar||(R.realEntryPagePath=R.realEntryPagePath||R.entryPagePath),R.entryPagePath=e,R.entryPageQuery=t)}function Xu(e,t){let n=JSON.parse(JSON.stringify(ho(e)));return n.meta=il(n.meta),t!=="preloadPage"&&!R.realEntryPagePath&&(t==="reLaunch"||jn().length===0)?n.meta.isQuit=!0:n.meta.isTabBar||(n.meta.isQuit=!1),n}let ds={};function vI(e){let t=Object.keys(ds).find(n=>ds[n].id===e.id);t&&delete ds[t]}function mI({url:e}){let t=ds[e];return t&&(t.__page__&&jn().find(n=>n===t.__page__)?t.__preload__=!1:t.close("none"),delete ds[e]),t}function _I({url:e,path:t,query:n}){if(!ds[e]){let r=Xu(t,"preloadPage");ds[e]=Cg({path:t,routeOptions:r,query:n,webviewExtras:{__preload__:!0}})}return ds[e]}function yu({url:e,path:t,query:n,openType:r,webview:s,nvuePageVm:u,eventChannel:g}){if(s&&Mg(),ds[e]){s=ds[e];let Pe=s;if(Pe.__page__)if(jn().find(Re=>Re===Pe.__page__))s=void 0;else return g&&(Pe.__page__.$page.eventChannel=g),r==="launch"?bI(e,t,n,Pe,u,g):Da(Pe.__page__),Pe}let E=Xu(t,r);s?(s=l.webview.getWebviewById(s.id),s.nvue=E.meta.isNVue):s=Cg({path:t,routeOptions:E,query:n}),E.meta.id=parseInt(s.id),!!E.meta.isTabBar&&Mi.append(s),qT(s,t,n,E.meta);let P=t.slice(1);s.__uniapp_route=P;let L=ka(r,e,n,E.meta,g,R.darkmode?l.navigator.getUIStyle():"light"),Oe=parseInt(s.id);return s.nvue?u?EI(Oe,u,L):Dg(Oe,s,L):pI(Oe,P,n,L,yI(E)),s}function bI(e,t,n,r,s,u){let g=Xu(t,"preloadPage");g.meta.id=parseInt(r.id);let E=ka("preloadPage",e,n,g.meta,u,R.darkmode?l.navigator.getUIStyle():"light");Ct(s,E),r.__page__=s}function yI({meta:e}){let t=zf(),{platform:n,pixelRatio:r,windowWidth:s}=wo();return{css:!0,route:e.route,version:1,locale:"",platform:n,pixelRatio:r,windowWidth:s,disableScroll:e.disableScroll===!0,onPageScroll:!1,onPageReachBottom:!1,onReachBottomDistance:K.hasOwn(e,"onReachBottomDistance")?e.onReachBottomDistance:re.ON_REACH_BOTTOM_DISTANCE,statusbarHeight:t,windowTop:e.navigationBar.type==="float"?t+re.NAVBAR_HEIGHT:0,windowBottom:Mi.indexOf(e.route)>=0&&Mi.cover?Mi.height:0}}function EI(e,t,n){Ct(t,n),Da(Rg(e,t,n)),e===1&&(R.splashscreen&&R.splashscreen.autoclose&&!R.splashscreen.alwaysShowBeforeRender&&l.navigator.closeSplashscreen(),R.onReady(function(){Ig()}))}function Dg(e,t,n){let r={$:{},$getAppWebview(){return t},getOpenerEventChannel(){return n.eventChannel||(n.eventChannel=new re.EventChannel(e)),n.eventChannel},__setup(s,u){s.$getAppWebview=()=>t,s.getOpenerEventChannel=u.getOpenerEventChannel,Ct(s,n),t.__preload__&&(t.__page__=s);let g=tr(),E=g.findIndex(U=>U===u);E>-1&&g.splice(E,1,s)}};Ct(r,n),t.__preload__?(t.__page__=r,t.addEventListener("show",()=>{zn(t.__page__,re.ON_SHOW)}),t.addEventListener("hide",()=>{zn(t.__page__,re.ON_HIDE)})):Da(r)}let Lg=(e,{resolve:t,reject:n})=>{let{url:r,events:s,animationType:u,animationDuration:g}=e,{path:E,query:U}=re.parseUrl(r),[P,L]=CI(E,u,g);qu(E,()=>{SI({url:r,path:E,query:U,events:s,aniType:P,aniDuration:L}).then(t).catch(n)},e.openType==="appLaunch")},wI=ke(Df,Lg,pE,EE);function SI({url:e,path:t,query:n,events:r,aniType:s,aniDuration:u}){zn(re.ON_HIDE);let g=new re.EventChannel(vg()+1,r);return new Promise(E=>{Ju(yu({url:e,path:t,query:n,openType:"navigateTo",eventChannel:g}),s,u,()=>{E({eventChannel:g})}),Ds()})}function CI(e,t,n){let{globalStyle:r}=R,s=Ka(e);return[t||s.animationType||r.animationType||bT,n||s.animationDuration||r.animationDuration||Yu]}let OI=ke(Lf,({url:e},{resolve:t,reject:n})=>{let{path:r,query:s}=re.parseUrl(e);qu(r,()=>{AI({url:e,path:r,query:s}).then(t).catch(n)})},vE,wE);function AI({url:e,path:t,query:n}){let r=Dr();return r&&Fo(r),new Promise(s=>{Ju(yu({url:e,path:t,query:n,openType:"redirectTo"}),"none",0,()=>{if(r){let u=r.$getAppWebview();u.__preload__&&vI(u),u.close("none")}s(void 0)}),Ds()})}let TI=({url:e},{resolve:t,reject:n})=>{let{path:r,query:s}=re.parseUrl(e);qu(r,()=>{II({url:e,path:r,query:s}).then(t).catch(n)})};function II({url:e,path:t,query:n}){return new Promise(r=>{let s=tr().slice(0);We.find(g=>g.path===t).meta.isTabBar&&Mi.switchTab(t.slice(1)),Ju(yu({url:e,path:t,query:n,openType:"reLaunch"}),"none",0,()=>{s.forEach(g=>Tg(g,"none")),r(void 0)}),Ds()})}let PI=ke(Gh,TI,mE,SE),Fg=(e,{resolve:t,reject:n})=>{let{url:r}=e,{path:s,query:u}=re.parseUrl(r);qu(s,()=>{kI({url:r,path:s,query:u}).then(t).catch(n)},e.openType==="appLaunch")},NI=ke(Ru,Fg,_E,CE);function kI({url:e,path:t,query:n}){Mi.switchTab(t.slice(1));let r=jn(),s=r.length,u=!1,g=!1,E;s>=1&&(E=r[s-1],E&&!E.$.__isTabBar?(g=!0,r.reverse().forEach(P=>{!P.$.__isTabBar&&P!==E&&Tg(P,"none")}),Fo(E),k(()=>{E.$page.openType==="redirectTo"?Jl(E.$getAppWebview(),hg,Yu):Jl(E.$getAppWebview(),"auto")},100)):u=!0);let U;return tr().forEach(P=>{re.addLeadingSlash(P.route)===t?(P.$.__isActive||(g=!0),P.$.__isActive=!0,U=P):P.$.__isTabBar&&(P.$.__isActive=!1)}),E===U&&(u=!1),E&&u&&zn(E,re.ON_HIDE),new Promise(P=>{if(U){let L=U.$getAppWebview();L.show("none"),g&&!L.__preload__&&zn(U,re.ON_SHOW),Ds(),P(void 0)}else Ju(yu({url:e,path:t,query:n,openType:"switchTab"}),"none",0,()=>{Ds(),P(void 0)},70)})}let RI=Dt(Yh,({url:e})=>{let t=mI({url:e});return t?{id:t.id,url:e,errMsg:"unPreloadPage:ok"}:{url:e,errMsg:"unPreloadPage:fail not found"}},yE),xI=ke(Ff,({url:e},{resolve:t})=>{if(ds[e])return;let n=e.split("?"),r=n[0],s=re.parseQuery(n[1]||""),u=_I({url:e,path:r,query:s}),g=Xu(r,"preloadPage");g.meta.id=parseInt(u.id);let E=ka("preloadPage",e,s,g.meta,void 0,R.darkmode?l.navigator.getUIStyle():"light");Dg(parseInt(u.id),u,E),t({id:u.id,url:e,errMsg:"preloadPage:ok"})},bE);var BI={__proto__:null,$emit:qm,$off:Ym,$on:Wm,$once:Gm,__log__:ZA,addInterceptor:Mm,addPhoneContact:wC,arrayBufferToBase64:Hi,base64ToArrayBuffer:Xo,canIUse:IS,canvasGetImageData:w_,canvasPutImageData:S_,canvasToTempFilePath:C_,checkIsSoterEnrolledInDevice:IC,checkIsSupportSoterAuthentication:TC,chooseImage:JC,chooseLocation:qO,chooseVideo:ZC,clearStorage:gS,clearStorageSync:pS,closeAuthView:Jp,closeBLEConnection:aC,closeBluetoothAdapter:QS,closePreviewImage:$C,closeSocket:pO,compressImage:YC,compressVideo:qC,configMTLS:lO,connectSocket:dO,createAnimation:j_,createBLEConnection:oC,createCanvasContext:E_,createFullScreenVideoAd:hT,createInnerAudioContext:NO,createInteractiveAd:_T,createIntersectionObserver:P_,createInterstitialAd:gT,createLivePusherContext:zO,createMapContext:a_,createMediaQueryObserver:k_,createPushMessage:$A,createRewardedVideoAd:fT,createSelectorQuery:L_,createVideoContext:i_,downloadFile:rO,getAppAuthorizeSetting:Ip,getAppBaseInfo:hp,getBLEDeviceCharacteristics:lC,getBLEDeviceRSSI:hC,getBLEDeviceServices:sC,getBackgroundAudioManager:$O,getBeacons:vC,getBluetoothAdapterState:eC,getBluetoothDevices:rC,getCheckBoxState:Zp,getClipboardData:SC,getConnectedBluetoothDevices:iC,getDeviceInfo:dp,getEnterOptionsSync:fb,getFileInfo:mS,getImageInfo:FC,getLaunchOptionsSync:db,getLocale:ou,getLocation:YO,getNetworkType:wp,getProvider:MA,getPushClientId:hb,getRecorderManager:zC,getSavedFileInfo:OS,getSavedFileList:CS,getScreenBrightness:xC,getSelectedTextRange:Q_,getStorage:fS,getStorageInfo:vS,getStorageInfoSync:ep,getStorageSync:uS,getSubNVueById:kA,getSystemInfo:$S,getSystemInfoSync:pp,getSystemSetting:DC,getUniverifyManager:UA,getUserInfo:DA,getUserProfile:LA,getVideoInfo:VC,getWindowInfo:fp,hideKeyboard:QC,hideLoading:lA,hideNavigationBarLoading:gA,hideTabBar:EA,hideTabBarRedDot:OA,hideToast:sA,initUTSClassName:cg,initUTSIndexClassName:aT,initUTSPackageName:oT,initUTSProxyClass:lg,initUTSProxyFunction:rT,interceptors:Lm,invokePushCallback:Bf,loadFontFace:fA,login:Gp,makePhoneCall:bC,navigateBack:JT,navigateTo:wI,navigateToMiniProgram:qA,notifyBLECharacteristicValueChange:cC,offAccelerometerChange:YS,offAppHide:ub,offAppShow:lb,offCompassChange:jS,offError:ab,offKeyboardHeightChange:tO,offLocationChange:QO,offLocationChangeError:tA,offNetworkStatusChange:AC,offPageNotFound:ib,offPushMessage:gb,offThemeChange:RC,offUnhandledRejection:nb,offWindowResize:q_,onAccelerometerChange:GS,onAppHide:cb,onAppShow:sb,onBLECharacteristicValueChange:ZS,onBLEConnectionStateChange:JS,onBeaconServiceChange:gC,onBeaconUpdate:pC,onBluetoothAdapterStateChange:KS,onBluetoothDeviceFound:qS,onCompassChange:HS,onCreateVueApp:re.onCreateVueApp,onError:ob,onHostEventReceive:tg,onKeyboardHeightChange:eO,onLocaleChange:J_,onLocationChange:XO,onLocationChangeError:eA,onNativeEventReceive:KA,onNetworkStatusChange:OC,onPageNotFound:rb,onPushMessage:pb,onSocketClose:_O,onSocketError:vO,onSocketMessage:mO,onSocketOpen:gO,onTabBarMidButtonTap:z_,onThemeChange:kC,onUnhandledRejection:tb,onWindowResize:Y_,openAppAuthorizeSetting:LC,openBluetoothAdapter:XS,openDocument:TS,openLocation:KO,pageScrollTo:dA,preLogin:qp,preloadPage:xI,previewImage:UC,reLaunch:PI,readBLECharacteristicValue:uC,redirectTo:OI,registerRuntime:HA,registerUTSInterface:sT,registerUTSPlugin:lT,removeInterceptor:Dm,removeSavedFile:AS,removeStorage:hS,removeStorageSync:dS,removeTabBarBadge:CA,request:sO,requestPayment:YA,requireGlobal:xA,requireNativePlugin:Oa,requireUTSPlugin:cT,restoreGlobal:RA,saveFile:ES,saveImageToPhotosAlbum:GC,saveVideoToPhotosAlbum:WC,scanCode:NC,sendHostEvent:Qp,sendNativeEvent:bp,sendSocketMessage:hO,setBLEMTU:dC,setClipboardData:CC,setKeepScreenOn:MC,setLocale:Z_,setNavigationBarColor:mA,setNavigationBarTitle:hA,setPageMeta:X_,setScreenBrightness:BC,setStorage:cS,setStorageSync:lS,setTabBarBadge:_A,setTabBarItem:bA,setTabBarStyle:yA,share:WA,shareWithSystem:GA,showActionSheet:iA,showKeyboard:XC,showLoading:oA,showModal:nA,showNavigationBarLoading:pA,showTabBar:wA,showTabBarRedDot:SA,showToast:aA,startAccelerometer:mp,startBeaconDiscovery:mC,startBluetoothDevicesDiscovery:tC,startCompass:gp,startLocationUpdate:JO,startPullDownRefresh:cA,startSoterAuthentication:PC,stopAccelerometer:_p,stopBeaconDiscovery:_C,stopBluetoothDevicesDiscovery:nC,stopCompass:vp,stopLocationUpdate:ZO,stopPullDownRefresh:uA,switchTab:NI,syncDataToGlobal:BA,unPreloadPage:RI,uploadFile:yO,upx2px:Pm,vibrateLong:WS,vibrateShort:zS,weexGetSystemInfoSync:hu,writeBLECharacteristicValue:fC};let MI=K.extend(H,{publishHandler:DI});function DI(e,t,n){t=JSON.stringify(t),K.isArray(n)||(n=[n]);let r=`typeof UniViewJSBridge !== 'undefined' && UniViewJSBridge.subscribeHandler("${e}",${t},__PAGE_ID__)`;n.forEach(s=>{let u=String(s),g=l.webview.getWebviewById(u);g&&g.evalJS(r.replace("__PAGE_ID__",u))})}function LI(){let{tabBar:e}=R;if(!(e&&e.list&&e.list.length))return;let{entryPagePath:n}=R;e.selectedIndex=0;let r=e.list.findIndex(s=>s.pagePath===n);Mi.init(e,(s,u)=>{O.switchTab({url:re.addLeadingSlash(s.pagePath),openType:"switchTab",from:"tabBar",success(){zn(re.ON_TAB_ITEM_TAP,{index:u,text:s.text,pagePath:s.pagePath})}})}),r!==-1&&(e.selectedIndex=r,r!==0&&Mi.switchTab(n))}function FI(){let e=l.globalEvent,t=v.requireModule("globalEvent"),{emit:n,publishHandler:r}=_t;v.config.preload?l.key.addEventListener(Ea,La):e.addEventListener("splashclosed",()=>{l.key.addEventListener(Ea,La)}),e.addEventListener("pause",()=>{n(re.ON_APP_ENTER_BACKGROUND)}),e.addEventListener("resume",()=>{let u=Rl();u&&u.userAction&&Ss(u),n(re.ON_APP_ENTER_FOREGROUND,Uo())}),t.addEventListener("uistylechange",function(u){let g={theme:u.uistyle};n(re.ON_THEME_CHANGE,g),r(re.ON_THEME_CHANGE,g,Na()),RS()});let s=0;e.addEventListener("KeyboardHeightChange",function(u){s!==u.height&&(s=u.height,n(re.ON_KEYBOARD_HEIGHT_CHANGE,{height:s}))}),t.addEventListener(wT,function(u){u&&u.event&&JA(u.event,u.data)}),e.addEventListener("plusMessage",Vg),e.addEventListener("WebviewPostMessage",Vg)}function Vg({data:e}){e&&e.type&&_t.subscribeHandler("plusMessage."+e.type,e.args)}function Ug(e,t,n=!1){_t.subscribe("plusMessage."+e,t,n)}function VI(e){eb(e.$);let{entryPagePath:t,entryPageQuery:n,referrerInfo:r}=R,s=Za({path:t,query:n,referrerInfo:r});zn(e,re.ON_LAUNCH,s),zn(e,re.ON_SHOW,s);let u=v.requireModule("plus").getAppState;(u&&Number(u()))===2&&zn(e,re.ON_HIDE,s)}function $g(e){return e=e.replace(/\/$/,""),e.indexOf("_")===0?l.io.convertLocalFileSystemURL(e):e}function UI(){let e=$g(zs),t=$g(ni),n=t.split("/");n.pop();let r=n.join("/");l.io.resolveLocalFileSystemURL(l.io.convertAbsoluteFileSystem(r),s=>{s.createReader().readEntries(function(g){let E=g;E&&E.length&&E.forEach(function(U){U.isDirectory&&U.fullPath.indexOf(e)===0&&U.fullPath.indexOf(t)!==0&&U.removeRecursively()})})})}let Hg=0,Mc=0,Qu=null,Zl=null;function $I(e,t){if(Qu=null,Zl&&(C(Zl),Zl=null),e.type==="onFocus")if(Mc>0)e.detail.height=Mc;else{Zl=k(function(){e.detail.height=Mc,t(e)},Hg),Qu=function(){Zl&&(C(Zl),Zl=null),e.detail.height=Mc,t(e)};return}t(e)}function HI(){Hg=l.os.name.toLowerCase()==="android"?300:700,_t.on(re.ON_KEYBOARD_HEIGHT_CHANGE,t=>{if(Mc=t.height,Mc>0){let n=Qu;Qu=null,n&&n()}})}function jI(e,t,n){let r=t.type;r==="onFocus"||r==="onBlur"?$I(t,s=>{n.fireEvent(e,s)}):n.fireEvent(e,t)}function zI(e,t){let n=ia(parseInt(t));if(!n)return;let r=n.__page_container__;e.forEach(s=>{switch(s[0]){case re.ACTION_TYPE_EVENT:jI(s[1],s[2],r);break}})}let jg={};function WI(e,t,n){let{adpid:r,width:s}=e,u=r+"-"+s,g=jg[u];if(g&&g.length>0){t(g.splice(0,1)[0]);return}l.ad.getAds(e,E=>{let U=E.ads;t(U.splice(0,1)[0]),jg[u]=g?g.concat(U):U},E=>{n({errCode:E.code,errMsg:E.message})})}function GI(){M("getAdData",(e,t)=>{WI(e,n=>{t({code:0,data:n})},n=>{t({code:1,message:n})})})}let YI=["switchTab","reLaunch","redirectTo","navigateTo","navigateBack"];function qI(){YI.forEach(e=>{M(e,t=>{O[e](K.extend(t,{fail(n){console.error(n.errMsg)}}))})})}let zg=!1;function KI(e,t){let n=t==="1";if(!(n&&zg)){if(n?(zg=!0,yg(l.webview.getLaunchWebview())):go||yg(l.webview.getWebviewById(t)),!go.loaded){if(go.id!==t)return console.error(`webviewReady[${go.id}][${t}] not match`);go.loaded=!0}_t.emit(Bc+"."+t),n&&JI()}}function JI(){let{autoclose:e,alwaysShowBeforeRender:t}=R.splashscreen;e&&!t&&l.navigator.closeSplashscreen();let n=re.addLeadingSlash(R.entryPagePath),r=ho(n);if(!r.meta.isNVue){let s={url:n+(R.entryPageQuery||""),openType:"appLaunch"},u={resolve(){},reject(){}};return r.meta.isTabBar?Fg(s,u):Lg(s,u)}}function ZI(e,t){let n=ia(parseInt(t));n&&(n.__uniapp_webview=!0)}function XI(e,t){let n=ia(parseInt(t));n&&delete n.__uniapp_webview}let QI=({name:e,arg:t},n)=>{e==="postMessage"?eP(n[0],t):O[e](K.extend(t,{fail(r){console.error(r.errMsg)}}))};function eP(e,t){let n=tI("web-view",parseInt(e));n&&n.dispatchEvent(re.createUniEvent({type:"onMessage",target:Object.create(null),currentTarget:Object.create(null),detail:{data:[t]}}))}function tP({nodeId:e,ownerId:t,method:n,args:r},s){let u=Pg(e,parseInt(s));if(!u)return;let g=nP(t,u.__vueParentComponent);!g||!g[n]||g[n](r)}function nP(e,t){if(!t)return null;if(t.uid===e)return t.proxy;let n=t.parent;for(;n;){if(n.uid===e)return n.proxy;n=n.parent}return t.proxy}function rP(){let{subscribe:e,subscribeHandler:t,publishHandler:n}=_t;if(Ug("subscribeHandler",({type:r,data:s,pageId:u})=>{t(r,s,u)}),Ug(re.WEB_INVOKE_APPSERVICE,({data:r,webviewIds:s})=>{QI(r,s)}),R.renderer!=="native"){e(Bc,KI),e(jp,zI),y(),GI(),qI(),e(IA,ZI),e(PA,XI),e(re.ON_WXS_INVOKE_CALL_METHOD,tP);let r=ho(re.addLeadingSlash(R.entryPagePath));r&&!r.meta.isNVue&&n(Bc,{},1)}}let Dc,ad={globalData:{}};function iP({allowDefault:e=!1}={}){if(Dc)return Dc;if(e)return ad;console.error("[warn]: getApp() failed. Learn more: https://uniapp.dcloud.io/collocation/frame/window?id=getapp.")}function oP(e){if(O.Vuex&&e.$store){let{useStore:t}=O.Vuex;O.Vuex.useStore=n=>n?t(n):e.$store}ys(e),Dc=e,bt(Dc),K.extend(Dc,ad),Et(Dc,ad.globalData),je(),Mg(),LI(),FI(),HI(),rP(),VI(e),k(UI,1e4),R.ready=!0}var aP={uni:BI,getApp:iP,getCurrentPages:Ja,__definePage:hI,__registerApp:oP,__registerPage:yu,UniServiceJSBridge:MI};return aP}(Pt,en,T);pe=pe.default||pe;let O=pe.uni,Nt=pe.getApp,jn=pe.getCurrentPages,_t=pe.UniServiceJSBridge;return pe}var Av=WN(qN);var Tv=v=>{let{registerUTSInterface:l,initUTSProxyClass:b,initUTSProxyFunction:T,initUTSPackageName:k,initUTSIndexClassName:C,initUTSClassName:d}=v,m="DCloudUniFacialRecognitionVerify",R="FacialRecognitionVerify(\u5B9E\u4EBA\u8BA4\u8BC1)",We="built-in",Pt="",en=!0,pe=k(m,en),O=C(m,en);v.startFacialRecognitionVerify=T(!1,{moduleName:R,moduleType:We,errMsg:Pt,main:!0,package:pe,class:O,name:"startFacialRecognitionVerifyByJs",params:[{name:"faceStyle",type:"UTSSDKModulesDCloudUniFacialRecognitionVerifyStartFacialRecognitionVerifyOptionsJSONObject"}],return:""}),v.getFacialRecognitionMetaInfo=T(!1,{moduleName:R,moduleType:We,errMsg:Pt,main:!0,package:pe,class:O,name:"getFacialRecognitionMetaInfoByJs",params:[],return:""})};var Iv=v=>{};var Pv=v=>{};var Nv=v=>{};var kv=v=>{};var Rv=v=>{};var xv=v=>{};var Bv=v=>{};var Mv=v=>{};function Dv(v){Tv(v),Iv(v),Pv(v),Nv(v),kv(v),Rv(v),xv(v),Bv(v),Mv(v)}var Ad,Td,Id,Fs,Pd,Nd,kd;function Lv(){return Fs?{__definePage:Ad,__registerApp:Td,__registerPage:Id,uni:Fs,wx:Fs,getApp:Pd,getCurrentPages:Nd,UniServiceJSBridge:kd}:{}}function Fv(v){let{weex:l,plus:b,VueShared:T}=v;return Fs||({__definePage:Ad,__registerApp:Td,__registerPage:Id,uni:Fs,getApp:Pd,getCurrentPages:Nd,UniServiceJSBridge:kd}=Ov(l,b,v),Fs.VueShared=T,Dv(Fs),qg(Fs)),{__definePage:Ad,__registerApp:Td,__registerPage:Id,plus:b,uni:Fs,wx:Fs,getApp:Pd,getCurrentPages:Nd,UniServiceJSBridge:kd}}function Vv(v,l){let{__uniConfig:b}=l;if(!b)return;let T=l.weex;T.document.__$automator__=!!b.automator;let k=b.renderer!=="native"&&T.config.bundleUrl.indexOf("app-service.js")!==-1;if(Di(l,Lv()),k?Av(l):(Xg(v,l),_v(l.Vue.parseClassStyles)),Di(l,Fv(l)),T.config.plus_web_id==="1"){let R=T.requireModule("plus");R.setDefaultFontSize&&R.setDefaultFontSize(Math.round(l.plus.screen.resolutionWidth/20))}let{scale:C,deviceWidth:d,platform:m}=global.WXEnvironment;if(m.toLowerCase()==="ios"){let R=Math.ceil(d/C);T.requireModule("meta").setViewport({width:R,roundOffDeviation:!1})}}var rc=class extends nc{constructor(l){super();this.nodeType=8;this.type="comment";this.value="";this.value=l}toString(){return"<!-- "+this.value+" -->"}};function ha(v,l=[]){return{module:"dom",method:v,args:l}}var Hc=class{constructor(l,b){this.id=l,this.batched=!1,this.updates=[],Hn(b)?Object.defineProperty(this,"handler",{configurable:!0,enumerable:!0,writable:!0,value:b}):console.error("[JS Runtime] invalid parameter, handler must be a function")}createFinish(l){return this.handler([ha("createFinish")],l)}updateFinish(l){return this.handler([ha("updateFinish")],l)}refreshFinish(l){return this.handler([ha("refreshFinish")],l)}createBody(l){let b=l.toJSON(),T=b.children;delete b.children;let k=[ha("createBody",[b])];return T&&k.push.apply(k,T.map(C=>ha("addElement",[b.ref,C,-1]))),this.addActions(k)}addElement(l,b,T){return T>=0||(T=-1),this.addActions(ha("addElement",[b,l.toJSON(),T]))}removeElement(l){if(to(l)){let b=l.map(T=>ha("removeElement",[T]));return this.addActions(b)}return this.addActions(ha("removeElement",[l]))}moveElement(l,b,T){return this.addActions(ha("moveElement",[l,b,T]))}setAttr(l,b,T){return this.addActions(ha("updateAttrs",[l,{[b]:T}]))}setStyle(l,b,T){return this.addActions(ha("updateStyle",[l,{[b]:T}]))}setStyles(l,b){return this.addActions(ha("updateStyle",[l,b]))}addEvent(l,b){return this.addActions(ha("addEvent",[l,b]))}removeEvent(l,b){return this.addActions(ha("removeEvent",[l,b]))}handler(l,b){return b&&b()}addActions(l){let b=this.updates,T=this.handler;if(to(l)||(l=[l]),this.batched)b.push.apply(b,l);else return T(l)}};var Rd={createBody:"callCreateBody",addElement:"callAddElement",removeElement:"callRemoveElement",moveElement:"callMoveElement",updateAttrs:"callUpdateAttrs",updateStyle:"callUpdateStyle",addEvent:"callAddEvent",removeEvent:"callRemoveEvent"};function Uv(v,l){let b=l||global.callNative;return Hn(b)||console.error("[JS Runtime] no default handler"),function(k){to(k)||(k=[k]);for(let C=0;C<k.length;C++){let d=JN(v,k[C],b);if(d===-1)return d}}}function KN(v,l){return v==="dom"&&Rd[l]&&Hn(global[Rd[l]])}function JN(v,l,b){let{module:T,method:k,args:C}=l;return KN(T,k)?global[Rd[k]](v,...C,"-1"):b(v,[l],"-1")}var mf=class extends Ro{constructor(l){super();this.value=l,this.nodeType=3,this.type="text",this.value=""}toString(){return""+this.value}};var $v={slider:{change:function(v){return{index:v.index,source:v.source}},scroll:function(v){return{offsetXRatio:v.offsetXRatio,offsetYRatio:v.offsetYRatio,drag:v.drag}}},"scroll-view":{scrollend:function(v){return{contentOffset:v.contentOffset}}}};function Hv(v){let{attr:l,offsetLeft:b,offsetTop:T}=v,k={};return l&&Object.keys(l).forEach(C=>{C.indexOf("data-")===0&&(k[C.replace("data-","")]=l[C])}),{id:l&&l.id||"",dataset:k,offsetLeft:b||0,offsetTop:T||0}}var ZN=["a","div","list","cell","loading","refresh","recycle-list","scroller","indicator","waterfall","web","richtext"],XN=["viewappear","viewdisappear"],QN={markertap:["markerId"],controltap:["controlId"],regionchange:["causedBy"],end:["causedBy"],appear:["direction"],disappear:["direction"]};function jv(v,l){let b=v.type;if(XN.indexOf(b)!==-1)return v;let T=v.currentTarget,k=T.type.replace("u-","");if(ZN.indexOf(k)!==-1)return v;let{timestamp:C,target:d}=v;if(!l){let We=$v[k];We?Hn(We[b])?l=We[b](v):l=v.detail||{}:l=v.detail||{}}let m={type:b,timeStamp:C,target:Hv(d),currentTarget:Hv(T),detail:l,touches:b==="touchend"||b==="panend"?[]:v.changedTouches,changedTouches:v.changedTouches};v.componentId&&(m.componentId=v.componentId);let R=QN[b];return R&&R.forEach(We=>{Xl(v,We)&&(m[We]=v[We])}),m}function e1(v,l){let b=l.attrs||{};for(let k in b)v.setAttr(k,b[k],!0);let T=l.style||{};for(let k in T)v.setStyle(k,T[k],!0)}var Aa=class{constructor(l,b="",T){l=l?l.toString():"",this.id=l,this.URL=b,uv(l,this),this.nodeMap={};let k=Aa.Listener||Hc;this.listener=new k(l,T||Uv(l,Aa.handler)),this.taskCenter=new $c(l,T?(C,d)=>T(d):Aa.handler),this.createDocumentElement()}getRef(l){return this.nodeMap[l]}open(){this.listener.batched=!1}close(){this.listener.batched=!0}createDocumentElement(){if(!this.documentElement){let l=new Ro("document");l.docId=this.id,l.ownerDocument=this,l.role="documentElement",l.ref="_documentElement",this.nodeMap._documentElement=l,this.documentElement=l,Object.defineProperty(l,"appendChild",{configurable:!0,enumerable:!0,writable:!0,value:b=>{dd(this,b)}}),Object.defineProperty(l,"insertBefore",{configurable:!0,enumerable:!0,writable:!0,value:(b,T)=>{dd(this,b,T)}}),ir("debug")&&vo(`Create document element (id: "${l.docId}", ref: "${l.ref}")`)}return this.documentElement}createBody(l,b){if(!this.body){let T=new Ro(l,b);hd(this,T),ir("debug")&&vo(`[createBody](${this.id},${T.type},${T.ref}) (${JSON.stringify(T.toJSON(!0))}).`)}return this.body}createElement(l,b){let T=new Ro(l,b);return ir("debug")&&vo(`[createElement](${this.id},${T.type},${T.ref}) (${JSON.stringify(T.toJSON(!0))}).`),T}createComment(l){return new rc(l)}createText(l){return new mf(l)}fireEvent(l,b,T,k,C){if(!l)return;T=T||{},T.type=T.type||b,T.target=l,T.currentTarget=l,T.timestamp=Date.now(),k&&e1(l,k);let d=!0,m=this.getRef("_root");if(m&&m.attr){let R=m.attr.bubble;d=R==="true"||R===!0||d&&R===void 0}return T=jv(T),l.fireEvent(b,T,d,C)}destroy(){ir("debug")&&vo(`[destroy](${this.id},document) Destroy document (id: "${this.id}", URL: "${this.URL}")`),this.taskCenter.destroyCallback(),delete this.listener,delete this.nodeMap,delete this.taskCenter,fv(this.id)}};Aa.handler=null;var zv={InputElementDiv:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",InputElementRegExp:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",ReservedWord:"<Keyword>|<NullLiteral>|<BooleanLiteral>",WhiteSpace:/[\t\v\f\u0020\u00A0\u1680\u180E\u2000-\u200A\u202F\u205f\u3000\uFEFF]/,LineTerminator:/[\n\r\u2028\u2029]/,Keyword:/new(?![_$a-zA-Z0-9])|void(?![_$a-zA-Z0-9])|delete(?![_$a-zA-Z0-9])|in(?![_$a-zA-Z0-9])|instanceof(?![_$a-zA-Z0-9])|typeof(?![_$a-zA-Z0-9])/,NullLiteral:/null(?![_$a-zA-Z0-9])/,BooleanLiteral:/(?:true|false)(?![_$a-zA-Z0-9])/,Identifier:/[_$a-zA-Z][_$a-zA-Z0-9]*/,Punctuator:/\/|=>|\*\*|>>>=|>>=|<<=|===|!==|>>>|<<|%=|\*=|-=|\+=|<=|>=|==|!=|\^=|\|=|\|\||&&|&=|>>|\+\+|--|\:|}|\*|&|\||\^|!|~|-|\+|\?|%|=|>|<|,|;|\.(?![0-9])|\]|\[|\)|\(|{/,DivPunctuator:/\/=|\//,NumericLiteral:/(?:0[xX][0-9a-fA-F]*|\.[0-9]+|(?:[1-9]+[0-9]*|0)(?:\.[0-9]*|\.)?)(?:[eE][+-]{0,1}[0-9]+)?(?![_$a-zA-Z0-9])/,StringLiteral:/"(?:[^"\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*"|'(?:[^'\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*'/,RegularExpressionLiteral:/\/(?:\[(?:\\[\s\S]|[^\]])*\]|[^*\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])(?:\[(?:\\[\s\S]|[^\]])*\]|[^\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])*\/[0-9a-zA-Z]*/};function Wv(v,l,b){var T=[l];function k(d){var m=new RegExp;return m.compile(d.replace(/<([^>]+)>/g,function(R,We){return v[We]?(T.push(We),v[We]instanceof RegExp?"("+v[We].source+")":"("+k(v[We]).source+")"):""}),b),m}var C=k(v[l]);this.exec=function(d){var m=C.exec(d);if(m==null)return null;for(var R=new String(m[0]),We=0;We<T.length;We++)m[We]&&(R[T[We]]=m[We]);return R},Object.defineProperty(this,"lastIndex",{get:function(){return C.lastIndex},set:function(d){C.lastIndex=d}})}function t1(){var v=new Wv(zv,"InputElementDiv","g"),l=new Wv(zv,"InputElementRegExp","g"),b;Object.defineProperty(this,"source",{get:function(){return b},set:function(T){b=T,v.lastIndex=0,l.lastIndex=0}}),this.reset=function(){v.lastIndex=0,l.lastIndex=0},this.getNextToken=function(T){var k=v.lastIndex,C;T?C=v:C=l;var d=C.exec(b);if(d&&C.lastIndex-k>d.length)throw new SyntaxError("Unexpected token ILLEGAL");return v.lastIndex=C.lastIndex,l.lastIndex=C.lastIndex,d}}var Gv={IdentifierName:[["Identifier"]],Literal:[["NullLiteral"],["BooleanLiteral"],["NumericLiteral"],["StringLiteral"],["RegularExpressionLiteral"]],PrimaryExpression:[["Identifier"],["Literal"],["(","Expression",")"]],CallExpression:[["PrimaryExpression","Arguments"],["CallExpression","Arguments"]],Arguments:[["(",")"],["(","ArgumentList",")"]],ArgumentList:[["ConditionalExpression"],["ArgumentList",",","ConditionalExpression"]],LeftHandSideExpression:[["PrimaryExpression"],["CallExpression"]],UnaryExpression:[["LeftHandSideExpression"],["void","UnaryExpression"],["+","UnaryExpression"],["-","UnaryExpression"],["~","UnaryExpression"],["!","UnaryExpression"]],ExponentiationExpression:[["UnaryExpression"],["ExponentiationExpression","**","UnaryExpression"]],MultiplicativeExpression:[["MultiplicativeExpression","/","ExponentiationExpression"],["ExponentiationExpression"],["MultiplicativeExpression","*","ExponentiationExpression"],["MultiplicativeExpression","%","ExponentiationExpression"]],AdditiveExpression:[["MultiplicativeExpression"],["AdditiveExpression","+","MultiplicativeExpression"],["AdditiveExpression","-","MultiplicativeExpression"]],ShiftExpression:[["AdditiveExpression"],["ShiftExpression","<<","AdditiveExpression"],["ShiftExpression",">>","AdditiveExpression"],["ShiftExpression",">>>","AdditiveExpression"]],RelationalExpression:[["ShiftExpression"],["RelationalExpression","<","ShiftExpression"],["RelationalExpression",">","ShiftExpression"],["RelationalExpression","<=","ShiftExpression"],["RelationalExpression",">=","ShiftExpression"],["RelationalExpression","instanceof","ShiftExpression"],["RelationalExpression","in","ShiftExpression"]],EqualityExpression:[["RelationalExpression"],["EqualityExpression","==","RelationalExpression"],["EqualityExpression","!=","RelationalExpression"],["EqualityExpression","===","RelationalExpression"],["EqualityExpression","!==","RelationalExpression"]],BitwiseANDExpression:[["EqualityExpression"],["BitwiseANDExpression","&","EqualityExpression"]],BitwiseXORExpression:[["BitwiseANDExpression"],["BitwiseXORExpression","^","BitwiseANDExpression"]],BitwiseORExpression:[["BitwiseXORExpression"],["BitwiseORExpression","|","BitwiseXORExpression"]],LogicalANDExpression:[["BitwiseORExpression"],["LogicalANDExpression","&&","BitwiseORExpression"]],LogicalORExpression:[["LogicalANDExpression"],["LogicalORExpression","||","LogicalANDExpression"]],ConditionalExpression:[["LogicalORExpression"],["LogicalORExpression","?","LogicalORExpression",":","LogicalORExpression"]],Expression:[["ConditionalExpression"],["Expression",",","ConditionalExpression"]],Program:[["Expression"]]};function Au(v,l){this.name=v,this.token=l,this.childNodes=[],this.toString=function(b){if(b||(b=""),this.childNodes.length==1)return this.childNodes[0].toString(b);for(var T=b+this.name+(this.token!=null&&this.name!=this.token?":"+this.token:"")+`
`,k=0;k<this.childNodes.length;k++)T+=this.childNodes[k].toString(b+"    ");return T}}function n1(){var v,l={Program:"$"},b={};function T(m){b[JSON.stringify(m)]=m;for(var R=Object.getOwnPropertyNames(m);R.length;){var We=R.shift();!Gv[We]||Gv[We].forEach(function(en){m[en[0]]||R.push(en[0]);var pe=m,O=null;en.forEach(function(Nt){pe[Nt]||(pe[Nt]={}),O=pe,pe=pe[Nt]}),m[We].$div&&(pe.$div=!0),pe.$reduce=We,pe.$count=en.length})}for(var Pt in m)typeof m[Pt]!="object"||Pt.charAt(0)=="$"||m[Pt].$closure||(b[JSON.stringify(m[Pt])]?m[Pt]=b[JSON.stringify(m[Pt])]:T(m[Pt]));m.$closure=!0}T(l);var k=[],C=[l],d=l;this.insertSymbol=function(R,We){for(;!d[R.name]&&d.$reduce;){for(var Pt=d.$count,en=new Au(d.$reduce);Pt--;)en.childNodes.push(k.pop()),C.pop();d=C[C.length-1],this.insertSymbol(en)}if(d=d[R.name],k.push(R),C.push(d),!d)throw new Error;return d.$div},this.reset=function(){d=l,k=[],C=[l]},Object.defineProperty(this,"grammarTree",{get:function(){try{for(;d.$reduce;){for(var m=d.$count,R=new Au(d.$reduce);m--;)R.childNodes.push(k.pop()),C.pop();d=C[C.length-1],this.insertSymbol(R)}if(k.length>0&&d[";"])return this.insertSymbol(new Au(";",";")),this.grammarTree;if(k.length!=1||k[0].name!="Program")throw new Error}catch(We){throw new SyntaxError("Unexpected end of input")}return k[0]}})}function r1(){this.lexicalParser=new t1,this.syntacticalParser=new n1;var v=["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","RegularExpressionLiteral","Identifier","**","=>","{","}","(",")","[","]",".",";",",","<",">","<=",">=","==","!=","===","!==","+","-","*","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","=","+=","-=","*=","%=","<<=",">>=",">>>=","&=","|=","^=","/","/=","instanceof","typeof","new","void","debugger","this","delete","in"],l={};v.forEach(function(b){Object.defineProperty(l,b,{})}),this.reset=function(){this.lexicalParser.reset(),this.syntacticalParser.reset()},this.parse=function(b,T){var k,C=!1;this.lexicalParser.source=b;for(var d=!1;k=this.lexicalParser.getNextToken(d);){T&&T(k);try{if(Object.getOwnPropertyNames(k).some(m=>l.hasOwnProperty(m)?(d=this.syntacticalParser.insertSymbol(new Au(m,k),C),C=!1,!0):!1))continue;(k.Keyword||k.Punctuator||k.DivPunctuator)&&l.hasOwnProperty(k.toString())&&(d=this.syntacticalParser.insertSymbol(new Au(k.toString(),k),C))}catch(m){throw new SyntaxError("Unexpected token "+k)}}return this.syntacticalParser.grammarTree}}var Yv=new r1;function i1(v){Yv.reset(),this.tree=Yv.parse(v),this.paths=[];var l=Object.create(null),b=this,T=Object.create(null);this.isSimple,this.isConst,C(this.tree),k(this.tree),this.paths.length===0&&(this.isConst=!0),this.setter=function(R){for(var We=l,Pt=0;Pt<R.length-1;Pt++)We[R[Pt]]||(We[R[Pt]]=Object.create(null)),We=We[R[Pt]];return{isCompleted:function(){for(var en in T)if(!T[en])return!1;return!0},set:function(en){if(T[R.join(".")]||(T[R.join(".")]=!0),We[R[Pt]]=en,this.isCompleted())return b.exec()}}},this.valueOf=this.exec=function(){try{return function(){return(0,eval)(v)}.call(l)}catch(R){}};function k(R){for(var We=R;We.childNodes.length<=1&&We.name!=="MemberExpression";)We=We.childNodes[0];We.name==="MemberExpression"?b.isSimple=!0:b.isSimple=!1}function C(R){if(R.name==="CallExpression"&&R.childNodes[R.childNodes.length-1].name!=="CallExpression"){var We=d(R.childNodes[1]);C(R.childNodes[0])}else if(R.name==="NewExpression"&&R.childNodes.length===1)var We=d(R.childNodes[0]);else if(R.name==="MemberExpression"&&R.childNodes.length===1)var We=d(R);else for(var Pt=0;Pt<R.childNodes.length;Pt++)C(R.childNodes[Pt])}function d(R){if(R.childNodes[0].name==="IdentifierName"){var We=d(R.childNodes[2]);return We&&(We=We.concat(R.childNodes[0].childNodes[0].token.toString())),m(We),We}else if(R.childNodes[0].name==="PrimaryExpression")if(R.childNodes[0].childNodes[0].name==="Identifier"){var We=[R.childNodes[0].childNodes[0].token.toString()];return m(We),We}else return null;else{if(R.childNodes[0].name==="]")return d(R.childNodes[3]),C(R.childNodes[1]),null;if(R.childNodes[0].name==="Arguments")return C(R.childNodes[0]),C(R.childNodes[1]),null;for(var Pt=0;Pt<R.childNodes.length;Pt++)C(R.childNodes[Pt])}}function m(R){for(var We=l,Pt=0;Pt<R.length-1;Pt++)We[R[Pt]]||(We[R[Pt]]=Object.create(null)),We=We[R[Pt]];b.paths.push(R),T[R.join(".")]=!1}}function ic(v){var l=v.childNodes.slice().reverse(),b=l.filter(R=>!R.token||!R.token.Punctuator);if(v.name==="UnaryExpression"&&l.length===2&&l[0].name==="-"&&b.length===1){var T=ic(b[0]);return T.value=-T.value,T}if(v.name==="Arguments"){for(var k=[],C=b[0];C;)C.childNodes.length===3&&(k.unshift(C.childNodes[0]),C=C.childNodes[2]),C.childNodes.length===1&&(k.unshift(C.childNodes[0]),C=null);return{type:"Arguments",children:k.map(R=>ic(R))}}if(b&&b.length===1){var T=ic(b[0]);return T}if(v.token&&["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","Identifier"].some(R=>v.token[R])){var d=Object.keys(v.token).filter(R=>R.match(/Literal/)||R.match(/Identifier/))[0],m={NullLiteral:null,BooleanLiteral:Boolean(v.token),NumericLiteral:Number(v.token),StringLiteral:v.token,Identifier:v.token}[d];return{type:d,value:m}}return v.name==="CallExpression"?{type:"CallExpression",children:[ic(l[0]),ic(l[1])]}:{type:l.filter(R=>R.token&&R.token.Punctuator)[0].name,children:l.filter(R=>!R.token||!R.token.Punctuator).map(R=>ic(R))}}function qv(v){var l=new i1(v);return JSON.stringify(ic(l.tree),null)}function o1(v,l){return l==="bind"&&(v==="bindingx"||v==="binding")}function Kv(v){if(!v)return;try{v=JSON.parse(v)}catch(b){}let l={};if(Li(v)?l.origin=v:v&&(l.origin=v.origin,l.transformed=v.transformed),!(!l.transformed&&!l.origin))return l.transformed=l.transformed||qv(l.origin),l}function a1(v){return v&&(v.exitExpression=Kv(v.exitExpression),v.props&&v.props.forEach(l=>{l.expression=Kv(l.expression)}),v)}function s1(v){return function(l={}){if(Hn(v))return v({state:l.state==="end"?"exit":l.state,t:l.t!==void 0?l.t:l.deltaT})}}function Jv(v,l,b){return b&&(o1(v,l)?function(T,k=function(){}){if(!T)throw new Error("should pass options for binding");return a1(T),b(T,T&&T.eventType==="timing"?s1(k):k)}:b)}function l1(v,l){Object.defineProperty(v,"[[CurrentInstanceId]]",{value:l})}function Zv(v){return v["[[CurrentInstanceId]]"]}function c1(v,l,b){let T=Gr(v);return!T||!Hn(T.send)?(console.error(`[JS Framework] Failed to find taskCenter (${v}).`),null):(...k)=>T.send("module",{module:l,method:b},k)}function u1(v,l,b,T){let k=Gr(v);return!k||!Hn(k.send)?(console.error(`[JS Framework] Failed to find taskCenter (${v}).`),null):Hn(T)?C=>k.send("module",{module:l,method:b},[C]):(console.error(`[JS Framework] ${l}.${b} must be assigned as a function.`),null)}var _f=class{constructor(l,b){l1(this,String(l)),this.config=b||{},this.document=new Aa(l,this.config.bundleUrl),this.requireModule=this.requireModule.bind(this),this.importScript=this.importScript.bind(this),this.isRegisteredModule=pf,this.isRegisteredComponent=Cd}requireModule(l){let b=Zv(this);if(!(b&&this.document&&this.document.taskCenter)){console.error(`[JS Framework] Failed to requireModule("${l}"), instance (${b}) doesn't exist anymore.`);return}if(!pf(l)){console.warn(`[JS Framework] \u5F53\u524D\u8FD0\u884C\u7684\u57FA\u5EA7\u4E0D\u5305\u542B\u539F\u751F\u63D2\u4EF6[${l}]\uFF0C\u8BF7\u5728manifest\u4E2D\u914D\u7F6E\u8BE5\u63D2\u4EF6\uFF0C\u91CD\u65B0\u5236\u4F5C\u5305\u62EC\u8BE5\u539F\u751F\u63D2\u4EF6\u7684\u81EA\u5B9A\u4E49\u8FD0\u884C\u57FA\u5EA7`);return}let T={},k=Sv(l);for(let C in k)Object.defineProperty(T,C,{enumerable:!0,configurable:!0,get:()=>Jv(l,C,c1(b,l,C)),set:d=>u1(b,l,C,d)});return T}supports(l){if(!Li(l))return null;let b=l.match(/^@(\w+)\/([\w-]+)(\.(\w+))?$/i);if(b){let T=b[1],k=b[2],C=b[4];switch(T){case"module":return pf(k,C);case"component":return Cd(k)}}return null}importScript(l,b={}){let T=Zv(this),k=Gr(T);return new Promise(function(C,d){if(!k||!Hn(k.send))return d(new Error(`[JS Framework] Failed to import script "${l}", no taskCenter (${T}) matched.`));try{k.send("module",{module:"script",method:"importScript"},[l,b],{callback:[m=>C(m),m=>d(m)]})}catch(m){d(m)}})}};function f1(v,l){let b=Object.create(null);return b.service=Object.create(null),Il.forEach(({name:T,options:k})=>{let C=k.create;if(C)try{let d=C(v,l);Di(b.service,d),Di(b,d.instance)}catch(d){console.error(`[JS Runtime] Failed to create service ${T}.`)}}),delete b.service.instance,ps(b.service),b}var d1={uid:0},h1=av(wu),p1=ov(wu);function Xv(v,l,b){let T=new _f(v,l),k="Vue",C=f1(v,{weex:T,nvue:T,config:l,created:Date.now(),framework:k});ps(C);let d=Object.create(null);return Di(d,E1(T)),Di(d,C,{SharedObject:d1,weex:T,nvue:T,requireModule:m=>T.requireModule(m),__WEEX_CALL_JAVASCRIPT__:wd,services:C}),d.plus=new d.WeexPlus(T),d.VueShared=wu,d.UniShared=h1,d.VueReactivity=p1,Vv(v,d),ps(d),d}function g1(v,l,b={}){let T="Vue";b=ud(b),b.env=ud(global.WXEnvironment||{}),b.bundleType=T;let k=Xv(v,b);v1(l,k)}function v1(v,l){let b=[],T=[];for(let d in l)b.push(d),T.push(l[d]);let C="(function (global) { "+`
global = (function () {
  var g
  // This works in non-strict mode
  g = (function () {
    return this
  })()
  try {
    // This works if eval is allowed (see CSP)
    g = g || new Function("return this")()
  } catch (e) {
    // This works if the window reference is available
    if (typeof window === "object") g = window
  }
  return g
})() || global;
`+v+" })(Object.create(this))";return new Function(...b,C)(...T)}function m1(v){let l=rl(v);try{if(l&&l.body)return l.body.toJSON()}catch(b){console.error("[JS Framework] Failed to get the virtual dom tree.");return}}function _1(v){Jg(v),Il.forEach(l=>{let b=l.options.destroy;b&&b(v)})}function b1(v){Zg(v),Il.forEach(l=>{let b=l.options.refresh;b&&b(v)})}var y1={createInstance:g1,createInstanceContext:Xv,getRoot:m1,getDocument:rl,registerService:gf,unregisterService:vf,callJS(v,l){return wd(v,l)},registerComponents:Cv,registerModules:wv,destroyInstance:_1,refreshInstance:b1};function xd(){return Ev(),y1}function E1(v){if(global.setTimeout&&global.setInterval)return{setTimeout:global.setTimeout,setInterval:global.setInterval,clearTimeout:global.clearTimeout,clearInterval:global.clearInterval};let l=v.requireModule("timer");return{setTimeout:(...T)=>{let k=function(){T[0](...T.slice(2))};return l.setTimeout(k,T[1]),v.document.taskCenter.callbackManager.lastCallbackId.toString()},setInterval:(...T)=>{let k=function(){T[0](...T.slice(2))};return l.setInterval(k,T[1]),v.document.taskCenter.callbackManager.lastCallbackId.toString()},clearTimeout:T=>{l.clearTimeout(T)},clearInterval:T=>{l.clearInterval(T)}}}var Qv={Document:Aa,Element:Ro,Comment:rc,Listener:Hc,TaskCenter:$c,sendTasks(...v){return Hn(callNative)?callNative(...v):(global.callNative||(()=>{}))(...v)}};Aa.handler=Qv.sendTasks;var oc=Qv;function w1(){ps(oc.Comment),ps(oc.Listener),ps(oc.Document.prototype),ps(oc.Comment.prototype),ps(oc.Listener.prototype)}var bf={service:{register:gf,unregister:vf,has:Od},freezePrototype:w1,init:xd,config:oc};var Bd=class{constructor(l,b={}){this.type=l||"message",this.data=b.data||null,this.origin=b.origin||"",this.source=b.source||null,this.ports=b.ports||[],this.target=null,this.timeStamp=Date.now()}};var Pl={},Tu={};function Md(){}Md.prototype.postMessage=function(v){if(this._closed)throw new Error(`BroadcastChannel "${this.name}" is closed.`);let l=Pl[this.name];if(l&&l.length)for(let b=0;b<l.length;++b){let T=l[b];T._closed||T===this||Hn(T.onmessage)&&T.onmessage(new Bd("message",{data:v}))}};Md.prototype.close=function(){if(!this._closed&&(this._closed=!0,Pl[this.name])){let v=Pl[this.name].filter(l=>l!==this);v.length?Pl[this.name]=v:delete Pl[this.name]}};var em={create:v=>{if(Tu[v]=[],Hn(global.BroadcastChannel))return{};let l={BroadcastChannel:function(b){Object.defineProperty(this,"name",{configurable:!1,enumerable:!0,writable:!1,value:String(b)}),this._closed=!1,this.onmessage=null,Pl[this.name]||(Pl[this.name]=[]),Pl[this.name].push(this),Tu[v].push(this)}};return l.BroadcastChannel.prototype=Md.prototype,{instance:l}},destroy:v=>{Tu[v]&&(Tu[v].forEach(l=>l.close()),delete Tu[v])}};function Dd(){let{init:v}=bf;bf.service.register("BroadcastChannel",em),bf.freezePrototype();let l=v();for(let b in l)global[b]=(...T)=>{let k=l[b](...T);return k instanceof Error&&console.error(k.toString()),k}}var xx=global.console;function tm(){if(lv(),global.WXEnvironment&&global.WXEnvironment.platform!=="Web")global.console={debug:(...v)=>{ir("debug")&&global.nativeLog(...Iu(v),"__DEBUG")},log:(...v)=>{ir("log")&&global.nativeLog(...Iu(v),"__LOG")},info:(...v)=>{ir("info")&&global.nativeLog(...Iu(v),"__INFO")},warn:(...v)=>{ir("warn")&&global.nativeLog(...Iu(v),"__WARN")},error:(...v)=>{ir("error")&&global.nativeLog(...Iu(v),"__ERROR")}};else{let{debug:v,log:l,info:b,warn:T,error:k}=console;console.__ori__={debug:v,log:l,info:b,warn:T,error:k},console.debug=(...C)=>{ir("debug")&&console.__ori__.debug.apply(console,C)},console.log=(...C)=>{ir("log")&&console.__ori__.log.apply(console,C)},console.info=(...C)=>{ir("info")&&console.__ori__.info.apply(console,C)},console.warn=(...C)=>{ir("warn")&&console.__ori__.warn.apply(console,C)},console.error=(...C)=>{ir("error")&&console.__ori__.error.apply(console,C)}}}function Iu(v){return v.map(l=>{if(Ls(l).toLowerCase()==="[object object]")try{l=JSON.stringify(l)}catch(T){l="[object object]"}else l=String(l);return l})}tm();Dd();})();
